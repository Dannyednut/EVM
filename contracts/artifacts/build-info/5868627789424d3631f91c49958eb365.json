{
	"id": "5868627789424d3631f91c49958eb365",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PremaidV3.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\n\r\npragma solidity ^0.8.0;\r\npragma abicoder v2;\r\n\r\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol';\r\nimport '@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol';\r\nimport '@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol';\r\nimport '@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol';\r\nimport '@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol';\r\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\nimport '@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol';\r\n\r\n\r\n/// @title Flash contract implementation\r\n/// @notice An example contract using the Uniswap V3 flash function\r\ncontract PairFlash is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {\r\n    using LowGasSafeMath for uint256;\r\n    using LowGasSafeMath for int256;\r\n\r\n    ISwapRouter public immutable swapRouter;\r\n\r\n    constructor(\r\n        ISwapRouter _swapRouter,\r\n        address _factory,\r\n        address _WETH9\r\n    ) PeripheryImmutableState(_factory, _WETH9) {\r\n        swapRouter = _swapRouter;\r\n    }\r\n\r\n    /// @param fee0 The fee from calling flash for token0\r\n    /// @param fee1 The fee from calling flash for token1\r\n    /// @param data The data needed in the callback passed as FlashCallbackData from `initFlash`\r\n    /// @notice implements the callback called from flash\r\n    /// @dev fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed\r\n    function uniswapV3FlashCallback(\r\n        uint256 fee0,\r\n        uint256 fee1,\r\n        bytes calldata data\r\n    ) external override {\r\n        FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData));\r\n        CallbackValidation.verifyCallback(factory, decoded.poolKey);\r\n\r\n        address token0 = decoded.poolKey.token0;\r\n        address token1 = decoded.poolKey.token1;\r\n\r\n        TransferHelper.safeApprove(token0, address(swapRouter), decoded.amount0);\r\n        TransferHelper.safeApprove(token1, address(swapRouter), decoded.amount1);\r\n\r\n        // profitable check\r\n        // exactInputSingle will fail if this amount not met\r\n        uint256 amount1Min = LowGasSafeMath.add(decoded.amount1, fee1);\r\n        uint256 amount0Min = LowGasSafeMath.add(decoded.amount0, fee0);\r\n\r\n        // call exactInputSingle for swapping token1 for token0 in pool w/fee2\r\n        uint256 amountOut0 =\r\n            swapRouter.exactInputSingle(\r\n                ISwapRouter.ExactInputSingleParams({\r\n                    tokenIn: token1,\r\n                    tokenOut: token0,\r\n                    fee: decoded.poolFee2,\r\n                    recipient: address(this),\r\n                    deadline: block.timestamp,\r\n                    amountIn: decoded.amount1,\r\n                    amountOutMinimum: amount0Min,\r\n                    sqrtPriceLimitX96: 0\r\n                })\r\n            );\r\n\r\n        // call exactInputSingle for swapping token0 for token 1 in pool w/fee3\r\n        uint256 amountOut1 =\r\n            swapRouter.exactInputSingle(\r\n                ISwapRouter.ExactInputSingleParams({\r\n                    tokenIn: token0,\r\n                    tokenOut: token1,\r\n                    fee: decoded.poolFee3,\r\n                    recipient: address(this),\r\n                    deadline: block.timestamp,\r\n                    amountIn: decoded.amount0,\r\n                    amountOutMinimum: amount1Min,\r\n                    sqrtPriceLimitX96: 0\r\n                })\r\n            );\r\n\r\n        // end up with amountOut0 of token0 from first swap and amountOut1 of token1 from second swap\r\n        uint256 amount0Owed = LowGasSafeMath.add(decoded.amount0, fee0);\r\n        uint256 amount1Owed = LowGasSafeMath.add(decoded.amount1, fee1);\r\n\r\n        TransferHelper.safeApprove(token0, address(this), amount0Owed);\r\n        TransferHelper.safeApprove(token1, address(this), amount1Owed);\r\n\r\n        if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed);\r\n        if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed);\r\n\r\n        // if profitable pay profits to payer\r\n        if (amountOut0 > amount0Owed) {\r\n            uint256 profit0 = LowGasSafeMath.sub(amountOut0, amount0Owed);\r\n\r\n            TransferHelper.safeApprove(token0, address(this), profit0);\r\n            pay(token0, address(this), decoded.payer, profit0);\r\n        }\r\n        if (amountOut1 > amount1Owed) {\r\n            uint256 profit1 = LowGasSafeMath.sub(amountOut1, amount1Owed);\r\n            TransferHelper.safeApprove(token0, address(this), profit1);\r\n            pay(token1, address(this), decoded.payer, profit1);\r\n        }\r\n    }\r\n\r\n    //fee1 is the fee of the pool from the initial borrow\r\n    //fee2 is the fee of the first pool to arb from\r\n    //fee3 is the fee of the second pool to arb from\r\n    struct FlashParams {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee1;\r\n        uint256 amount0;\r\n        uint256 amount1;\r\n        uint24 fee2;\r\n        uint24 fee3;\r\n    }\r\n    // fee2 and fee3 are the two other fees associated with the two other pools of token0 and token1\r\n    struct FlashCallbackData {\r\n        uint256 amount0;\r\n        uint256 amount1;\r\n        address payer;\r\n        PoolAddress.PoolKey poolKey;\r\n        uint24 poolFee2;\r\n        uint24 poolFee3;\r\n    }\r\n\r\n    /// @param params The parameters necessary for flash and the callback, passed in as FlashParams\r\n    /// @notice Calls the pools flash function with data needed in `uniswapV3FlashCallback`\r\n    function initFlash(FlashParams memory params) external {\r\n        PoolAddress.PoolKey memory poolKey =\r\n            PoolAddress.PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1});\r\n        IUniswapV3Pool pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));\r\n        // recipient of borrowed amounts\r\n        // amount of token0 requested to borrow\r\n        // amount of token1 requested to borrow\r\n        // need amount 0 and amount1 in callback to pay back pool\r\n        // recipient of flash should be THIS contract\r\n        pool.flash(\r\n            address(this),\r\n            params.amount0,\r\n            params.amount1,\r\n            abi.encode(\r\n                FlashCallbackData({\r\n                    amount0: params.amount0,\r\n                    amount1: params.amount1,\r\n                    payer: msg.sender,\r\n                    poolKey: poolKey,\r\n                    poolFee2: params.fee2,\r\n                    poolFee3: params.fee3\r\n                })\r\n            )\r\n        );\r\n    }\r\n}\r\n"
			},
			"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.6;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nimport '@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol';\n\nimport '../libraries/TransferHelper.sol';\n\nimport './PeripheryImmutableState.sol';\n\n/// @title Interface for WETH9\ninterface IWETH9 is IERC20 {\n    /// @notice Deposit ether to get wrapped ether\n    function deposit() external payable;\n\n    /// @notice Withdraw wrapped ether to get ether\n    function withdraw(uint256) external;\n}\n\nabstract contract PeripheryPayments is IPeripheryPayments, PeripheryImmutableState {\n    receive() external payable {\n        require(msg.sender == WETH9, 'Not WETH9');\n    }\n\n    /// @inheritdoc IPeripheryPayments\n    function unwrapWETH9(uint256 amountMinimum, address recipient) public payable override {\n        uint256 balanceWETH9 = IWETH9(WETH9).balanceOf(address(this));\n        require(balanceWETH9 >= amountMinimum, 'Insufficient WETH9');\n\n        if (balanceWETH9 > 0) {\n            IWETH9(WETH9).withdraw(balanceWETH9);\n            TransferHelper.safeTransferETH(recipient, balanceWETH9);\n        }\n    }\n\n    /// @inheritdoc IPeripheryPayments\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) public payable override {\n        uint256 balanceToken = IERC20(token).balanceOf(address(this));\n        require(balanceToken >= amountMinimum, 'Insufficient token');\n\n        if (balanceToken > 0) {\n            TransferHelper.safeTransfer(token, recipient, balanceToken);\n        }\n    }\n\n    /// @inheritdoc IPeripheryPayments\n    function refundETH() external payable override {\n        if (address(this).balance > 0) TransferHelper.safeTransferETH(msg.sender, address(this).balance);\n    }\n\n    /// @param token The token to pay\n    /// @param payer The entity that must pay\n    /// @param recipient The entity that will receive payment\n    /// @param value The amount to pay\n    function pay(\n        address token,\n        address payer,\n        address recipient,\n        uint256 value\n    ) internal {\n        if (token == WETH9 && address(this).balance >= value) {\n            // pay with WETH9\n            IWETH9(WETH9).deposit{value: value}(); // wrap only what is needed to pay\n            IWETH9(WETH9).transfer(recipient, value);\n        } else if (payer == address(this)) {\n            // pay with tokens already in the contract (for the exact input multihop case)\n            TransferHelper.safeTransfer(token, recipient, value);\n        } else {\n            // pull payment\n            TransferHelper.safeTransferFrom(token, payer, recipient, value);\n        }\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.6;\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport './PoolAddress.sol';\n\n/// @notice Provides validation for callbacks from Uniswap V3 Pools\nlibrary CallbackValidation {\n    /// @notice Returns the address of a valid Uniswap V3 Pool\n    /// @param factory The contract address of the Uniswap V3 factory\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The V3 pool contract address\n    function verifyCallback(\n        address factory,\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal view returns (IUniswapV3Pool pool) {\n        return verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee));\n    }\n\n    /// @notice Returns the address of a valid Uniswap V3 Pool\n    /// @param factory The contract address of the Uniswap V3 factory\n    /// @param poolKey The identifying key of the V3 pool\n    /// @return pool The V3 pool contract address\n    function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)\n        internal\n        view\n        returns (IUniswapV3Pool pool)\n    {\n        pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));\n        require(msg.sender == address(pool));\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.6;\n\nimport '@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol';\n\n/// @title Immutable state\n/// @notice Immutable state used by periphery contracts\nabstract contract PeripheryImmutableState is IPeripheryImmutableState {\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override factory;\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override WETH9;\n\n    constructor(address _factory, address _WETH9) {\n        factory = _factory;\n        WETH9 = _WETH9;\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\n        require(key.token0 < key.token1);\n        bytes32 poolHash =keccak256(\n            abi.encodePacked(\n                hex'ff',\n                factory,\n                keccak256(abi.encode(key.token0, key.token1, key.fee)),\n                POOL_INIT_CODE_HASH\n            )\n        );\n        pool = address(uint160(uint256(poolHash)));\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.0;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nlibrary LowGasSafeMath {\n    /// @notice Returns x + y, reverts if sum overflows uint256\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    /// @notice Returns x - y, reverts if underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    /// @notice Returns x * y, reverts if overflows\n    /// @param x The multiplicand\n    /// @param y The multiplier\n    /// @return z The product of x and y\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(x == 0 || (z = x * y) / x == y);\n    }\n\n    /// @notice Returns x + y, reverts if overflows or underflows\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x + y) >= x == (y >= 0));\n    }\n\n    /// @notice Returns x - y, reverts if overflows or underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x - y) <= x == (y >= 0));\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#flash\n/// @notice Any contract that calls IUniswapV3PoolActions#flash must implement this interface\ninterface IUniswapV3FlashCallback {\n    /// @notice Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash.\n    /// @dev In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// @param fee0 The fee amount in token0 due to the pool by the end of the flash\n    /// @param fee1 The fee amount in token1 due to the pool by the end of the flash\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#flash call\n    function uniswapV3FlashCallback(\n        uint256 fee0,\n        uint256 fee1,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.7.6;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol": {
				"IUniswapV3FlashCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fee0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3FlashCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3FlashCallback(uint256,uint256,bytes)": {
								"details": "In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.",
								"params": {
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#flash call",
									"fee0": "The fee amount in token0 due to the pool by the end of the flash",
									"fee1": "The fee amount in token1 due to the pool by the end of the flash"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#flash",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3FlashCallback(uint256,uint256,bytes)": "e9cbafb0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3FlashCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#flash call\",\"fee0\":\"The fee amount in token0 due to the pool by the end of the flash\",\"fee1\":\"The fee amount in token1 due to the pool by the end of the flash\"}}},\"title\":\"Callback for IUniswapV3PoolActions#flash\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#flash must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol\":\"IUniswapV3FlashCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol\":{\"keccak256\":\"0x151ba1777392771025f0fca946c95fbc16ec4b5eff05e1f236115b99bd574de2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://738a50c25d9d26ca3fabb1865bf6a0cdd8d7a2eec9dbfbd1fc000c81fb8e2b5e\",\"dweb:/ipfs/QmQjgCiLhrq5eLJgQcVHV24MRHyf6YdVzrGH8Ms7LnSSRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3FlashCallback(uint256,uint256,bytes)": {
								"notice": "Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#flash must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
				"LowGasSafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c4415e23a8e27ab955662ee82b9a1ac7d44d3ae5259e85704ce3cbe3d024991f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c4415e23a8e27ab955662ee82b9a1ac7d44d3ae5259e85704ce3cbe3d024991f64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 COINBASE 0x5E 0x23 0xA8 0xE2 PUSH27 0xB955662EE82B9A1AC7D44D3AE5259E85704CE3CBE3D024991F6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "249:1446:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c4415e23a8e27ab955662ee82b9a1ac7d44d3ae5259e85704ce3cbe3d024991f64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 COINBASE 0x5E 0x23 0xA8 0xE2 PUSH27 0xB955662EE82B9A1AC7D44D3AE5259E85704CE3CBE3D024991F6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "249:1446:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(int256,int256)": "infinite",
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(int256,int256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4415e23a8e27ab955662ee82b9a1ac7d44d3ae5259e85704ce3cbe3d024991f64736f6c63430008140033",
									".code": [
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
								"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/PremaidV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":\"LowGasSafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
				"PeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"WETH9": {
								"return": "Returns the address of WETH9",
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory": {
								"return": "Returns the address of the Uniswap V3 factory",
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"WETH9\":{\"return\":\"Returns the address of WETH9\",\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory\":{\"return\":\"Returns the address of the Uniswap V3 factory\",\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Immutable state used by periphery contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":\"PeripheryImmutableState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0x969099de81e122fa24a6f60e8dad7eb76f12e3bc15b9f45d4360e7185df8a94f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://68b174f33a501774a059c0d93f2e827bacce086d4b17c5c06c01e9eda3af89f8\",\"dweb:/ipfs/QmQHAGmzjSDnSAxfXv1Xs5TAhhsqFGNNTHJgGc6k6wa8ff\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Immutable state used by periphery contracts",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol": {
				"IWETH9": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "Interface for WETH9",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":\"IWETH9\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0x969099de81e122fa24a6f60e8dad7eb76f12e3bc15b9f45d4360e7185df8a94f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://68b174f33a501774a059c0d93f2e827bacce086d4b17c5c06c01e9eda3af89f8\",\"dweb:/ipfs/QmQHAGmzjSDnSAxfXv1Xs5TAhhsqFGNNTHJgGc6k6wa8ff\"]},\"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":{\"keccak256\":\"0x46be79543feb5e84b0fd9513337d35e99be6a3e844424682d4587ed0d6db82bc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9c84201759bb7e261584162ab73b4b392f3f5f6c40dc8599c53c9ce5f1be60ef\",\"dweb:/ipfs/QmWY6mJHZ9sLHwrFUL6tQSr2F6wEGLxkJBMV4wPi6pgT9L\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit()": {
								"notice": "Deposit ether to get wrapped ether"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw wrapped ether to get ether"
							}
						},
						"version": 1
					}
				},
				"PeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155",
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":\"PeripheryPayments\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0x969099de81e122fa24a6f60e8dad7eb76f12e3bc15b9f45d4360e7185df8a94f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://68b174f33a501774a059c0d93f2e827bacce086d4b17c5c06c01e9eda3af89f8\",\"dweb:/ipfs/QmQHAGmzjSDnSAxfXv1Xs5TAhhsqFGNNTHJgGc6k6wa8ff\"]},\"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":{\"keccak256\":\"0x46be79543feb5e84b0fd9513337d35e99be6a3e844424682d4587ed0d6db82bc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9c84201759bb7e261584162ab73b4b392f3f5f6c40dc8599c53c9ce5f1be60ef\",\"dweb:/ipfs/QmWY6mJHZ9sLHwrFUL6tQSr2F6wEGLxkJBMV4wPi6pgT9L\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9c14be08df9786383ce137d45f2b92d5bfea14cc98d24b7dd4a802b29be12e1a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d1bb0b0590412b68030d3e47a3b46b56bdb83dcc9e349ad029de64f58e8593d4\",\"dweb:/ipfs/Qme9yxt9ihCxbLBACGAL7WWmzF1huNpm4opNXREZS3H43k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol": {
				"CallbackValidation": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":235:1471  library CallbackValidation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":235:1471  library CallbackValidation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f8aae109649880c6988b2d0231fb10d183e51f97a4f8e7e9b97e8159885133ea64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f8aae109649880c6988b2d0231fb10d183e51f97a4f8e7e9b97e8159885133ea64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xAA 0xE1 MULMOD PUSH5 0x9880C6988B 0x2D MUL BALANCE 0xFB LT 0xD1 DUP4 0xE5 0x1F SWAP8 LOG4 0xF8 0xE7 0xE9 0xB9 PUSH31 0x8159885133EA64736F6C634300081400330000000000000000000000000000 ",
							"sourceMap": "235:1236:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f8aae109649880c6988b2d0231fb10d183e51f97a4f8e7e9b97e8159885133ea64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xAA 0xE1 MULMOD PUSH5 0x9880C6988B 0x2D MUL BALANCE 0xFB LT 0xD1 DUP4 0xE5 0x1F SWAP8 LOG4 0xF8 0xE7 0xE9 0xB9 PUSH31 0x8159885133EA64736F6C634300081400330000000000000000000000000000 ",
							"sourceMap": "235:1236:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"verifyCallback(address,address,address,uint24)": "infinite",
								"verifyCallback(address,struct PoolAddress.PoolKey memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 235,
									"end": 1471,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f8aae109649880c6988b2d0231fb10d183e51f97a4f8e7e9b97e8159885133ea64736f6c63430008140033",
									".code": [
										{
											"begin": 235,
											"end": 1471,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 235,
											"end": 1471,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 235,
											"end": 1471,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 235,
											"end": 1471,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 235,
											"end": 1471,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 1471,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 235,
											"end": 1471,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 1471,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 235,
											"end": 1471,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
								"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/PremaidV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides validation for callbacks from Uniswap V3 Pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":\"CallbackValidation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":{\"keccak256\":\"0xd525429de4363e28607dae2e5803ac1708405a3043bceef00c8e09ecf9b39800\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://424bc3668d08303cf9c5fd7b29bc05884328abb50394d62a2b658727457599a1\",\"dweb:/ipfs/QmciZR4eXqrCNhHWeZjtJrmCHfsz5FooiYjQV67RvDQidA\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xe685c3d70b97e25e063930cf3ebc969c0e9ceff2fa2753b07469c156dd770d25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://82c6562653dac6294174e78493c6292978d56dd81f0395ee1fdd5c2bda9c0ce1\",\"dweb:/ipfs/QmaYu9Wy3mdn9HWxGpyjSjVxGDB4i9DG2hQ6rUummM3q7e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides validation for callbacks from Uniswap V3 Pools",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":167:1756  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":167:1756  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220042aa02d001612501a1f53eef3646dd601f23631d83659497756d6ec4741605964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220042aa02d001612501a1f53eef3646dd601f23631d83659497756d6ec4741605964736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x2A LOG0 0x2D STOP AND SLT POP BYTE 0x1F MSTORE8 0xEE RETURN PUSH5 0x6DD601F236 BALANCE 0xD8 CALLDATASIZE MSIZE 0x49 PUSH24 0x56D6EC4741605964736F6C63430008140033000000000000 ",
							"sourceMap": "167:1589:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220042aa02d001612501a1f53eef3646dd601f23631d83659497756d6ec4741605964736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x2A LOG0 0x2D STOP AND SLT POP BYTE 0x1F MSTORE8 0xEE RETURN PUSH5 0x6DD601F236 BALANCE 0xD8 CALLDATASIZE MSIZE 0x49 PUSH24 0x56D6EC4741605964736F6C63430008140033000000000000 ",
							"sourceMap": "167:1589:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 167,
									"end": 1756,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220042aa02d001612501a1f53eef3646dd601f23631d83659497756d6ec4741605964736f6c63430008140033",
									".code": [
										{
											"begin": 167,
											"end": 1756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 167,
											"end": 1756,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 167,
											"end": 1756,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 167,
											"end": 1756,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 1756,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 1756,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 167,
											"end": 1756,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1756,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 167,
											"end": 1756,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
								"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/PremaidV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xe685c3d70b97e25e063930cf3ebc969c0e9ceff2fa2753b07469c156dd770d25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://82c6562653dac6294174e78493c6292978d56dd81f0395ee1fdd5c2bda9c0ce1\",\"dweb:/ipfs/QmaYu9Wy3mdn9HWxGpyjSjVxGDB4i9DG2hQ6rUummM3q7e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206bc78ee8e076056971b011dc6d407931a28fff958ee5382b715f0e24a7324b0264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206bc78ee8e076056971b011dc6d407931a28fff958ee5382b715f0e24a7324b0264736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xC78EE8E076056971B011DC6D BLOCKHASH PUSH26 0x31A28FFF958EE5382B715F0E24A7324B0264736F6C6343000814 STOP CALLER ",
							"sourceMap": "129:2408:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206bc78ee8e076056971b011dc6d407931a28fff958ee5382b715f0e24a7324b0264736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xC78EE8E076056971B011DC6D BLOCKHASH PUSH26 0x31A28FFF958EE5382B715F0E24A7324B0264736F6C6343000814 STOP CALLER ",
							"sourceMap": "129:2408:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bc78ee8e076056971b011dc6d407931a28fff958ee5382b715f0e24a7324b0264736f6c63430008140033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
								"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/PremaidV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PremaidV3.sol": {
				"PairFlash": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETH9",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee1",
											"type": "uint24"
										},
										{
											"internalType": "uint256",
											"name": "amount0",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee2",
											"type": "uint24"
										},
										{
											"internalType": "uint24",
											"name": "fee3",
											"type": "uint24"
										}
									],
									"internalType": "struct PairFlash.FlashParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "initFlash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fee0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3FlashCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"initFlash((address,address,uint24,uint256,uint256,uint24,uint24))": {
								"params": {
									"params": "The parameters necessary for flash and the callback, passed in as FlashParams"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"uniswapV3FlashCallback(uint256,uint256,bytes)": {
								"details": "fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed",
								"params": {
									"data": "The data needed in the callback passed as FlashCallbackData from `initFlash`",
									"fee0": "The fee from calling flash for token0",
									"fee1": "The fee from calling flash for token1"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Flash contract implementation",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PremaidV3.sol\":797:6693  contract PairFlash is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/PremaidV3.sol\":1021:1211  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PremaidV3.sol\":1150:1158  _factory */\n  dup2\n    /* \"contracts/PremaidV3.sol\":1160:1166  _WETH9 */\n  dup2\n    /* \"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":562:570  _factory */\n  dup2\n    /* \"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":552:570  factory = _factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":588:594  _WETH9 */\n  dup1\n    /* \"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":580:594  WETH9 = _WETH9 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":496:601  constructor(address _factory, address _WETH9) {... */\n  pop\n  pop\n    /* \"contracts/PremaidV3.sol\":1192:1203  _swapRouter */\n  dup3\n    /* \"contracts/PremaidV3.sol\":1179:1203  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/PremaidV3.sol\":1021:1211  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/PremaidV3.sol\":797:6693  contract PairFlash is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_25\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:684   */\ntag_14:\n    /* \"#utility.yul\":625:632   */\n  0x00\n    /* \"#utility.yul\":654:678   */\n  tag_27\n    /* \"#utility.yul\":672:677   */\n  dup3\n    /* \"#utility.yul\":654:678   */\n  tag_13\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":643:678   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:684   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":690:852   */\ntag_15:\n    /* \"#utility.yul\":783:827   */\n  tag_29\n    /* \"#utility.yul\":821:826   */\n  dup2\n    /* \"#utility.yul\":783:827   */\n  tag_14\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":776:781   */\n  dup2\n    /* \"#utility.yul\":773:828   */\n  eq\n    /* \"#utility.yul\":763:846   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":839:840   */\n  dup1\n    /* \"#utility.yul\":832:844   */\n  revert\n    /* \"#utility.yul\":763:846   */\ntag_30:\n    /* \"#utility.yul\":690:852   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":858:1041   */\ntag_16:\n    /* \"#utility.yul\":935:940   */\n  0x00\n    /* \"#utility.yul\":966:972   */\n  dup2\n    /* \"#utility.yul\":960:973   */\n  mload\n    /* \"#utility.yul\":951:973   */\n  swap1\n  pop\n    /* \"#utility.yul\":982:1035   */\n  tag_32\n    /* \"#utility.yul\":1029:1034   */\n  dup2\n    /* \"#utility.yul\":982:1035   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":858:1041   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1047:1169   */\ntag_17:\n    /* \"#utility.yul\":1120:1144   */\n  tag_34\n    /* \"#utility.yul\":1138:1143   */\n  dup2\n    /* \"#utility.yul\":1120:1144   */\n  tag_13\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1113:1118   */\n  dup2\n    /* \"#utility.yul\":1110:1145   */\n  eq\n    /* \"#utility.yul\":1100:1163   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1159:1160   */\n  0x00\n    /* \"#utility.yul\":1156:1157   */\n  dup1\n    /* \"#utility.yul\":1149:1161   */\n  revert\n    /* \"#utility.yul\":1100:1163   */\ntag_35:\n    /* \"#utility.yul\":1047:1169   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1175:1318   */\ntag_18:\n    /* \"#utility.yul\":1232:1237   */\n  0x00\n    /* \"#utility.yul\":1263:1269   */\n  dup2\n    /* \"#utility.yul\":1257:1270   */\n  mload\n    /* \"#utility.yul\":1248:1270   */\n  swap1\n  pop\n    /* \"#utility.yul\":1279:1312   */\n  tag_37\n    /* \"#utility.yul\":1306:1311   */\n  dup2\n    /* \"#utility.yul\":1279:1312   */\n  tag_17\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1175:1318   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1324:2027   */\ntag_3:\n    /* \"#utility.yul\":1432:1438   */\n  0x00\n    /* \"#utility.yul\":1440:1446   */\n  dup1\n    /* \"#utility.yul\":1448:1454   */\n  0x00\n    /* \"#utility.yul\":1497:1499   */\n  0x60\n    /* \"#utility.yul\":1485:1494   */\n  dup5\n    /* \"#utility.yul\":1476:1483   */\n  dup7\n    /* \"#utility.yul\":1472:1495   */\n  sub\n    /* \"#utility.yul\":1468:1500   */\n  slt\n    /* \"#utility.yul\":1465:1584   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1503:1582   */\n  tag_40\n  tag_10\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1465:1584   */\ntag_39:\n    /* \"#utility.yul\":1623:1624   */\n  0x00\n    /* \"#utility.yul\":1648:1732   */\n  tag_41\n    /* \"#utility.yul\":1724:1731   */\n  dup7\n    /* \"#utility.yul\":1715:1721   */\n  dup3\n    /* \"#utility.yul\":1704:1713   */\n  dup8\n    /* \"#utility.yul\":1700:1722   */\n  add\n    /* \"#utility.yul\":1648:1732   */\n  tag_16\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1638:1732   */\n  swap4\n  pop\n    /* \"#utility.yul\":1594:1742   */\n  pop\n    /* \"#utility.yul\":1781:1783   */\n  0x20\n    /* \"#utility.yul\":1807:1871   */\n  tag_42\n    /* \"#utility.yul\":1863:1870   */\n  dup7\n    /* \"#utility.yul\":1854:1860   */\n  dup3\n    /* \"#utility.yul\":1843:1852   */\n  dup8\n    /* \"#utility.yul\":1839:1861   */\n  add\n    /* \"#utility.yul\":1807:1871   */\n  tag_18\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1797:1871   */\n  swap3\n  pop\n    /* \"#utility.yul\":1752:1881   */\n  pop\n    /* \"#utility.yul\":1920:1922   */\n  0x40\n    /* \"#utility.yul\":1946:2010   */\n  tag_43\n    /* \"#utility.yul\":2002:2009   */\n  dup7\n    /* \"#utility.yul\":1993:1999   */\n  dup3\n    /* \"#utility.yul\":1982:1991   */\n  dup8\n    /* \"#utility.yul\":1978:2000   */\n  add\n    /* \"#utility.yul\":1946:2010   */\n  tag_18\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1936:2010   */\n  swap2\n  pop\n    /* \"#utility.yul\":1891:2020   */\n  pop\n    /* \"#utility.yul\":1324:2027   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/PremaidV3.sol\":797:6693  contract PairFlash is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {... */\ntag_8:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x297f26e5f5f689c9c696c2b30e2448b2248065031e542a267cd018ed943fed46\")\n  0x00\n  assignImmutable(\"0x697b2229c654be6775095ebdd55318a4fcc425427cffac2b24bbf45b1574708c\")\n  0x00\n  assignImmutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/PremaidV3.sol\":797:6693  contract PairFlash is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc31c9c07\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdf2ab5bb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe9cbafb0\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x12210e8a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2384463b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x49404b7c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":687:692  WETH9 */\n      immutable(\"0x697b2229c654be6775095ebdd55318a4fcc425427cffac2b24bbf45b1574708c\")\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":673:692  msg.sender == WETH9 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":673:683  msg.sender */\n      caller\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":673:692  msg.sender == WETH9 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":665:706  require(msg.sender == WETH9, 'Not WETH9') */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/PremaidV3.sol\":797:6693  contract PairFlash is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1640:1800  function refundETH() external payable override {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/PremaidV3.sol\":5652:6690  function initFlash(FlashParams memory params) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":758:1155  function unwrapWETH9(uint256 amountMinimum, address recipient) public payable override {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":450:489  address public immutable override WETH9 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PremaidV3.sol\":973:1012  ISwapRouter public immutable swapRouter */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":358:399  address public immutable override factory */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1200:1595  function sweepToken(... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/PremaidV3.sol\":1616:4774  function uniswapV3FlashCallback(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1640:1800  function refundETH() external payable override {... */\n    tag_18:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1725:1726  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1701:1722  address(this).balance */\n      selfbalance\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1701:1726  address(this).balance > 0 */\n      gt\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1697:1793  if (address(this).balance > 0) TransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n      iszero\n      tag_52\n      jumpi\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1728:1793  TransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n      tag_53\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1759:1769  msg.sender */\n      caller\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1771:1792  address(this).balance */\n      selfbalance\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1728:1758  TransferHelper.safeTransferETH */\n      tag_54\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1728:1793  TransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n      jump\t// in\n    tag_53:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1697:1793  if (address(this).balance > 0) TransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n    tag_52:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1640:1800  function refundETH() external payable override {... */\n      jump\t// out\n        /* \"contracts/PremaidV3.sol\":5652:6690  function initFlash(FlashParams memory params) external {... */\n    tag_23:\n        /* \"contracts/PremaidV3.sol\":5718:5752  PoolAddress.PoolKey memory poolKey */\n      0x00\n        /* \"contracts/PremaidV3.sol\":5768:5853  PoolAddress.PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1}) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PremaidV3.sol\":5797:5803  params */\n      dup4\n        /* \"contracts/PremaidV3.sol\":5797:5810  params.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":5768:5853  PoolAddress.PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1}) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":5820:5826  params */\n      dup4\n        /* \"contracts/PremaidV3.sol\":5820:5833  params.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":5768:5853  PoolAddress.PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1}) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":5840:5846  params */\n      dup4\n        /* \"contracts/PremaidV3.sol\":5840:5851  params.fee1 */\n      0x40\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":5768:5853  PoolAddress.PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1}) */\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/PremaidV3.sol\":5718:5853  PoolAddress.PoolKey memory poolKey =... */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":5864:5883  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/PremaidV3.sol\":5901:5945  PoolAddress.computeAddress(factory, poolKey) */\n      tag_56\n        /* \"contracts/PremaidV3.sol\":5928:5935  factory */\n      immutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n        /* \"contracts/PremaidV3.sol\":5937:5944  poolKey */\n      dup4\n        /* \"contracts/PremaidV3.sol\":5901:5927  PoolAddress.computeAddress */\n      tag_57\n        /* \"contracts/PremaidV3.sol\":5901:5945  PoolAddress.computeAddress(factory, poolKey) */\n      jump\t// in\n    tag_56:\n        /* \"contracts/PremaidV3.sol\":5864:5946  IUniswapV3Pool pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey)) */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":6219:6223  pool */\n      dup1\n        /* \"contracts/PremaidV3.sol\":6219:6229  pool.flash */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x490e6cbc\n        /* \"contracts/PremaidV3.sol\":6252:6256  this */\n      address\n        /* \"contracts/PremaidV3.sol\":6272:6278  params */\n      dup6\n        /* \"contracts/PremaidV3.sol\":6272:6286  params.amount0 */\n      0x60\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":6301:6307  params */\n      dup7\n        /* \"contracts/PremaidV3.sol\":6301:6315  params.amount1 */\n      0x80\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":6359:6656  FlashCallbackData({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PremaidV3.sol\":6409:6415  params */\n      dup10\n        /* \"contracts/PremaidV3.sol\":6409:6423  params.amount0 */\n      0x60\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":6359:6656  FlashCallbackData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":6455:6461  params */\n      dup10\n        /* \"contracts/PremaidV3.sol\":6455:6469  params.amount1 */\n      0x80\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":6359:6656  FlashCallbackData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":6499:6509  msg.sender */\n      caller\n        /* \"contracts/PremaidV3.sol\":6359:6656  FlashCallbackData({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":6541:6548  poolKey */\n      dup9\n        /* \"contracts/PremaidV3.sol\":6359:6656  FlashCallbackData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":6581:6587  params */\n      dup10\n        /* \"contracts/PremaidV3.sol\":6581:6592  params.fee2 */\n      0xa0\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":6359:6656  FlashCallbackData({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":6625:6631  params */\n      dup10\n        /* \"contracts/PremaidV3.sol\":6625:6636  params.fee3 */\n      0xc0\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":6359:6656  FlashCallbackData({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/PremaidV3.sol\":6330:6671  abi.encode(... */\n      add(0x20, mload(0x40))\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/PremaidV3.sol\":6219:6682  pool.flash(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PremaidV3.sol\":5707:6690  {... */\n      pop\n      pop\n        /* \"contracts/PremaidV3.sol\":5652:6690  function initFlash(FlashParams memory params) external {... */\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":758:1155  function unwrapWETH9(uint256 amountMinimum, address recipient) public payable override {... */\n    tag_27:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":855:875  uint256 balanceWETH9 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":885:890  WETH9 */\n      immutable(\"0x697b2229c654be6775095ebdd55318a4fcc425427cffac2b24bbf45b1574708c\")\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":878:901  IWETH9(WETH9).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":910:914  this */\n      address\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":878:916  IWETH9(WETH9).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":855:916  uint256 balanceWETH9 = IWETH9(WETH9).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":950:963  amountMinimum */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":934:946  balanceWETH9 */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":934:963  balanceWETH9 >= amountMinimum */\n      lt\n      iszero\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":926:986  require(balanceWETH9 >= amountMinimum, 'Insufficient WETH9') */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1016:1017  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1001:1013  balanceWETH9 */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1001:1017  balanceWETH9 > 0 */\n      gt\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":997:1149  if (balanceWETH9 > 0) {... */\n      iszero\n      tag_74\n      jumpi\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1040:1045  WETH9 */\n      immutable(\"0x697b2229c654be6775095ebdd55318a4fcc425427cffac2b24bbf45b1574708c\")\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1033:1055  IWETH9(WETH9).withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1056:1068  balanceWETH9 */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1033:1069  IWETH9(WETH9).withdraw(balanceWETH9) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1083:1138  TransferHelper.safeTransferETH(recipient, balanceWETH9) */\n      tag_80\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1114:1123  recipient */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1125:1137  balanceWETH9 */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1083:1113  TransferHelper.safeTransferETH */\n      tag_54\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1083:1138  TransferHelper.safeTransferETH(recipient, balanceWETH9) */\n      jump\t// in\n    tag_80:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":997:1149  if (balanceWETH9 > 0) {... */\n    tag_74:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":845:1155  {... */\n      pop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":758:1155  function unwrapWETH9(uint256 amountMinimum, address recipient) public payable override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":450:489  address public immutable override WETH9 */\n    tag_30:\n      immutable(\"0x697b2229c654be6775095ebdd55318a4fcc425427cffac2b24bbf45b1574708c\")\n      dup2\n      jump\t// out\n        /* \"contracts/PremaidV3.sol\":973:1012  ISwapRouter public immutable swapRouter */\n    tag_35:\n      immutable(\"0x297f26e5f5f689c9c696c2b30e2448b2248065031e542a267cd018ed943fed46\")\n      dup2\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":358:399  address public immutable override factory */\n    tag_40:\n      immutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n      dup2\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1200:1595  function sweepToken(... */\n    tag_45:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1341:1361  uint256 balanceToken */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1371:1376  token */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1364:1387  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1396:1400  this */\n      address\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1364:1402  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_82:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_85:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1341:1402  uint256 balanceToken = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1436:1449  amountMinimum */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1420:1432  balanceToken */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1420:1449  balanceToken >= amountMinimum */\n      lt\n      iszero\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1412:1472  require(balanceToken >= amountMinimum, 'Insufficient token') */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1502:1503  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1487:1499  balanceToken */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1487:1503  balanceToken > 0 */\n      gt\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1483:1589  if (balanceToken > 0) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1519:1578  TransferHelper.safeTransfer(token, recipient, balanceToken) */\n      tag_90\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1547:1552  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1554:1563  recipient */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1565:1577  balanceToken */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1519:1546  TransferHelper.safeTransfer */\n      tag_91\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1519:1578  TransferHelper.safeTransfer(token, recipient, balanceToken) */\n      jump\t// in\n    tag_90:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1483:1589  if (balanceToken > 0) {... */\n    tag_89:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1331:1595  {... */\n      pop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1200:1595  function sweepToken(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PremaidV3.sol\":1616:4774  function uniswapV3FlashCallback(... */\n    tag_50:\n        /* \"contracts/PremaidV3.sol\":1760:1792  FlashCallbackData memory decoded */\n      0x00\n        /* \"contracts/PremaidV3.sol\":1806:1810  data */\n      dup3\n      dup3\n        /* \"contracts/PremaidV3.sol\":1795:1832  abi.decode(data, (FlashCallbackData)) */\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/PremaidV3.sol\":1760:1832  FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData)) */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":1843:1902  CallbackValidation.verifyCallback(factory, decoded.poolKey) */\n      tag_95\n        /* \"contracts/PremaidV3.sol\":1877:1884  factory */\n      immutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n        /* \"contracts/PremaidV3.sol\":1886:1893  decoded */\n      dup3\n        /* \"contracts/PremaidV3.sol\":1886:1901  decoded.poolKey */\n      0x60\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":1843:1876  CallbackValidation.verifyCallback */\n      tag_96\n        /* \"contracts/PremaidV3.sol\":1843:1902  CallbackValidation.verifyCallback(factory, decoded.poolKey) */\n      jump\t// in\n    tag_95:\n      pop\n        /* \"contracts/PremaidV3.sol\":1915:1929  address token0 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":1932:1939  decoded */\n      dup2\n        /* \"contracts/PremaidV3.sol\":1932:1947  decoded.poolKey */\n      0x60\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":1932:1954  decoded.poolKey.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":1915:1954  address token0 = decoded.poolKey.token0 */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":1965:1979  address token1 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":1982:1989  decoded */\n      dup3\n        /* \"contracts/PremaidV3.sol\":1982:1997  decoded.poolKey */\n      0x60\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":1982:2004  decoded.poolKey.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":1965:2004  address token1 = decoded.poolKey.token1 */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":2017:2089  TransferHelper.safeApprove(token0, address(swapRouter), decoded.amount0) */\n      tag_97\n        /* \"contracts/PremaidV3.sol\":2044:2050  token0 */\n      dup3\n        /* \"contracts/PremaidV3.sol\":2060:2070  swapRouter */\n      immutable(\"0x297f26e5f5f689c9c696c2b30e2448b2248065031e542a267cd018ed943fed46\")\n        /* \"contracts/PremaidV3.sol\":2073:2080  decoded */\n      dup6\n        /* \"contracts/PremaidV3.sol\":2073:2088  decoded.amount0 */\n      0x00\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":2017:2043  TransferHelper.safeApprove */\n      tag_98\n        /* \"contracts/PremaidV3.sol\":2017:2089  TransferHelper.safeApprove(token0, address(swapRouter), decoded.amount0) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/PremaidV3.sol\":2100:2172  TransferHelper.safeApprove(token1, address(swapRouter), decoded.amount1) */\n      tag_99\n        /* \"contracts/PremaidV3.sol\":2127:2133  token1 */\n      dup2\n        /* \"contracts/PremaidV3.sol\":2143:2153  swapRouter */\n      immutable(\"0x297f26e5f5f689c9c696c2b30e2448b2248065031e542a267cd018ed943fed46\")\n        /* \"contracts/PremaidV3.sol\":2156:2163  decoded */\n      dup6\n        /* \"contracts/PremaidV3.sol\":2156:2171  decoded.amount1 */\n      0x20\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":2100:2126  TransferHelper.safeApprove */\n      tag_98\n        /* \"contracts/PremaidV3.sol\":2100:2172  TransferHelper.safeApprove(token1, address(swapRouter), decoded.amount1) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/PremaidV3.sol\":2276:2294  uint256 amount1Min */\n      0x00\n        /* \"contracts/PremaidV3.sol\":2297:2338  LowGasSafeMath.add(decoded.amount1, fee1) */\n      tag_100\n        /* \"contracts/PremaidV3.sol\":2316:2323  decoded */\n      dup5\n        /* \"contracts/PremaidV3.sol\":2316:2331  decoded.amount1 */\n      0x20\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":2333:2337  fee1 */\n      dup9\n        /* \"contracts/PremaidV3.sol\":2297:2315  LowGasSafeMath.add */\n      tag_101\n        /* \"contracts/PremaidV3.sol\":2297:2338  LowGasSafeMath.add(decoded.amount1, fee1) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/PremaidV3.sol\":2276:2338  uint256 amount1Min = LowGasSafeMath.add(decoded.amount1, fee1) */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":2349:2367  uint256 amount0Min */\n      0x00\n        /* \"contracts/PremaidV3.sol\":2370:2411  LowGasSafeMath.add(decoded.amount0, fee0) */\n      tag_102\n        /* \"contracts/PremaidV3.sol\":2389:2396  decoded */\n      dup6\n        /* \"contracts/PremaidV3.sol\":2389:2404  decoded.amount0 */\n      0x00\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":2406:2410  fee0 */\n      dup11\n        /* \"contracts/PremaidV3.sol\":2370:2388  LowGasSafeMath.add */\n      tag_101\n        /* \"contracts/PremaidV3.sol\":2370:2411  LowGasSafeMath.add(decoded.amount0, fee0) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/PremaidV3.sol\":2349:2411  uint256 amount0Min = LowGasSafeMath.add(decoded.amount0, fee0) */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":2504:2522  uint256 amountOut0 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":2538:2548  swapRouter */\n      immutable(\"0x297f26e5f5f689c9c696c2b30e2448b2248065031e542a267cd018ed943fed46\")\n        /* \"contracts/PremaidV3.sol\":2538:2565  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/PremaidV3.sol\":2584:2997  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PremaidV3.sol\":2651:2657  token1 */\n      dup8\n        /* \"contracts/PremaidV3.sol\":2584:2997  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":2690:2696  token0 */\n      dup9\n        /* \"contracts/PremaidV3.sol\":2584:2997  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":2724:2731  decoded */\n      dup10\n        /* \"contracts/PremaidV3.sol\":2724:2740  decoded.poolFee2 */\n      0x80\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":2584:2997  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":2782:2786  this */\n      address\n        /* \"contracts/PremaidV3.sol\":2584:2997  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":2820:2835  block.timestamp */\n      timestamp\n        /* \"contracts/PremaidV3.sol\":2584:2997  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":2868:2875  decoded */\n      dup10\n        /* \"contracts/PremaidV3.sol\":2868:2883  decoded.amount1 */\n      0x20\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":2584:2997  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":2924:2934  amount0Min */\n      dup6\n        /* \"contracts/PremaidV3.sol\":2584:2997  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":2976:2977  0 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":2584:2997  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/PremaidV3.sol\":2538:3012  swapRouter.exactInputSingle(... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_107:\n        /* \"contracts/PremaidV3.sol\":2504:3012  uint256 amountOut0 =... */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":3106:3124  uint256 amountOut1 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":3140:3150  swapRouter */\n      immutable(\"0x297f26e5f5f689c9c696c2b30e2448b2248065031e542a267cd018ed943fed46\")\n        /* \"contracts/PremaidV3.sol\":3140:3167  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/PremaidV3.sol\":3186:3599  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PremaidV3.sol\":3253:3259  token0 */\n      dup10\n        /* \"contracts/PremaidV3.sol\":3186:3599  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":3292:3298  token1 */\n      dup9\n        /* \"contracts/PremaidV3.sol\":3186:3599  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":3326:3333  decoded */\n      dup11\n        /* \"contracts/PremaidV3.sol\":3326:3342  decoded.poolFee3 */\n      0xa0\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":3186:3599  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":3384:3388  this */\n      address\n        /* \"contracts/PremaidV3.sol\":3186:3599  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":3422:3437  block.timestamp */\n      timestamp\n        /* \"contracts/PremaidV3.sol\":3186:3599  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":3470:3477  decoded */\n      dup11\n        /* \"contracts/PremaidV3.sol\":3470:3485  decoded.amount0 */\n      0x00\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":3186:3599  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":3526:3536  amount1Min */\n      dup8\n        /* \"contracts/PremaidV3.sol\":3186:3599  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PremaidV3.sol\":3578:3579  0 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":3186:3599  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/PremaidV3.sol\":3140:3614  swapRouter.exactInputSingle(... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_111:\n        /* \"contracts/PremaidV3.sol\":3106:3614  uint256 amountOut1 =... */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":3730:3749  uint256 amount0Owed */\n      0x00\n        /* \"contracts/PremaidV3.sol\":3752:3793  LowGasSafeMath.add(decoded.amount0, fee0) */\n      tag_112\n        /* \"contracts/PremaidV3.sol\":3771:3778  decoded */\n      dup9\n        /* \"contracts/PremaidV3.sol\":3771:3786  decoded.amount0 */\n      0x00\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":3788:3792  fee0 */\n      dup14\n        /* \"contracts/PremaidV3.sol\":3752:3770  LowGasSafeMath.add */\n      tag_101\n        /* \"contracts/PremaidV3.sol\":3752:3793  LowGasSafeMath.add(decoded.amount0, fee0) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/PremaidV3.sol\":3730:3793  uint256 amount0Owed = LowGasSafeMath.add(decoded.amount0, fee0) */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":3804:3823  uint256 amount1Owed */\n      0x00\n        /* \"contracts/PremaidV3.sol\":3826:3867  LowGasSafeMath.add(decoded.amount1, fee1) */\n      tag_113\n        /* \"contracts/PremaidV3.sol\":3845:3852  decoded */\n      dup10\n        /* \"contracts/PremaidV3.sol\":3845:3860  decoded.amount1 */\n      0x20\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":3862:3866  fee1 */\n      dup14\n        /* \"contracts/PremaidV3.sol\":3826:3844  LowGasSafeMath.add */\n      tag_101\n        /* \"contracts/PremaidV3.sol\":3826:3867  LowGasSafeMath.add(decoded.amount1, fee1) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/PremaidV3.sol\":3804:3867  uint256 amount1Owed = LowGasSafeMath.add(decoded.amount1, fee1) */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":3880:3942  TransferHelper.safeApprove(token0, address(this), amount0Owed) */\n      tag_114\n        /* \"contracts/PremaidV3.sol\":3907:3913  token0 */\n      dup9\n        /* \"contracts/PremaidV3.sol\":3923:3927  this */\n      address\n        /* \"contracts/PremaidV3.sol\":3930:3941  amount0Owed */\n      dup5\n        /* \"contracts/PremaidV3.sol\":3880:3906  TransferHelper.safeApprove */\n      tag_98\n        /* \"contracts/PremaidV3.sol\":3880:3942  TransferHelper.safeApprove(token0, address(this), amount0Owed) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/PremaidV3.sol\":3953:4015  TransferHelper.safeApprove(token1, address(this), amount1Owed) */\n      tag_115\n        /* \"contracts/PremaidV3.sol\":3980:3986  token1 */\n      dup8\n        /* \"contracts/PremaidV3.sol\":3996:4000  this */\n      address\n        /* \"contracts/PremaidV3.sol\":4003:4014  amount1Owed */\n      dup4\n        /* \"contracts/PremaidV3.sol\":3953:3979  TransferHelper.safeApprove */\n      tag_98\n        /* \"contracts/PremaidV3.sol\":3953:4015  TransferHelper.safeApprove(token1, address(this), amount1Owed) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/PremaidV3.sol\":4046:4047  0 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":4032:4043  amount0Owed */\n      dup3\n        /* \"contracts/PremaidV3.sol\":4032:4047  amount0Owed > 0 */\n      gt\n        /* \"contracts/PremaidV3.sol\":4028:4100  if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed) */\n      iszero\n      tag_116\n      jumpi\n        /* \"contracts/PremaidV3.sol\":4049:4100  pay(token0, address(this), msg.sender, amount0Owed) */\n      tag_117\n        /* \"contracts/PremaidV3.sol\":4053:4059  token0 */\n      dup9\n        /* \"contracts/PremaidV3.sol\":4069:4073  this */\n      address\n        /* \"contracts/PremaidV3.sol\":4076:4086  msg.sender */\n      caller\n        /* \"contracts/PremaidV3.sol\":4088:4099  amount0Owed */\n      dup6\n        /* \"contracts/PremaidV3.sol\":4049:4052  pay */\n      tag_118\n        /* \"contracts/PremaidV3.sol\":4049:4100  pay(token0, address(this), msg.sender, amount0Owed) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/PremaidV3.sol\":4028:4100  if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed) */\n    tag_116:\n        /* \"contracts/PremaidV3.sol\":4129:4130  0 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":4115:4126  amount1Owed */\n      dup2\n        /* \"contracts/PremaidV3.sol\":4115:4130  amount1Owed > 0 */\n      gt\n        /* \"contracts/PremaidV3.sol\":4111:4183  if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed) */\n      iszero\n      tag_119\n      jumpi\n        /* \"contracts/PremaidV3.sol\":4132:4183  pay(token1, address(this), msg.sender, amount1Owed) */\n      tag_120\n        /* \"contracts/PremaidV3.sol\":4136:4142  token1 */\n      dup8\n        /* \"contracts/PremaidV3.sol\":4152:4156  this */\n      address\n        /* \"contracts/PremaidV3.sol\":4159:4169  msg.sender */\n      caller\n        /* \"contracts/PremaidV3.sol\":4171:4182  amount1Owed */\n      dup5\n        /* \"contracts/PremaidV3.sol\":4132:4135  pay */\n      tag_118\n        /* \"contracts/PremaidV3.sol\":4132:4183  pay(token1, address(this), msg.sender, amount1Owed) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/PremaidV3.sol\":4111:4183  if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed) */\n    tag_119:\n        /* \"contracts/PremaidV3.sol\":4260:4271  amount0Owed */\n      dup2\n        /* \"contracts/PremaidV3.sol\":4247:4257  amountOut0 */\n      dup5\n        /* \"contracts/PremaidV3.sol\":4247:4271  amountOut0 > amount0Owed */\n      gt\n        /* \"contracts/PremaidV3.sol\":4243:4501  if (amountOut0 > amount0Owed) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/PremaidV3.sol\":4288:4303  uint256 profit0 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":4306:4349  LowGasSafeMath.sub(amountOut0, amount0Owed) */\n      tag_122\n        /* \"contracts/PremaidV3.sol\":4325:4335  amountOut0 */\n      dup6\n        /* \"contracts/PremaidV3.sol\":4337:4348  amount0Owed */\n      dup5\n        /* \"contracts/PremaidV3.sol\":4306:4324  LowGasSafeMath.sub */\n      tag_123\n        /* \"contracts/PremaidV3.sol\":4306:4349  LowGasSafeMath.sub(amountOut0, amount0Owed) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/PremaidV3.sol\":4288:4349  uint256 profit0 = LowGasSafeMath.sub(amountOut0, amount0Owed) */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":4366:4424  TransferHelper.safeApprove(token0, address(this), profit0) */\n      tag_124\n        /* \"contracts/PremaidV3.sol\":4393:4399  token0 */\n      dup10\n        /* \"contracts/PremaidV3.sol\":4409:4413  this */\n      address\n        /* \"contracts/PremaidV3.sol\":4416:4423  profit0 */\n      dup4\n        /* \"contracts/PremaidV3.sol\":4366:4392  TransferHelper.safeApprove */\n      tag_98\n        /* \"contracts/PremaidV3.sol\":4366:4424  TransferHelper.safeApprove(token0, address(this), profit0) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/PremaidV3.sol\":4439:4489  pay(token0, address(this), decoded.payer, profit0) */\n      tag_125\n        /* \"contracts/PremaidV3.sol\":4443:4449  token0 */\n      dup10\n        /* \"contracts/PremaidV3.sol\":4459:4463  this */\n      address\n        /* \"contracts/PremaidV3.sol\":4466:4473  decoded */\n      dup13\n        /* \"contracts/PremaidV3.sol\":4466:4479  decoded.payer */\n      0x40\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":4481:4488  profit0 */\n      dup5\n        /* \"contracts/PremaidV3.sol\":4439:4442  pay */\n      tag_118\n        /* \"contracts/PremaidV3.sol\":4439:4489  pay(token0, address(this), decoded.payer, profit0) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/PremaidV3.sol\":4273:4501  {... */\n      pop\n        /* \"contracts/PremaidV3.sol\":4243:4501  if (amountOut0 > amount0Owed) {... */\n    tag_121:\n        /* \"contracts/PremaidV3.sol\":4528:4539  amount1Owed */\n      dup1\n        /* \"contracts/PremaidV3.sol\":4515:4525  amountOut1 */\n      dup4\n        /* \"contracts/PremaidV3.sol\":4515:4539  amountOut1 > amount1Owed */\n      gt\n        /* \"contracts/PremaidV3.sol\":4511:4767  if (amountOut1 > amount1Owed) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/PremaidV3.sol\":4556:4571  uint256 profit1 */\n      0x00\n        /* \"contracts/PremaidV3.sol\":4574:4617  LowGasSafeMath.sub(amountOut1, amount1Owed) */\n      tag_127\n        /* \"contracts/PremaidV3.sol\":4593:4603  amountOut1 */\n      dup5\n        /* \"contracts/PremaidV3.sol\":4605:4616  amount1Owed */\n      dup4\n        /* \"contracts/PremaidV3.sol\":4574:4592  LowGasSafeMath.sub */\n      tag_123\n        /* \"contracts/PremaidV3.sol\":4574:4617  LowGasSafeMath.sub(amountOut1, amount1Owed) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/PremaidV3.sol\":4556:4617  uint256 profit1 = LowGasSafeMath.sub(amountOut1, amount1Owed) */\n      swap1\n      pop\n        /* \"contracts/PremaidV3.sol\":4632:4690  TransferHelper.safeApprove(token0, address(this), profit1) */\n      tag_128\n        /* \"contracts/PremaidV3.sol\":4659:4665  token0 */\n      dup10\n        /* \"contracts/PremaidV3.sol\":4675:4679  this */\n      address\n        /* \"contracts/PremaidV3.sol\":4682:4689  profit1 */\n      dup4\n        /* \"contracts/PremaidV3.sol\":4632:4658  TransferHelper.safeApprove */\n      tag_98\n        /* \"contracts/PremaidV3.sol\":4632:4690  TransferHelper.safeApprove(token0, address(this), profit1) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/PremaidV3.sol\":4705:4755  pay(token1, address(this), decoded.payer, profit1) */\n      tag_129\n        /* \"contracts/PremaidV3.sol\":4709:4715  token1 */\n      dup9\n        /* \"contracts/PremaidV3.sol\":4725:4729  this */\n      address\n        /* \"contracts/PremaidV3.sol\":4732:4739  decoded */\n      dup13\n        /* \"contracts/PremaidV3.sol\":4732:4745  decoded.payer */\n      0x40\n      add\n      mload\n        /* \"contracts/PremaidV3.sol\":4747:4754  profit1 */\n      dup5\n        /* \"contracts/PremaidV3.sol\":4705:4708  pay */\n      tag_118\n        /* \"contracts/PremaidV3.sol\":4705:4755  pay(token1, address(this), decoded.payer, profit1) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/PremaidV3.sol\":4541:4767  {... */\n      pop\n        /* \"contracts/PremaidV3.sol\":4511:4767  if (amountOut1 > amount1Owed) {... */\n    tag_126:\n        /* \"contracts/PremaidV3.sol\":1749:4774  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PremaidV3.sol\":1616:4774  function uniswapV3FlashCallback(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2370:2535  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_54:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2442:2454  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2460:2462  to */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2460:2467  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2475:2480  value */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2492:2493  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2482:2494  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_131\n      jumpi\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n    tag_131:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_134:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2460:2495  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_139\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_138)\n    tag_139:\n      0x60\n      swap2\n      pop\n    tag_138:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2441:2495  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2513:2520  success */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2505:2528  require(success, 'STE') */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2431:2535  {... */\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2370:2535  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1305:1754  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n    tag_57:\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1389:1401  address pool */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1434:1437  key */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1434:1444  key.token1 */\n      0x20\n      add\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1421:1444  key.token0 < key.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1421:1424  key */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1421:1431  key.token0 */\n      0x00\n      add\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1421:1444  key.token0 < key.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1413:1445  require(key.token0 < key.token1) */\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1455:1471  bytes32 poolHash */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1555:1562  factory */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1601:1604  key */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1601:1611  key.token0 */\n      0x00\n      add\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1613:1616  key */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1613:1623  key.token1 */\n      0x20\n      add\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1625:1628  key */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1625:1632  key.fee */\n      0x40\n      add\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1590:1633  abi.encode(key.token0, key.token1, key.fee) */\n      add(0x20, mload(0x40))\n      tag_145\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1580:1634  keccak256(abi.encode(key.token0, key.token1, key.fee)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":241:307  0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54 */\n      0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1652:1671  POOL_INIT_CODE_HASH */\n      0x00\n      shl\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1496:1685  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_147\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1473:1695  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1455:1695  bytes32 poolHash =keccak256(... */\n      swap1\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1736:1744  poolHash */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1728:1745  uint256(poolHash) */\n      0x00\n      shr\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1705:1747  pool = address(uint160(uint256(poolHash))) */\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1403:1754  {... */\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1305:1754  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n    tag_91:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1325:1337  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1339:1356  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1365  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1370  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1394:1418  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1420:1422  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1424:1429  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_152:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_155\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_154)\n    tag_155:\n      0x60\n      swap2\n      pop\n    tag_154:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1324:1431  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1456  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1476:1477  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1465  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1472  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1477  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_157\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1492:1496  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1481:1505  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n    tag_157:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_156:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1314:1520  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1190:1469  function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)... */\n    tag_96:\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1314:1333  IUniswapV3Pool pool */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1371:1415  PoolAddress.computeAddress(factory, poolKey) */\n      tag_164\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1398:1405  factory */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1407:1414  poolKey */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1371:1397  PoolAddress.computeAddress */\n      tag_57\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1371:1415  PoolAddress.computeAddress(factory, poolKey) */\n      jump\t// in\n    tag_164:\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1349:1416  pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey)) */\n      swap1\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1456:1460  pool */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1434:1461  msg.sender == address(pool) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1434:1444  msg.sender */\n      caller\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1434:1461  msg.sender == address(pool) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1426:1462  require(msg.sender == address(pool)) */\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n        /* \"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1190:1469  function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_98:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_167\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_168:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_171\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_170)\n    tag_171:\n      0x60\n      swap2\n      pop\n    tag_170:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_172\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_173\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_174:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_173:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_172:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":435:546  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_101:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":493:502  uint256 z */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":537:538  x */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":531:532  y */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":527:528  x */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":527:532  x + y */\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":523:532  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":522:538  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":514:539  require((z = x + y) >= x) */\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":435:546  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1991:2690  function pay(... */\n    tag_118:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2138:2143  WETH9 */\n      immutable(\"0x697b2229c654be6775095ebdd55318a4fcc425427cffac2b24bbf45b1574708c\")\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2129:2143  token == WETH9 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2129:2134  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2129:2143  token == WETH9 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2129:2177  token == WETH9 && address(this).balance >= value */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2172:2177  value */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2147:2168  address(this).balance */\n      selfbalance\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2147:2177  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2129:2177  token == WETH9 && address(this).balance >= value */\n    tag_183:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2125:2684  if (token == WETH9 && address(this).balance >= value) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2230:2235  WETH9 */\n      immutable(\"0x697b2229c654be6775095ebdd55318a4fcc425427cffac2b24bbf45b1574708c\")\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2223:2244  IWETH9(WETH9).deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2252:2257  value */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2223:2260  IWETH9(WETH9).deposit{value: value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2316:2321  WETH9 */\n      immutable(\"0x697b2229c654be6775095ebdd55318a4fcc425427cffac2b24bbf45b1574708c\")\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2309:2331  IWETH9(WETH9).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2332:2341  recipient */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2343:2348  value */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2309:2349  IWETH9(WETH9).transfer(recipient, value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_188:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_191:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2125:2684  if (token == WETH9 && address(this).balance >= value) {... */\n      jump(tag_192)\n    tag_184:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2387:2391  this */\n      address\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2370:2392  payer == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2370:2375  payer */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2370:2392  payer == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2366:2684  if (payer == address(this)) {... */\n      tag_193\n      jumpi\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2499:2551  TransferHelper.safeTransfer(token, recipient, value) */\n      tag_194\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2527:2532  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2534:2543  recipient */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2545:2550  value */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2499:2526  TransferHelper.safeTransfer */\n      tag_91\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2499:2551  TransferHelper.safeTransfer(token, recipient, value) */\n      jump\t// in\n    tag_194:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2366:2684  if (payer == address(this)) {... */\n      jump(tag_195)\n    tag_193:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2610:2673  TransferHelper.safeTransferFrom(token, payer, recipient, value) */\n      tag_196\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2642:2647  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2649:2654  payer */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2656:2665  recipient */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2667:2672  value */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2610:2641  TransferHelper.safeTransferFrom */\n      tag_197\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2610:2673  TransferHelper.safeTransferFrom(token, payer, recipient, value) */\n      jump\t// in\n    tag_196:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2366:2684  if (payer == address(this)) {... */\n    tag_195:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":2125:2684  if (token == WETH9 && address(this).balance >= value) {... */\n    tag_192:\n        /* \"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":1991:2690  function pay(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":710:821  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_123:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":768:777  uint256 z */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":812:813  x */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":806:807  y */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":802:803  x */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":802:807  x - y */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":798:807  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":797:813  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":789:814  require((z = x - y) <= x) */\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":710:821  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_197:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_203\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_205:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_208\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_207)\n    tag_208:\n      0x60\n      swap2\n      pop\n    tag_207:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_209\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_210\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_211\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_211:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_210:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_209:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_215:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:341   */\n    tag_216:\n        /* \"#utility.yul\":322:333   */\n      0x4e6f742057455448390000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:334   */\n      mstore\n        /* \"#utility.yul\":182:341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":347:712   */\n    tag_217:\n        /* \"#utility.yul\":489:492   */\n      0x00\n        /* \"#utility.yul\":510:576   */\n      tag_295\n        /* \"#utility.yul\":574:575   */\n      0x09\n        /* \"#utility.yul\":569:572   */\n      dup4\n        /* \"#utility.yul\":510:576   */\n      tag_215\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":503:576   */\n      swap2\n      pop\n        /* \"#utility.yul\":585:678   */\n      tag_296\n        /* \"#utility.yul\":674:677   */\n      dup3\n        /* \"#utility.yul\":585:678   */\n      tag_216\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":703:705   */\n      0x20\n        /* \"#utility.yul\":698:701   */\n      dup3\n        /* \"#utility.yul\":694:706   */\n      add\n        /* \"#utility.yul\":687:706   */\n      swap1\n      pop\n        /* \"#utility.yul\":347:712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":718:1137   */\n    tag_16:\n        /* \"#utility.yul\":884:888   */\n      0x00\n        /* \"#utility.yul\":922:924   */\n      0x20\n        /* \"#utility.yul\":911:920   */\n      dup3\n        /* \"#utility.yul\":907:925   */\n      add\n        /* \"#utility.yul\":899:925   */\n      swap1\n      pop\n        /* \"#utility.yul\":971:980   */\n      dup2\n        /* \"#utility.yul\":965:969   */\n      dup2\n        /* \"#utility.yul\":961:981   */\n      sub\n        /* \"#utility.yul\":957:958   */\n      0x00\n        /* \"#utility.yul\":946:955   */\n      dup4\n        /* \"#utility.yul\":942:959   */\n      add\n        /* \"#utility.yul\":935:982   */\n      mstore\n        /* \"#utility.yul\":999:1130   */\n      tag_298\n        /* \"#utility.yul\":1125:1129   */\n      dup2\n        /* \"#utility.yul\":999:1130   */\n      tag_217\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":991:1130   */\n      swap1\n      pop\n        /* \"#utility.yul\":718:1137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1143:1218   */\n    tag_218:\n        /* \"#utility.yul\":1176:1182   */\n      0x00\n        /* \"#utility.yul\":1209:1211   */\n      0x40\n        /* \"#utility.yul\":1203:1212   */\n      mload\n        /* \"#utility.yul\":1193:1212   */\n      swap1\n      pop\n        /* \"#utility.yul\":1143:1218   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1224:1341   */\n    tag_219:\n        /* \"#utility.yul\":1333:1334   */\n      0x00\n        /* \"#utility.yul\":1330:1331   */\n      dup1\n        /* \"#utility.yul\":1323:1335   */\n      revert\n        /* \"#utility.yul\":1347:1464   */\n    tag_220:\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1470:1587   */\n    tag_221:\n        /* \"#utility.yul\":1579:1580   */\n      0x00\n        /* \"#utility.yul\":1576:1577   */\n      dup1\n        /* \"#utility.yul\":1569:1581   */\n      revert\n        /* \"#utility.yul\":1593:1695   */\n    tag_222:\n        /* \"#utility.yul\":1634:1640   */\n      0x00\n        /* \"#utility.yul\":1685:1687   */\n      0x1f\n        /* \"#utility.yul\":1681:1688   */\n      not\n        /* \"#utility.yul\":1676:1678   */\n      0x1f\n        /* \"#utility.yul\":1669:1674   */\n      dup4\n        /* \"#utility.yul\":1665:1679   */\n      add\n        /* \"#utility.yul\":1661:1689   */\n      and\n        /* \"#utility.yul\":1651:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1593:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1881   */\n    tag_133:\n        /* \"#utility.yul\":1749:1826   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1746:1747   */\n      0x00\n        /* \"#utility.yul\":1739:1827   */\n      mstore\n        /* \"#utility.yul\":1846:1850   */\n      0x41\n        /* \"#utility.yul\":1843:1844   */\n      0x04\n        /* \"#utility.yul\":1836:1851   */\n      mstore\n        /* \"#utility.yul\":1870:1874   */\n      0x24\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1860:1875   */\n      revert\n        /* \"#utility.yul\":1887:2168   */\n    tag_223:\n        /* \"#utility.yul\":1970:1997   */\n      tag_306\n        /* \"#utility.yul\":1992:1996   */\n      dup3\n        /* \"#utility.yul\":1970:1997   */\n      tag_222\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":1962:1968   */\n      dup2\n        /* \"#utility.yul\":1958:1998   */\n      add\n        /* \"#utility.yul\":2100:2106   */\n      dup2\n        /* \"#utility.yul\":2088:2098   */\n      dup2\n        /* \"#utility.yul\":2085:2107   */\n      lt\n        /* \"#utility.yul\":2064:2082   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2052:2062   */\n      dup3\n        /* \"#utility.yul\":2049:2083   */\n      gt\n        /* \"#utility.yul\":2046:2108   */\n      or\n        /* \"#utility.yul\":2043:2131   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":2111:2129   */\n      tag_308\n      tag_133\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2043:2131   */\n    tag_307:\n        /* \"#utility.yul\":2151:2161   */\n      dup1\n        /* \"#utility.yul\":2147:2149   */\n      0x40\n        /* \"#utility.yul\":2140:2162   */\n      mstore\n        /* \"#utility.yul\":1930:2168   */\n      pop\n        /* \"#utility.yul\":1887:2168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2174:2303   */\n    tag_224:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2235:2255   */\n      tag_310\n      tag_218\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2225:2255   */\n      swap1\n      pop\n        /* \"#utility.yul\":2264:2297   */\n      tag_311\n        /* \"#utility.yul\":2292:2296   */\n      dup3\n        /* \"#utility.yul\":2284:2290   */\n      dup3\n        /* \"#utility.yul\":2264:2297   */\n      tag_223\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2174:2303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2558   */\n    tag_226:\n        /* \"#utility.yul\":2469:2476   */\n      0x00\n        /* \"#utility.yul\":2509:2551   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2502:2507   */\n      dup3\n        /* \"#utility.yul\":2498:2552   */\n      and\n        /* \"#utility.yul\":2487:2552   */\n      swap1\n      pop\n        /* \"#utility.yul\":2432:2558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:2660   */\n    tag_227:\n        /* \"#utility.yul\":2601:2608   */\n      0x00\n        /* \"#utility.yul\":2630:2654   */\n      tag_315\n        /* \"#utility.yul\":2648:2653   */\n      dup3\n        /* \"#utility.yul\":2630:2654   */\n      tag_226\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2619:2654   */\n      swap1\n      pop\n        /* \"#utility.yul\":2564:2660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2666:2788   */\n    tag_228:\n        /* \"#utility.yul\":2739:2763   */\n      tag_317\n        /* \"#utility.yul\":2757:2762   */\n      dup2\n        /* \"#utility.yul\":2739:2763   */\n      tag_227\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2732:2737   */\n      dup2\n        /* \"#utility.yul\":2729:2764   */\n      eq\n        /* \"#utility.yul\":2719:2782   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":2778:2779   */\n      0x00\n        /* \"#utility.yul\":2775:2776   */\n      dup1\n        /* \"#utility.yul\":2768:2780   */\n      revert\n        /* \"#utility.yul\":2719:2782   */\n    tag_318:\n        /* \"#utility.yul\":2666:2788   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2794:2933   */\n    tag_229:\n        /* \"#utility.yul\":2840:2845   */\n      0x00\n        /* \"#utility.yul\":2878:2884   */\n      dup2\n        /* \"#utility.yul\":2865:2885   */\n      calldataload\n        /* \"#utility.yul\":2856:2885   */\n      swap1\n      pop\n        /* \"#utility.yul\":2894:2927   */\n      tag_320\n        /* \"#utility.yul\":2921:2926   */\n      dup2\n        /* \"#utility.yul\":2894:2927   */\n      tag_228\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2794:2933   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2939:3030   */\n    tag_230:\n        /* \"#utility.yul\":2975:2982   */\n      0x00\n        /* \"#utility.yul\":3015:3023   */\n      0xffffff\n        /* \"#utility.yul\":3008:3013   */\n      dup3\n        /* \"#utility.yul\":3004:3024   */\n      and\n        /* \"#utility.yul\":2993:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":2939:3030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3036:3156   */\n    tag_231:\n        /* \"#utility.yul\":3108:3131   */\n      tag_323\n        /* \"#utility.yul\":3125:3130   */\n      dup2\n        /* \"#utility.yul\":3108:3131   */\n      tag_230\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3101:3106   */\n      dup2\n        /* \"#utility.yul\":3098:3132   */\n      eq\n        /* \"#utility.yul\":3088:3150   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3146:3147   */\n      0x00\n        /* \"#utility.yul\":3143:3144   */\n      dup1\n        /* \"#utility.yul\":3136:3148   */\n      revert\n        /* \"#utility.yul\":3088:3150   */\n    tag_324:\n        /* \"#utility.yul\":3036:3156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3162:3299   */\n    tag_232:\n        /* \"#utility.yul\":3207:3212   */\n      0x00\n        /* \"#utility.yul\":3245:3251   */\n      dup2\n        /* \"#utility.yul\":3232:3252   */\n      calldataload\n        /* \"#utility.yul\":3223:3252   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3293   */\n      tag_326\n        /* \"#utility.yul\":3287:3292   */\n      dup2\n        /* \"#utility.yul\":3261:3293   */\n      tag_231\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3162:3299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3305:3382   */\n    tag_233:\n        /* \"#utility.yul\":3342:3349   */\n      0x00\n        /* \"#utility.yul\":3371:3376   */\n      dup2\n        /* \"#utility.yul\":3360:3376   */\n      swap1\n      pop\n        /* \"#utility.yul\":3305:3382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3388:3510   */\n    tag_234:\n        /* \"#utility.yul\":3461:3485   */\n      tag_329\n        /* \"#utility.yul\":3479:3484   */\n      dup2\n        /* \"#utility.yul\":3461:3485   */\n      tag_233\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3454:3459   */\n      dup2\n        /* \"#utility.yul\":3451:3486   */\n      eq\n        /* \"#utility.yul\":3441:3504   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":3500:3501   */\n      0x00\n        /* \"#utility.yul\":3497:3498   */\n      dup1\n        /* \"#utility.yul\":3490:3502   */\n      revert\n        /* \"#utility.yul\":3441:3504   */\n    tag_330:\n        /* \"#utility.yul\":3388:3510   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3516:3655   */\n    tag_235:\n        /* \"#utility.yul\":3562:3567   */\n      0x00\n        /* \"#utility.yul\":3600:3606   */\n      dup2\n        /* \"#utility.yul\":3587:3607   */\n      calldataload\n        /* \"#utility.yul\":3578:3607   */\n      swap1\n      pop\n        /* \"#utility.yul\":3616:3649   */\n      tag_332\n        /* \"#utility.yul\":3643:3648   */\n      dup2\n        /* \"#utility.yul\":3616:3649   */\n      tag_234\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3516:3655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3697:5090   */\n    tag_236:\n        /* \"#utility.yul\":3775:3780   */\n      0x00\n        /* \"#utility.yul\":3819:3823   */\n      0xe0\n        /* \"#utility.yul\":3807:3816   */\n      dup3\n        /* \"#utility.yul\":3802:3805   */\n      dup5\n        /* \"#utility.yul\":3798:3817   */\n      sub\n        /* \"#utility.yul\":3794:3824   */\n      slt\n        /* \"#utility.yul\":3791:3908   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3827:3906   */\n      tag_335\n      tag_221\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3791:3908   */\n    tag_334:\n        /* \"#utility.yul\":3926:3947   */\n      tag_336\n        /* \"#utility.yul\":3942:3946   */\n      0xe0\n        /* \"#utility.yul\":3926:3947   */\n      tag_224\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3917:3947   */\n      swap1\n      pop\n        /* \"#utility.yul\":4008:4009   */\n      0x00\n        /* \"#utility.yul\":4048:4097   */\n      tag_337\n        /* \"#utility.yul\":4093:4096   */\n      dup5\n        /* \"#utility.yul\":4084:4090   */\n      dup3\n        /* \"#utility.yul\":4073:4082   */\n      dup6\n        /* \"#utility.yul\":4069:4091   */\n      add\n        /* \"#utility.yul\":4048:4097   */\n      tag_229\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4041:4045   */\n      0x00\n        /* \"#utility.yul\":4034:4039   */\n      dup4\n        /* \"#utility.yul\":4030:4046   */\n      add\n        /* \"#utility.yul\":4023:4098   */\n      mstore\n        /* \"#utility.yul\":3957:4109   */\n      pop\n        /* \"#utility.yul\":4170:4172   */\n      0x20\n        /* \"#utility.yul\":4211:4260   */\n      tag_338\n        /* \"#utility.yul\":4256:4259   */\n      dup5\n        /* \"#utility.yul\":4247:4253   */\n      dup3\n        /* \"#utility.yul\":4236:4245   */\n      dup6\n        /* \"#utility.yul\":4232:4254   */\n      add\n        /* \"#utility.yul\":4211:4260   */\n      tag_229\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4204:4208   */\n      0x20\n        /* \"#utility.yul\":4197:4202   */\n      dup4\n        /* \"#utility.yul\":4193:4209   */\n      add\n        /* \"#utility.yul\":4186:4261   */\n      mstore\n        /* \"#utility.yul\":4119:4272   */\n      pop\n        /* \"#utility.yul\":4331:4333   */\n      0x40\n        /* \"#utility.yul\":4372:4420   */\n      tag_339\n        /* \"#utility.yul\":4416:4419   */\n      dup5\n        /* \"#utility.yul\":4407:4413   */\n      dup3\n        /* \"#utility.yul\":4396:4405   */\n      dup6\n        /* \"#utility.yul\":4392:4414   */\n      add\n        /* \"#utility.yul\":4372:4420   */\n      tag_232\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4365:4369   */\n      0x40\n        /* \"#utility.yul\":4358:4363   */\n      dup4\n        /* \"#utility.yul\":4354:4370   */\n      add\n        /* \"#utility.yul\":4347:4421   */\n      mstore\n        /* \"#utility.yul\":4282:4432   */\n      pop\n        /* \"#utility.yul\":4494:4496   */\n      0x60\n        /* \"#utility.yul\":4535:4584   */\n      tag_340\n        /* \"#utility.yul\":4580:4583   */\n      dup5\n        /* \"#utility.yul\":4571:4577   */\n      dup3\n        /* \"#utility.yul\":4560:4569   */\n      dup6\n        /* \"#utility.yul\":4556:4578   */\n      add\n        /* \"#utility.yul\":4535:4584   */\n      tag_235\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4528:4532   */\n      0x60\n        /* \"#utility.yul\":4521:4526   */\n      dup4\n        /* \"#utility.yul\":4517:4533   */\n      add\n        /* \"#utility.yul\":4510:4585   */\n      mstore\n        /* \"#utility.yul\":4442:4596   */\n      pop\n        /* \"#utility.yul\":4658:4661   */\n      0x80\n        /* \"#utility.yul\":4700:4749   */\n      tag_341\n        /* \"#utility.yul\":4745:4748   */\n      dup5\n        /* \"#utility.yul\":4736:4742   */\n      dup3\n        /* \"#utility.yul\":4725:4734   */\n      dup6\n        /* \"#utility.yul\":4721:4743   */\n      add\n        /* \"#utility.yul\":4700:4749   */\n      tag_235\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4693:4697   */\n      0x80\n        /* \"#utility.yul\":4686:4691   */\n      dup4\n        /* \"#utility.yul\":4682:4698   */\n      add\n        /* \"#utility.yul\":4675:4750   */\n      mstore\n        /* \"#utility.yul\":4606:4761   */\n      pop\n        /* \"#utility.yul\":4820:4823   */\n      0xa0\n        /* \"#utility.yul\":4862:4910   */\n      tag_342\n        /* \"#utility.yul\":4906:4909   */\n      dup5\n        /* \"#utility.yul\":4897:4903   */\n      dup3\n        /* \"#utility.yul\":4886:4895   */\n      dup6\n        /* \"#utility.yul\":4882:4904   */\n      add\n        /* \"#utility.yul\":4862:4910   */\n      tag_232\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4855:4859   */\n      0xa0\n        /* \"#utility.yul\":4848:4853   */\n      dup4\n        /* \"#utility.yul\":4844:4860   */\n      add\n        /* \"#utility.yul\":4837:4911   */\n      mstore\n        /* \"#utility.yul\":4771:4922   */\n      pop\n        /* \"#utility.yul\":4981:4984   */\n      0xc0\n        /* \"#utility.yul\":5023:5071   */\n      tag_343\n        /* \"#utility.yul\":5067:5070   */\n      dup5\n        /* \"#utility.yul\":5058:5064   */\n      dup3\n        /* \"#utility.yul\":5047:5056   */\n      dup6\n        /* \"#utility.yul\":5043:5065   */\n      add\n        /* \"#utility.yul\":5023:5071   */\n      tag_232\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5016:5020   */\n      0xc0\n        /* \"#utility.yul\":5009:5014   */\n      dup4\n        /* \"#utility.yul\":5005:5021   */\n      add\n        /* \"#utility.yul\":4998:5072   */\n      mstore\n        /* \"#utility.yul\":4932:5083   */\n      pop\n        /* \"#utility.yul\":3697:5090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5096:5484   */\n    tag_22:\n        /* \"#utility.yul\":5184:5190   */\n      0x00\n        /* \"#utility.yul\":5233:5236   */\n      0xe0\n        /* \"#utility.yul\":5221:5230   */\n      dup3\n        /* \"#utility.yul\":5212:5219   */\n      dup5\n        /* \"#utility.yul\":5208:5231   */\n      sub\n        /* \"#utility.yul\":5204:5237   */\n      slt\n        /* \"#utility.yul\":5201:5321   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":5240:5319   */\n      tag_346\n      tag_219\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5201:5321   */\n    tag_345:\n        /* \"#utility.yul\":5360:5361   */\n      0x00\n        /* \"#utility.yul\":5385:5467   */\n      tag_347\n        /* \"#utility.yul\":5459:5466   */\n      dup5\n        /* \"#utility.yul\":5450:5456   */\n      dup3\n        /* \"#utility.yul\":5439:5448   */\n      dup6\n        /* \"#utility.yul\":5435:5457   */\n      add\n        /* \"#utility.yul\":5385:5467   */\n      tag_236\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5375:5467   */\n      swap2\n      pop\n        /* \"#utility.yul\":5331:5477   */\n      pop\n        /* \"#utility.yul\":5096:5484   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5490:5964   */\n    tag_26:\n        /* \"#utility.yul\":5558:5564   */\n      0x00\n        /* \"#utility.yul\":5566:5572   */\n      dup1\n        /* \"#utility.yul\":5615:5617   */\n      0x40\n        /* \"#utility.yul\":5603:5612   */\n      dup4\n        /* \"#utility.yul\":5594:5601   */\n      dup6\n        /* \"#utility.yul\":5590:5613   */\n      sub\n        /* \"#utility.yul\":5586:5618   */\n      slt\n        /* \"#utility.yul\":5583:5702   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5621:5700   */\n      tag_350\n      tag_219\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5583:5702   */\n    tag_349:\n        /* \"#utility.yul\":5741:5742   */\n      0x00\n        /* \"#utility.yul\":5766:5819   */\n      tag_351\n        /* \"#utility.yul\":5811:5818   */\n      dup6\n        /* \"#utility.yul\":5802:5808   */\n      dup3\n        /* \"#utility.yul\":5791:5800   */\n      dup7\n        /* \"#utility.yul\":5787:5809   */\n      add\n        /* \"#utility.yul\":5766:5819   */\n      tag_235\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5756:5819   */\n      swap3\n      pop\n        /* \"#utility.yul\":5712:5829   */\n      pop\n        /* \"#utility.yul\":5868:5870   */\n      0x20\n        /* \"#utility.yul\":5894:5947   */\n      tag_352\n        /* \"#utility.yul\":5939:5946   */\n      dup6\n        /* \"#utility.yul\":5930:5936   */\n      dup3\n        /* \"#utility.yul\":5919:5928   */\n      dup7\n        /* \"#utility.yul\":5915:5937   */\n      add\n        /* \"#utility.yul\":5894:5947   */\n      tag_229\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5884:5947   */\n      swap2\n      pop\n        /* \"#utility.yul\":5839:5957   */\n      pop\n        /* \"#utility.yul\":5490:5964   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5970:6088   */\n    tag_237:\n        /* \"#utility.yul\":6057:6081   */\n      tag_354\n        /* \"#utility.yul\":6075:6080   */\n      dup2\n        /* \"#utility.yul\":6057:6081   */\n      tag_227\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":6052:6055   */\n      dup3\n        /* \"#utility.yul\":6045:6082   */\n      mstore\n        /* \"#utility.yul\":5970:6088   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6094:6316   */\n    tag_32:\n        /* \"#utility.yul\":6187:6191   */\n      0x00\n        /* \"#utility.yul\":6225:6227   */\n      0x20\n        /* \"#utility.yul\":6214:6223   */\n      dup3\n        /* \"#utility.yul\":6210:6228   */\n      add\n        /* \"#utility.yul\":6202:6228   */\n      swap1\n      pop\n        /* \"#utility.yul\":6238:6309   */\n      tag_356\n        /* \"#utility.yul\":6306:6307   */\n      0x00\n        /* \"#utility.yul\":6295:6304   */\n      dup4\n        /* \"#utility.yul\":6291:6308   */\n      add\n        /* \"#utility.yul\":6282:6288   */\n      dup5\n        /* \"#utility.yul\":6238:6309   */\n      tag_237\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6094:6316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6322:6382   */\n    tag_238:\n        /* \"#utility.yul\":6350:6353   */\n      0x00\n        /* \"#utility.yul\":6371:6376   */\n      dup2\n        /* \"#utility.yul\":6364:6376   */\n      swap1\n      pop\n        /* \"#utility.yul\":6322:6382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6388:6530   */\n    tag_239:\n        /* \"#utility.yul\":6438:6447   */\n      0x00\n        /* \"#utility.yul\":6471:6524   */\n      tag_359\n        /* \"#utility.yul\":6489:6523   */\n      tag_360\n        /* \"#utility.yul\":6498:6522   */\n      tag_361\n        /* \"#utility.yul\":6516:6521   */\n      dup5\n        /* \"#utility.yul\":6498:6522   */\n      tag_226\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6489:6523   */\n      tag_238\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6471:6524   */\n      tag_226\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6458:6524   */\n      swap1\n      pop\n        /* \"#utility.yul\":6388:6530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6536:6662   */\n    tag_240:\n        /* \"#utility.yul\":6586:6595   */\n      0x00\n        /* \"#utility.yul\":6619:6656   */\n      tag_363\n        /* \"#utility.yul\":6650:6655   */\n      dup3\n        /* \"#utility.yul\":6619:6656   */\n      tag_239\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6606:6656   */\n      swap1\n      pop\n        /* \"#utility.yul\":6536:6662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6668:6814   */\n    tag_241:\n        /* \"#utility.yul\":6738:6747   */\n      0x00\n        /* \"#utility.yul\":6771:6808   */\n      tag_365\n        /* \"#utility.yul\":6802:6807   */\n      dup3\n        /* \"#utility.yul\":6771:6808   */\n      tag_240\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6758:6808   */\n      swap1\n      pop\n        /* \"#utility.yul\":6668:6814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6820:6991   */\n    tag_242:\n        /* \"#utility.yul\":6927:6984   */\n      tag_367\n        /* \"#utility.yul\":6978:6983   */\n      dup2\n        /* \"#utility.yul\":6927:6984   */\n      tag_241\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6922:6925   */\n      dup3\n        /* \"#utility.yul\":6915:6985   */\n      mstore\n        /* \"#utility.yul\":6820:6991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6997:7259   */\n    tag_37:\n        /* \"#utility.yul\":7110:7114   */\n      0x00\n        /* \"#utility.yul\":7148:7150   */\n      0x20\n        /* \"#utility.yul\":7137:7146   */\n      dup3\n        /* \"#utility.yul\":7133:7151   */\n      add\n        /* \"#utility.yul\":7125:7151   */\n      swap1\n      pop\n        /* \"#utility.yul\":7161:7252   */\n      tag_369\n        /* \"#utility.yul\":7249:7250   */\n      0x00\n        /* \"#utility.yul\":7238:7247   */\n      dup4\n        /* \"#utility.yul\":7234:7251   */\n      add\n        /* \"#utility.yul\":7225:7231   */\n      dup5\n        /* \"#utility.yul\":7161:7252   */\n      tag_242\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6997:7259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7265:7884   */\n    tag_44:\n        /* \"#utility.yul\":7342:7348   */\n      0x00\n        /* \"#utility.yul\":7350:7356   */\n      dup1\n        /* \"#utility.yul\":7358:7364   */\n      0x00\n        /* \"#utility.yul\":7407:7409   */\n      0x60\n        /* \"#utility.yul\":7395:7404   */\n      dup5\n        /* \"#utility.yul\":7386:7393   */\n      dup7\n        /* \"#utility.yul\":7382:7405   */\n      sub\n        /* \"#utility.yul\":7378:7410   */\n      slt\n        /* \"#utility.yul\":7375:7494   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":7413:7492   */\n      tag_372\n      tag_219\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7375:7494   */\n    tag_371:\n        /* \"#utility.yul\":7533:7534   */\n      0x00\n        /* \"#utility.yul\":7558:7611   */\n      tag_373\n        /* \"#utility.yul\":7603:7610   */\n      dup7\n        /* \"#utility.yul\":7594:7600   */\n      dup3\n        /* \"#utility.yul\":7583:7592   */\n      dup8\n        /* \"#utility.yul\":7579:7601   */\n      add\n        /* \"#utility.yul\":7558:7611   */\n      tag_229\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7548:7611   */\n      swap4\n      pop\n        /* \"#utility.yul\":7504:7621   */\n      pop\n        /* \"#utility.yul\":7660:7662   */\n      0x20\n        /* \"#utility.yul\":7686:7739   */\n      tag_374\n        /* \"#utility.yul\":7731:7738   */\n      dup7\n        /* \"#utility.yul\":7722:7728   */\n      dup3\n        /* \"#utility.yul\":7711:7720   */\n      dup8\n        /* \"#utility.yul\":7707:7729   */\n      add\n        /* \"#utility.yul\":7686:7739   */\n      tag_235\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7676:7739   */\n      swap3\n      pop\n        /* \"#utility.yul\":7631:7749   */\n      pop\n        /* \"#utility.yul\":7788:7790   */\n      0x40\n        /* \"#utility.yul\":7814:7867   */\n      tag_375\n        /* \"#utility.yul\":7859:7866   */\n      dup7\n        /* \"#utility.yul\":7850:7856   */\n      dup3\n        /* \"#utility.yul\":7839:7848   */\n      dup8\n        /* \"#utility.yul\":7835:7857   */\n      add\n        /* \"#utility.yul\":7814:7867   */\n      tag_229\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7804:7867   */\n      swap2\n      pop\n        /* \"#utility.yul\":7759:7877   */\n      pop\n        /* \"#utility.yul\":7265:7884   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7890:8007   */\n    tag_243:\n        /* \"#utility.yul\":7999:8000   */\n      0x00\n        /* \"#utility.yul\":7996:7997   */\n      dup1\n        /* \"#utility.yul\":7989:8001   */\n      revert\n        /* \"#utility.yul\":8013:8130   */\n    tag_244:\n        /* \"#utility.yul\":8122:8123   */\n      0x00\n        /* \"#utility.yul\":8119:8120   */\n      dup1\n        /* \"#utility.yul\":8112:8124   */\n      revert\n        /* \"#utility.yul\":8136:8253   */\n    tag_245:\n        /* \"#utility.yul\":8245:8246   */\n      0x00\n        /* \"#utility.yul\":8242:8243   */\n      dup1\n        /* \"#utility.yul\":8235:8247   */\n      revert\n        /* \"#utility.yul\":8272:8824   */\n    tag_246:\n        /* \"#utility.yul\":8329:8337   */\n      0x00\n        /* \"#utility.yul\":8339:8345   */\n      dup1\n        /* \"#utility.yul\":8389:8392   */\n      dup4\n        /* \"#utility.yul\":8382:8386   */\n      0x1f\n        /* \"#utility.yul\":8374:8380   */\n      dup5\n        /* \"#utility.yul\":8370:8387   */\n      add\n        /* \"#utility.yul\":8366:8393   */\n      slt\n        /* \"#utility.yul\":8356:8478   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":8397:8476   */\n      tag_381\n      tag_243\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8356:8478   */\n    tag_380:\n        /* \"#utility.yul\":8510:8516   */\n      dup3\n        /* \"#utility.yul\":8497:8517   */\n      calldataload\n        /* \"#utility.yul\":8487:8517   */\n      swap1\n      pop\n        /* \"#utility.yul\":8540:8558   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8532:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8559   */\n      gt\n        /* \"#utility.yul\":8526:8643   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":8562:8641   */\n      tag_383\n      tag_244\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8526:8643   */\n    tag_382:\n        /* \"#utility.yul\":8676:8680   */\n      0x20\n        /* \"#utility.yul\":8668:8674   */\n      dup4\n        /* \"#utility.yul\":8664:8681   */\n      add\n        /* \"#utility.yul\":8652:8681   */\n      swap2\n      pop\n        /* \"#utility.yul\":8730:8733   */\n      dup4\n        /* \"#utility.yul\":8722:8726   */\n      0x01\n        /* \"#utility.yul\":8714:8720   */\n      dup3\n        /* \"#utility.yul\":8710:8727   */\n      mul\n        /* \"#utility.yul\":8700:8708   */\n      dup4\n        /* \"#utility.yul\":8696:8728   */\n      add\n        /* \"#utility.yul\":8693:8734   */\n      gt\n        /* \"#utility.yul\":8690:8818   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":8737:8816   */\n      tag_385\n      tag_245\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8690:8818   */\n    tag_384:\n        /* \"#utility.yul\":8272:8824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8830:9647   */\n    tag_49:\n        /* \"#utility.yul\":8918:8924   */\n      0x00\n        /* \"#utility.yul\":8926:8932   */\n      dup1\n        /* \"#utility.yul\":8934:8940   */\n      0x00\n        /* \"#utility.yul\":8942:8948   */\n      dup1\n        /* \"#utility.yul\":8991:8993   */\n      0x60\n        /* \"#utility.yul\":8979:8988   */\n      dup6\n        /* \"#utility.yul\":8970:8977   */\n      dup8\n        /* \"#utility.yul\":8966:8989   */\n      sub\n        /* \"#utility.yul\":8962:8994   */\n      slt\n        /* \"#utility.yul\":8959:9078   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":8997:9076   */\n      tag_388\n      tag_219\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8959:9078   */\n    tag_387:\n        /* \"#utility.yul\":9117:9118   */\n      0x00\n        /* \"#utility.yul\":9142:9195   */\n      tag_389\n        /* \"#utility.yul\":9187:9194   */\n      dup8\n        /* \"#utility.yul\":9178:9184   */\n      dup3\n        /* \"#utility.yul\":9167:9176   */\n      dup9\n        /* \"#utility.yul\":9163:9185   */\n      add\n        /* \"#utility.yul\":9142:9195   */\n      tag_235\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9132:9195   */\n      swap5\n      pop\n        /* \"#utility.yul\":9088:9205   */\n      pop\n        /* \"#utility.yul\":9244:9246   */\n      0x20\n        /* \"#utility.yul\":9270:9323   */\n      tag_390\n        /* \"#utility.yul\":9315:9322   */\n      dup8\n        /* \"#utility.yul\":9306:9312   */\n      dup3\n        /* \"#utility.yul\":9295:9304   */\n      dup9\n        /* \"#utility.yul\":9291:9313   */\n      add\n        /* \"#utility.yul\":9270:9323   */\n      tag_235\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9260:9323   */\n      swap4\n      pop\n        /* \"#utility.yul\":9215:9333   */\n      pop\n        /* \"#utility.yul\":9400:9402   */\n      0x40\n        /* \"#utility.yul\":9389:9398   */\n      dup6\n        /* \"#utility.yul\":9385:9403   */\n      add\n        /* \"#utility.yul\":9372:9404   */\n      calldataload\n        /* \"#utility.yul\":9431:9449   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9423:9429   */\n      dup2\n        /* \"#utility.yul\":9420:9450   */\n      gt\n        /* \"#utility.yul\":9417:9534   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":9453:9532   */\n      tag_392\n      tag_220\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9417:9534   */\n    tag_391:\n        /* \"#utility.yul\":9566:9630   */\n      tag_393\n        /* \"#utility.yul\":9622:9629   */\n      dup8\n        /* \"#utility.yul\":9613:9619   */\n      dup3\n        /* \"#utility.yul\":9602:9611   */\n      dup9\n        /* \"#utility.yul\":9598:9620   */\n      add\n        /* \"#utility.yul\":9566:9630   */\n      tag_246\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9548:9630   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":9343:9640   */\n      pop\n        /* \"#utility.yul\":8830:9647   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9653:9761   */\n    tag_247:\n        /* \"#utility.yul\":9730:9754   */\n      tag_395\n        /* \"#utility.yul\":9748:9753   */\n      dup2\n        /* \"#utility.yul\":9730:9754   */\n      tag_233\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9725:9728   */\n      dup3\n        /* \"#utility.yul\":9718:9755   */\n      mstore\n        /* \"#utility.yul\":9653:9761   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9767:9875   */\n    tag_248:\n        /* \"#utility.yul\":9844:9868   */\n      tag_397\n        /* \"#utility.yul\":9862:9867   */\n      dup2\n        /* \"#utility.yul\":9844:9868   */\n      tag_227\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9839:9842   */\n      dup3\n        /* \"#utility.yul\":9832:9869   */\n      mstore\n        /* \"#utility.yul\":9767:9875   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9881:9986   */\n    tag_249:\n        /* \"#utility.yul\":9956:9979   */\n      tag_399\n        /* \"#utility.yul\":9973:9978   */\n      dup2\n        /* \"#utility.yul\":9956:9979   */\n      tag_230\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9951:9954   */\n      dup3\n        /* \"#utility.yul\":9944:9980   */\n      mstore\n        /* \"#utility.yul\":9881:9986   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10056:10728   */\n    tag_250:\n        /* \"#utility.yul\":10193:10197   */\n      0x60\n        /* \"#utility.yul\":10188:10191   */\n      dup3\n        /* \"#utility.yul\":10184:10198   */\n      add\n        /* \"#utility.yul\":10282:10286   */\n      0x00\n        /* \"#utility.yul\":10275:10280   */\n      dup3\n        /* \"#utility.yul\":10271:10287   */\n      add\n        /* \"#utility.yul\":10265:10288   */\n      mload\n        /* \"#utility.yul\":10301:10364   */\n      tag_401\n        /* \"#utility.yul\":10358:10362   */\n      0x00\n        /* \"#utility.yul\":10353:10356   */\n      dup6\n        /* \"#utility.yul\":10349:10363   */\n      add\n        /* \"#utility.yul\":10335:10347   */\n      dup3\n        /* \"#utility.yul\":10301:10364   */\n      tag_248\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10208:10374   */\n      pop\n        /* \"#utility.yul\":10458:10462   */\n      0x20\n        /* \"#utility.yul\":10451:10456   */\n      dup3\n        /* \"#utility.yul\":10447:10463   */\n      add\n        /* \"#utility.yul\":10441:10464   */\n      mload\n        /* \"#utility.yul\":10477:10540   */\n      tag_402\n        /* \"#utility.yul\":10534:10538   */\n      0x20\n        /* \"#utility.yul\":10529:10532   */\n      dup6\n        /* \"#utility.yul\":10525:10539   */\n      add\n        /* \"#utility.yul\":10511:10523   */\n      dup3\n        /* \"#utility.yul\":10477:10540   */\n      tag_248\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10384:10550   */\n      pop\n        /* \"#utility.yul\":10631:10635   */\n      0x40\n        /* \"#utility.yul\":10624:10629   */\n      dup3\n        /* \"#utility.yul\":10620:10636   */\n      add\n        /* \"#utility.yul\":10614:10637   */\n      mload\n        /* \"#utility.yul\":10650:10711   */\n      tag_403\n        /* \"#utility.yul\":10705:10709   */\n      0x40\n        /* \"#utility.yul\":10700:10703   */\n      dup6\n        /* \"#utility.yul\":10696:10710   */\n      add\n        /* \"#utility.yul\":10682:10694   */\n      dup3\n        /* \"#utility.yul\":10650:10711   */\n      tag_249\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10560:10721   */\n      pop\n        /* \"#utility.yul\":10162:10728   */\n      pop\n        /* \"#utility.yul\":10056:10728   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10814:12103   */\n    tag_251:\n        /* \"#utility.yul\":10981:10987   */\n      0x0100\n        /* \"#utility.yul\":10976:10979   */\n      dup3\n        /* \"#utility.yul\":10972:10988   */\n      add\n        /* \"#utility.yul\":11073:11077   */\n      0x00\n        /* \"#utility.yul\":11066:11071   */\n      dup3\n        /* \"#utility.yul\":11062:11078   */\n      add\n        /* \"#utility.yul\":11056:11079   */\n      mload\n        /* \"#utility.yul\":11092:11155   */\n      tag_405\n        /* \"#utility.yul\":11149:11153   */\n      0x00\n        /* \"#utility.yul\":11144:11147   */\n      dup6\n        /* \"#utility.yul\":11140:11154   */\n      add\n        /* \"#utility.yul\":11126:11138   */\n      dup3\n        /* \"#utility.yul\":11092:11155   */\n      tag_247\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10998:11165   */\n      pop\n        /* \"#utility.yul\":11250:11254   */\n      0x20\n        /* \"#utility.yul\":11243:11248   */\n      dup3\n        /* \"#utility.yul\":11239:11255   */\n      add\n        /* \"#utility.yul\":11233:11256   */\n      mload\n        /* \"#utility.yul\":11269:11332   */\n      tag_406\n        /* \"#utility.yul\":11326:11330   */\n      0x20\n        /* \"#utility.yul\":11321:11324   */\n      dup6\n        /* \"#utility.yul\":11317:11331   */\n      add\n        /* \"#utility.yul\":11303:11315   */\n      dup3\n        /* \"#utility.yul\":11269:11332   */\n      tag_247\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11175:11342   */\n      pop\n        /* \"#utility.yul\":11425:11429   */\n      0x40\n        /* \"#utility.yul\":11418:11423   */\n      dup3\n        /* \"#utility.yul\":11414:11430   */\n      add\n        /* \"#utility.yul\":11408:11431   */\n      mload\n        /* \"#utility.yul\":11444:11507   */\n      tag_407\n        /* \"#utility.yul\":11501:11505   */\n      0x40\n        /* \"#utility.yul\":11496:11499   */\n      dup6\n        /* \"#utility.yul\":11492:11506   */\n      add\n        /* \"#utility.yul\":11478:11490   */\n      dup3\n        /* \"#utility.yul\":11444:11507   */\n      tag_248\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11352:11517   */\n      pop\n        /* \"#utility.yul\":11602:11606   */\n      0x60\n        /* \"#utility.yul\":11595:11600   */\n      dup3\n        /* \"#utility.yul\":11591:11607   */\n      add\n        /* \"#utility.yul\":11585:11608   */\n      mload\n        /* \"#utility.yul\":11621:11734   */\n      tag_408\n        /* \"#utility.yul\":11728:11732   */\n      0x60\n        /* \"#utility.yul\":11723:11726   */\n      dup6\n        /* \"#utility.yul\":11719:11733   */\n      add\n        /* \"#utility.yul\":11705:11717   */\n      dup3\n        /* \"#utility.yul\":11621:11734   */\n      tag_250\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11527:11744   */\n      pop\n        /* \"#utility.yul\":11830:11834   */\n      0x80\n        /* \"#utility.yul\":11823:11828   */\n      dup3\n        /* \"#utility.yul\":11819:11835   */\n      add\n        /* \"#utility.yul\":11813:11836   */\n      mload\n        /* \"#utility.yul\":11849:11910   */\n      tag_409\n        /* \"#utility.yul\":11904:11908   */\n      0xc0\n        /* \"#utility.yul\":11899:11902   */\n      dup6\n        /* \"#utility.yul\":11895:11909   */\n      add\n        /* \"#utility.yul\":11881:11893   */\n      dup3\n        /* \"#utility.yul\":11849:11910   */\n      tag_249\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11754:11920   */\n      pop\n        /* \"#utility.yul\":12006:12010   */\n      0xa0\n        /* \"#utility.yul\":11999:12004   */\n      dup3\n        /* \"#utility.yul\":11995:12011   */\n      add\n        /* \"#utility.yul\":11989:12012   */\n      mload\n        /* \"#utility.yul\":12025:12086   */\n      tag_410\n        /* \"#utility.yul\":12080:12084   */\n      0xe0\n        /* \"#utility.yul\":12075:12078   */\n      dup6\n        /* \"#utility.yul\":12071:12085   */\n      add\n        /* \"#utility.yul\":12057:12069   */\n      dup3\n        /* \"#utility.yul\":12025:12086   */\n      tag_249\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11930:12096   */\n      pop\n        /* \"#utility.yul\":10950:12103   */\n      pop\n        /* \"#utility.yul\":10814:12103   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12109:12472   */\n    tag_59:\n        /* \"#utility.yul\":12272:12276   */\n      0x00\n        /* \"#utility.yul\":12310:12313   */\n      0x0100\n        /* \"#utility.yul\":12299:12308   */\n      dup3\n        /* \"#utility.yul\":12295:12314   */\n      add\n        /* \"#utility.yul\":12287:12314   */\n      swap1\n      pop\n        /* \"#utility.yul\":12324:12465   */\n      tag_412\n        /* \"#utility.yul\":12462:12463   */\n      0x00\n        /* \"#utility.yul\":12451:12460   */\n      dup4\n        /* \"#utility.yul\":12447:12464   */\n      add\n        /* \"#utility.yul\":12438:12444   */\n      dup5\n        /* \"#utility.yul\":12324:12465   */\n      tag_251\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12109:12472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12478:12596   */\n    tag_252:\n        /* \"#utility.yul\":12565:12589   */\n      tag_414\n        /* \"#utility.yul\":12583:12588   */\n      dup2\n        /* \"#utility.yul\":12565:12589   */\n      tag_233\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":12560:12563   */\n      dup3\n        /* \"#utility.yul\":12553:12590   */\n      mstore\n        /* \"#utility.yul\":12478:12596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12602:12700   */\n    tag_253:\n        /* \"#utility.yul\":12653:12659   */\n      0x00\n        /* \"#utility.yul\":12687:12692   */\n      dup2\n        /* \"#utility.yul\":12681:12693   */\n      mload\n        /* \"#utility.yul\":12671:12693   */\n      swap1\n      pop\n        /* \"#utility.yul\":12602:12700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12706:12874   */\n    tag_254:\n        /* \"#utility.yul\":12789:12800   */\n      0x00\n        /* \"#utility.yul\":12823:12829   */\n      dup3\n        /* \"#utility.yul\":12818:12821   */\n      dup3\n        /* \"#utility.yul\":12811:12830   */\n      mstore\n        /* \"#utility.yul\":12863:12867   */\n      0x20\n        /* \"#utility.yul\":12858:12861   */\n      dup3\n        /* \"#utility.yul\":12854:12868   */\n      add\n        /* \"#utility.yul\":12839:12868   */\n      swap1\n      pop\n        /* \"#utility.yul\":12706:12874   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12880:13126   */\n    tag_255:\n        /* \"#utility.yul\":12961:12962   */\n      0x00\n        /* \"#utility.yul\":12971:13084   */\n    tag_418:\n        /* \"#utility.yul\":12985:12991   */\n      dup4\n        /* \"#utility.yul\":12982:12983   */\n      dup2\n        /* \"#utility.yul\":12979:12992   */\n      lt\n        /* \"#utility.yul\":12971:13084   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":13070:13071   */\n      dup1\n        /* \"#utility.yul\":13065:13068   */\n      dup3\n        /* \"#utility.yul\":13061:13072   */\n      add\n        /* \"#utility.yul\":13055:13073   */\n      mload\n        /* \"#utility.yul\":13051:13052   */\n      dup2\n        /* \"#utility.yul\":13046:13049   */\n      dup5\n        /* \"#utility.yul\":13042:13053   */\n      add\n        /* \"#utility.yul\":13035:13074   */\n      mstore\n        /* \"#utility.yul\":13007:13009   */\n      0x20\n        /* \"#utility.yul\":13004:13005   */\n      dup2\n        /* \"#utility.yul\":13000:13010   */\n      add\n        /* \"#utility.yul\":12995:13010   */\n      swap1\n      pop\n        /* \"#utility.yul\":12971:13084   */\n      jump(tag_418)\n    tag_420:\n        /* \"#utility.yul\":13118:13119   */\n      0x00\n        /* \"#utility.yul\":13109:13115   */\n      dup5\n        /* \"#utility.yul\":13104:13107   */\n      dup5\n        /* \"#utility.yul\":13100:13116   */\n      add\n        /* \"#utility.yul\":13093:13120   */\n      mstore\n        /* \"#utility.yul\":12942:13126   */\n      pop\n        /* \"#utility.yul\":12880:13126   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13132:13505   */\n    tag_256:\n        /* \"#utility.yul\":13218:13221   */\n      0x00\n        /* \"#utility.yul\":13246:13284   */\n      tag_422\n        /* \"#utility.yul\":13278:13283   */\n      dup3\n        /* \"#utility.yul\":13246:13284   */\n      tag_253\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":13300:13370   */\n      tag_423\n        /* \"#utility.yul\":13363:13369   */\n      dup2\n        /* \"#utility.yul\":13358:13361   */\n      dup6\n        /* \"#utility.yul\":13300:13370   */\n      tag_254\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13293:13370   */\n      swap4\n      pop\n        /* \"#utility.yul\":13379:13444   */\n      tag_424\n        /* \"#utility.yul\":13437:13443   */\n      dup2\n        /* \"#utility.yul\":13432:13435   */\n      dup6\n        /* \"#utility.yul\":13425:13429   */\n      0x20\n        /* \"#utility.yul\":13418:13423   */\n      dup7\n        /* \"#utility.yul\":13414:13430   */\n      add\n        /* \"#utility.yul\":13379:13444   */\n      tag_255\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13469:13498   */\n      tag_425\n        /* \"#utility.yul\":13491:13497   */\n      dup2\n        /* \"#utility.yul\":13469:13498   */\n      tag_222\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13464:13467   */\n      dup5\n        /* \"#utility.yul\":13460:13499   */\n      add\n        /* \"#utility.yul\":13453:13499   */\n      swap2\n      pop\n        /* \"#utility.yul\":13222:13505   */\n      pop\n        /* \"#utility.yul\":13132:13505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13511:14151   */\n    tag_61:\n        /* \"#utility.yul\":13706:13710   */\n      0x00\n        /* \"#utility.yul\":13744:13747   */\n      0x80\n        /* \"#utility.yul\":13733:13742   */\n      dup3\n        /* \"#utility.yul\":13729:13748   */\n      add\n        /* \"#utility.yul\":13721:13748   */\n      swap1\n      pop\n        /* \"#utility.yul\":13758:13829   */\n      tag_427\n        /* \"#utility.yul\":13826:13827   */\n      0x00\n        /* \"#utility.yul\":13815:13824   */\n      dup4\n        /* \"#utility.yul\":13811:13828   */\n      add\n        /* \"#utility.yul\":13802:13808   */\n      dup8\n        /* \"#utility.yul\":13758:13829   */\n      tag_237\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13839:13911   */\n      tag_428\n        /* \"#utility.yul\":13907:13909   */\n      0x20\n        /* \"#utility.yul\":13896:13905   */\n      dup4\n        /* \"#utility.yul\":13892:13910   */\n      add\n        /* \"#utility.yul\":13883:13889   */\n      dup7\n        /* \"#utility.yul\":13839:13911   */\n      tag_252\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13921:13993   */\n      tag_429\n        /* \"#utility.yul\":13989:13991   */\n      0x40\n        /* \"#utility.yul\":13978:13987   */\n      dup4\n        /* \"#utility.yul\":13974:13992   */\n      add\n        /* \"#utility.yul\":13965:13971   */\n      dup6\n        /* \"#utility.yul\":13921:13993   */\n      tag_252\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":14040:14049   */\n      dup2\n        /* \"#utility.yul\":14034:14038   */\n      dup2\n        /* \"#utility.yul\":14030:14050   */\n      sub\n        /* \"#utility.yul\":14025:14027   */\n      0x60\n        /* \"#utility.yul\":14014:14023   */\n      dup4\n        /* \"#utility.yul\":14010:14028   */\n      add\n        /* \"#utility.yul\":14003:14051   */\n      mstore\n        /* \"#utility.yul\":14068:14144   */\n      tag_430\n        /* \"#utility.yul\":14139:14143   */\n      dup2\n        /* \"#utility.yul\":14130:14136   */\n      dup5\n        /* \"#utility.yul\":14068:14144   */\n      tag_256\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":14060:14144   */\n      swap1\n      pop\n        /* \"#utility.yul\":13511:14151   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14157:14300   */\n    tag_257:\n        /* \"#utility.yul\":14214:14219   */\n      0x00\n        /* \"#utility.yul\":14245:14251   */\n      dup2\n        /* \"#utility.yul\":14239:14252   */\n      mload\n        /* \"#utility.yul\":14230:14252   */\n      swap1\n      pop\n        /* \"#utility.yul\":14261:14294   */\n      tag_432\n        /* \"#utility.yul\":14288:14293   */\n      dup2\n        /* \"#utility.yul\":14261:14294   */\n      tag_234\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":14157:14300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14306:14657   */\n    tag_70:\n        /* \"#utility.yul\":14376:14382   */\n      0x00\n        /* \"#utility.yul\":14425:14427   */\n      0x20\n        /* \"#utility.yul\":14413:14422   */\n      dup3\n        /* \"#utility.yul\":14404:14411   */\n      dup5\n        /* \"#utility.yul\":14400:14423   */\n      sub\n        /* \"#utility.yul\":14396:14428   */\n      slt\n        /* \"#utility.yul\":14393:14512   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":14431:14510   */\n      tag_435\n      tag_219\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14393:14512   */\n    tag_434:\n        /* \"#utility.yul\":14551:14552   */\n      0x00\n        /* \"#utility.yul\":14576:14640   */\n      tag_436\n        /* \"#utility.yul\":14632:14639   */\n      dup5\n        /* \"#utility.yul\":14623:14629   */\n      dup3\n        /* \"#utility.yul\":14612:14621   */\n      dup6\n        /* \"#utility.yul\":14608:14630   */\n      add\n        /* \"#utility.yul\":14576:14640   */\n      tag_257\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14566:14640   */\n      swap2\n      pop\n        /* \"#utility.yul\":14522:14650   */\n      pop\n        /* \"#utility.yul\":14306:14657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14663:14831   */\n    tag_258:\n        /* \"#utility.yul\":14803:14823   */\n      0x496e73756666696369656e742057455448390000000000000000000000000000\n        /* \"#utility.yul\":14799:14800   */\n      0x00\n        /* \"#utility.yul\":14791:14797   */\n      dup3\n        /* \"#utility.yul\":14787:14801   */\n      add\n        /* \"#utility.yul\":14780:14824   */\n      mstore\n        /* \"#utility.yul\":14663:14831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14837:15203   */\n    tag_259:\n        /* \"#utility.yul\":14979:14982   */\n      0x00\n        /* \"#utility.yul\":15000:15067   */\n      tag_439\n        /* \"#utility.yul\":15064:15066   */\n      0x12\n        /* \"#utility.yul\":15059:15062   */\n      dup4\n        /* \"#utility.yul\":15000:15067   */\n      tag_215\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":14993:15067   */\n      swap2\n      pop\n        /* \"#utility.yul\":15076:15169   */\n      tag_440\n        /* \"#utility.yul\":15165:15168   */\n      dup3\n        /* \"#utility.yul\":15076:15169   */\n      tag_258\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15194:15196   */\n      0x20\n        /* \"#utility.yul\":15189:15192   */\n      dup3\n        /* \"#utility.yul\":15185:15197   */\n      add\n        /* \"#utility.yul\":15178:15197   */\n      swap1\n      pop\n        /* \"#utility.yul\":14837:15203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15209:15628   */\n    tag_73:\n        /* \"#utility.yul\":15375:15379   */\n      0x00\n        /* \"#utility.yul\":15413:15415   */\n      0x20\n        /* \"#utility.yul\":15402:15411   */\n      dup3\n        /* \"#utility.yul\":15398:15416   */\n      add\n        /* \"#utility.yul\":15390:15416   */\n      swap1\n      pop\n        /* \"#utility.yul\":15462:15471   */\n      dup2\n        /* \"#utility.yul\":15456:15460   */\n      dup2\n        /* \"#utility.yul\":15452:15472   */\n      sub\n        /* \"#utility.yul\":15448:15449   */\n      0x00\n        /* \"#utility.yul\":15437:15446   */\n      dup4\n        /* \"#utility.yul\":15433:15450   */\n      add\n        /* \"#utility.yul\":15426:15473   */\n      mstore\n        /* \"#utility.yul\":15490:15621   */\n      tag_442\n        /* \"#utility.yul\":15616:15620   */\n      dup2\n        /* \"#utility.yul\":15490:15621   */\n      tag_259\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":15482:15621   */\n      swap1\n      pop\n        /* \"#utility.yul\":15209:15628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15634:15856   */\n    tag_76:\n        /* \"#utility.yul\":15727:15731   */\n      0x00\n        /* \"#utility.yul\":15765:15767   */\n      0x20\n        /* \"#utility.yul\":15754:15763   */\n      dup3\n        /* \"#utility.yul\":15750:15768   */\n      add\n        /* \"#utility.yul\":15742:15768   */\n      swap1\n      pop\n        /* \"#utility.yul\":15778:15849   */\n      tag_444\n        /* \"#utility.yul\":15846:15847   */\n      0x00\n        /* \"#utility.yul\":15835:15844   */\n      dup4\n        /* \"#utility.yul\":15831:15848   */\n      add\n        /* \"#utility.yul\":15822:15828   */\n      dup5\n        /* \"#utility.yul\":15778:15849   */\n      tag_252\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15634:15856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15862:16030   */\n    tag_260:\n        /* \"#utility.yul\":16002:16022   */\n      0x496e73756666696369656e7420746f6b656e0000000000000000000000000000\n        /* \"#utility.yul\":15998:15999   */\n      0x00\n        /* \"#utility.yul\":15990:15996   */\n      dup3\n        /* \"#utility.yul\":15986:16000   */\n      add\n        /* \"#utility.yul\":15979:16023   */\n      mstore\n        /* \"#utility.yul\":15862:16030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16036:16402   */\n    tag_261:\n        /* \"#utility.yul\":16178:16181   */\n      0x00\n        /* \"#utility.yul\":16199:16266   */\n      tag_447\n        /* \"#utility.yul\":16263:16265   */\n      0x12\n        /* \"#utility.yul\":16258:16261   */\n      dup4\n        /* \"#utility.yul\":16199:16266   */\n      tag_215\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":16192:16266   */\n      swap2\n      pop\n        /* \"#utility.yul\":16275:16368   */\n      tag_448\n        /* \"#utility.yul\":16364:16367   */\n      dup3\n        /* \"#utility.yul\":16275:16368   */\n      tag_260\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":16393:16395   */\n      0x20\n        /* \"#utility.yul\":16388:16391   */\n      dup3\n        /* \"#utility.yul\":16384:16396   */\n      add\n        /* \"#utility.yul\":16377:16396   */\n      swap1\n      pop\n        /* \"#utility.yul\":16036:16402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16408:16827   */\n    tag_88:\n        /* \"#utility.yul\":16574:16578   */\n      0x00\n        /* \"#utility.yul\":16612:16614   */\n      0x20\n        /* \"#utility.yul\":16601:16610   */\n      dup3\n        /* \"#utility.yul\":16597:16615   */\n      add\n        /* \"#utility.yul\":16589:16615   */\n      swap1\n      pop\n        /* \"#utility.yul\":16661:16670   */\n      dup2\n        /* \"#utility.yul\":16655:16659   */\n      dup2\n        /* \"#utility.yul\":16651:16671   */\n      sub\n        /* \"#utility.yul\":16647:16648   */\n      0x00\n        /* \"#utility.yul\":16636:16645   */\n      dup4\n        /* \"#utility.yul\":16632:16649   */\n      add\n        /* \"#utility.yul\":16625:16672   */\n      mstore\n        /* \"#utility.yul\":16689:16820   */\n      tag_450\n        /* \"#utility.yul\":16815:16819   */\n      dup2\n        /* \"#utility.yul\":16689:16820   */\n      tag_261\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":16681:16820   */\n      swap1\n      pop\n        /* \"#utility.yul\":16408:16827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16867:17604   */\n    tag_262:\n        /* \"#utility.yul\":16941:16946   */\n      0x00\n        /* \"#utility.yul\":16985:16989   */\n      0x60\n        /* \"#utility.yul\":16973:16982   */\n      dup3\n        /* \"#utility.yul\":16968:16971   */\n      dup5\n        /* \"#utility.yul\":16964:16983   */\n      sub\n        /* \"#utility.yul\":16960:16990   */\n      slt\n        /* \"#utility.yul\":16957:17074   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":16993:17072   */\n      tag_453\n      tag_221\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":16957:17074   */\n    tag_452:\n        /* \"#utility.yul\":17092:17113   */\n      tag_454\n        /* \"#utility.yul\":17108:17112   */\n      0x60\n        /* \"#utility.yul\":17092:17113   */\n      tag_224\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":17083:17113   */\n      swap1\n      pop\n        /* \"#utility.yul\":17174:17175   */\n      0x00\n        /* \"#utility.yul\":17214:17263   */\n      tag_455\n        /* \"#utility.yul\":17259:17262   */\n      dup5\n        /* \"#utility.yul\":17250:17256   */\n      dup3\n        /* \"#utility.yul\":17239:17248   */\n      dup6\n        /* \"#utility.yul\":17235:17257   */\n      add\n        /* \"#utility.yul\":17214:17263   */\n      tag_229\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":17207:17211   */\n      0x00\n        /* \"#utility.yul\":17200:17205   */\n      dup4\n        /* \"#utility.yul\":17196:17212   */\n      add\n        /* \"#utility.yul\":17189:17264   */\n      mstore\n        /* \"#utility.yul\":17123:17275   */\n      pop\n        /* \"#utility.yul\":17336:17338   */\n      0x20\n        /* \"#utility.yul\":17377:17426   */\n      tag_456\n        /* \"#utility.yul\":17422:17425   */\n      dup5\n        /* \"#utility.yul\":17413:17419   */\n      dup3\n        /* \"#utility.yul\":17402:17411   */\n      dup6\n        /* \"#utility.yul\":17398:17420   */\n      add\n        /* \"#utility.yul\":17377:17426   */\n      tag_229\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":17370:17374   */\n      0x20\n        /* \"#utility.yul\":17363:17368   */\n      dup4\n        /* \"#utility.yul\":17359:17375   */\n      add\n        /* \"#utility.yul\":17352:17427   */\n      mstore\n        /* \"#utility.yul\":17285:17438   */\n      pop\n        /* \"#utility.yul\":17496:17498   */\n      0x40\n        /* \"#utility.yul\":17537:17585   */\n      tag_457\n        /* \"#utility.yul\":17581:17584   */\n      dup5\n        /* \"#utility.yul\":17572:17578   */\n      dup3\n        /* \"#utility.yul\":17561:17570   */\n      dup6\n        /* \"#utility.yul\":17557:17579   */\n      add\n        /* \"#utility.yul\":17537:17585   */\n      tag_232\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":17530:17534   */\n      0x40\n        /* \"#utility.yul\":17523:17528   */\n      dup4\n        /* \"#utility.yul\":17519:17535   */\n      add\n        /* \"#utility.yul\":17512:17586   */\n      mstore\n        /* \"#utility.yul\":17448:17597   */\n      pop\n        /* \"#utility.yul\":16867:17604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17652:18925   */\n    tag_263:\n        /* \"#utility.yul\":17736:17741   */\n      0x00\n        /* \"#utility.yul\":17780:17786   */\n      0x0100\n        /* \"#utility.yul\":17768:17777   */\n      dup3\n        /* \"#utility.yul\":17763:17766   */\n      dup5\n        /* \"#utility.yul\":17759:17778   */\n      sub\n        /* \"#utility.yul\":17755:17787   */\n      slt\n        /* \"#utility.yul\":17752:17871   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":17790:17869   */\n      tag_460\n      tag_221\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":17752:17871   */\n    tag_459:\n        /* \"#utility.yul\":17889:17910   */\n      tag_461\n        /* \"#utility.yul\":17905:17909   */\n      0xc0\n        /* \"#utility.yul\":17889:17910   */\n      tag_224\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":17880:17910   */\n      swap1\n      pop\n        /* \"#utility.yul\":17972:17973   */\n      0x00\n        /* \"#utility.yul\":18012:18061   */\n      tag_462\n        /* \"#utility.yul\":18057:18060   */\n      dup5\n        /* \"#utility.yul\":18048:18054   */\n      dup3\n        /* \"#utility.yul\":18037:18046   */\n      dup6\n        /* \"#utility.yul\":18033:18055   */\n      add\n        /* \"#utility.yul\":18012:18061   */\n      tag_235\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":18005:18009   */\n      0x00\n        /* \"#utility.yul\":17998:18003   */\n      dup4\n        /* \"#utility.yul\":17994:18010   */\n      add\n        /* \"#utility.yul\":17987:18062   */\n      mstore\n        /* \"#utility.yul\":17920:18073   */\n      pop\n        /* \"#utility.yul\":18135:18137   */\n      0x20\n        /* \"#utility.yul\":18176:18225   */\n      tag_463\n        /* \"#utility.yul\":18221:18224   */\n      dup5\n        /* \"#utility.yul\":18212:18218   */\n      dup3\n        /* \"#utility.yul\":18201:18210   */\n      dup6\n        /* \"#utility.yul\":18197:18219   */\n      add\n        /* \"#utility.yul\":18176:18225   */\n      tag_235\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":18169:18173   */\n      0x20\n        /* \"#utility.yul\":18162:18167   */\n      dup4\n        /* \"#utility.yul\":18158:18174   */\n      add\n        /* \"#utility.yul\":18151:18226   */\n      mstore\n        /* \"#utility.yul\":18083:18237   */\n      pop\n        /* \"#utility.yul\":18297:18299   */\n      0x40\n        /* \"#utility.yul\":18338:18387   */\n      tag_464\n        /* \"#utility.yul\":18383:18386   */\n      dup5\n        /* \"#utility.yul\":18374:18380   */\n      dup3\n        /* \"#utility.yul\":18363:18372   */\n      dup6\n        /* \"#utility.yul\":18359:18381   */\n      add\n        /* \"#utility.yul\":18338:18387   */\n      tag_229\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":18331:18335   */\n      0x40\n        /* \"#utility.yul\":18324:18329   */\n      dup4\n        /* \"#utility.yul\":18320:18336   */\n      add\n        /* \"#utility.yul\":18313:18388   */\n      mstore\n        /* \"#utility.yul\":18247:18399   */\n      pop\n        /* \"#utility.yul\":18461:18463   */\n      0x60\n        /* \"#utility.yul\":18502:18576   */\n      tag_465\n        /* \"#utility.yul\":18572:18575   */\n      dup5\n        /* \"#utility.yul\":18563:18569   */\n      dup3\n        /* \"#utility.yul\":18552:18561   */\n      dup6\n        /* \"#utility.yul\":18548:18570   */\n      add\n        /* \"#utility.yul\":18502:18576   */\n      tag_262\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":18495:18499   */\n      0x60\n        /* \"#utility.yul\":18488:18493   */\n      dup4\n        /* \"#utility.yul\":18484:18500   */\n      add\n        /* \"#utility.yul\":18477:18577   */\n      mstore\n        /* \"#utility.yul\":18409:18588   */\n      pop\n        /* \"#utility.yul\":18651:18654   */\n      0xc0\n        /* \"#utility.yul\":18693:18741   */\n      tag_466\n        /* \"#utility.yul\":18737:18740   */\n      dup5\n        /* \"#utility.yul\":18728:18734   */\n      dup3\n        /* \"#utility.yul\":18717:18726   */\n      dup6\n        /* \"#utility.yul\":18713:18735   */\n      add\n        /* \"#utility.yul\":18693:18741   */\n      tag_232\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":18686:18690   */\n      0x80\n        /* \"#utility.yul\":18679:18684   */\n      dup4\n        /* \"#utility.yul\":18675:18691   */\n      add\n        /* \"#utility.yul\":18668:18742   */\n      mstore\n        /* \"#utility.yul\":18598:18753   */\n      pop\n        /* \"#utility.yul\":18816:18819   */\n      0xe0\n        /* \"#utility.yul\":18858:18906   */\n      tag_467\n        /* \"#utility.yul\":18902:18905   */\n      dup5\n        /* \"#utility.yul\":18893:18899   */\n      dup3\n        /* \"#utility.yul\":18882:18891   */\n      dup6\n        /* \"#utility.yul\":18878:18900   */\n      add\n        /* \"#utility.yul\":18858:18906   */\n      tag_232\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":18851:18855   */\n      0xa0\n        /* \"#utility.yul\":18844:18849   */\n      dup4\n        /* \"#utility.yul\":18840:18856   */\n      add\n        /* \"#utility.yul\":18833:18907   */\n      mstore\n        /* \"#utility.yul\":18763:18918   */\n      pop\n        /* \"#utility.yul\":17652:18925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18931:19331   */\n    tag_94:\n        /* \"#utility.yul\":19025:19031   */\n      0x00\n        /* \"#utility.yul\":19074:19077   */\n      0x0100\n        /* \"#utility.yul\":19062:19071   */\n      dup3\n        /* \"#utility.yul\":19053:19060   */\n      dup5\n        /* \"#utility.yul\":19049:19072   */\n      sub\n        /* \"#utility.yul\":19045:19078   */\n      slt\n        /* \"#utility.yul\":19042:19162   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":19081:19160   */\n      tag_470\n      tag_219\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":19042:19162   */\n    tag_469:\n        /* \"#utility.yul\":19201:19202   */\n      0x00\n        /* \"#utility.yul\":19226:19314   */\n      tag_471\n        /* \"#utility.yul\":19306:19313   */\n      dup5\n        /* \"#utility.yul\":19297:19303   */\n      dup3\n        /* \"#utility.yul\":19286:19295   */\n      dup6\n        /* \"#utility.yul\":19282:19304   */\n      add\n        /* \"#utility.yul\":19226:19314   */\n      tag_263\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":19216:19314   */\n      swap2\n      pop\n        /* \"#utility.yul\":19172:19324   */\n      pop\n        /* \"#utility.yul\":18931:19331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19337:19445   */\n    tag_264:\n        /* \"#utility.yul\":19414:19438   */\n      tag_473\n        /* \"#utility.yul\":19432:19437   */\n      dup2\n        /* \"#utility.yul\":19414:19438   */\n      tag_226\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19409:19412   */\n      dup3\n        /* \"#utility.yul\":19402:19439   */\n      mstore\n        /* \"#utility.yul\":19337:19445   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19545:21168   */\n    tag_265:\n        /* \"#utility.yul\":19720:19726   */\n      0x0100\n        /* \"#utility.yul\":19715:19718   */\n      dup3\n        /* \"#utility.yul\":19711:19727   */\n      add\n        /* \"#utility.yul\":19812:19816   */\n      0x00\n        /* \"#utility.yul\":19805:19810   */\n      dup3\n        /* \"#utility.yul\":19801:19817   */\n      add\n        /* \"#utility.yul\":19795:19818   */\n      mload\n        /* \"#utility.yul\":19831:19894   */\n      tag_475\n        /* \"#utility.yul\":19888:19892   */\n      0x00\n        /* \"#utility.yul\":19883:19886   */\n      dup6\n        /* \"#utility.yul\":19879:19893   */\n      add\n        /* \"#utility.yul\":19865:19877   */\n      dup3\n        /* \"#utility.yul\":19831:19894   */\n      tag_248\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":19737:19904   */\n      pop\n        /* \"#utility.yul\":19990:19994   */\n      0x20\n        /* \"#utility.yul\":19983:19988   */\n      dup3\n        /* \"#utility.yul\":19979:19995   */\n      add\n        /* \"#utility.yul\":19973:19996   */\n      mload\n        /* \"#utility.yul\":20009:20072   */\n      tag_476\n        /* \"#utility.yul\":20066:20070   */\n      0x20\n        /* \"#utility.yul\":20061:20064   */\n      dup6\n        /* \"#utility.yul\":20057:20071   */\n      add\n        /* \"#utility.yul\":20043:20055   */\n      dup3\n        /* \"#utility.yul\":20009:20072   */\n      tag_248\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":19914:20082   */\n      pop\n        /* \"#utility.yul\":20163:20167   */\n      0x40\n        /* \"#utility.yul\":20156:20161   */\n      dup3\n        /* \"#utility.yul\":20152:20168   */\n      add\n        /* \"#utility.yul\":20146:20169   */\n      mload\n        /* \"#utility.yul\":20182:20243   */\n      tag_477\n        /* \"#utility.yul\":20237:20241   */\n      0x40\n        /* \"#utility.yul\":20232:20235   */\n      dup6\n        /* \"#utility.yul\":20228:20242   */\n      add\n        /* \"#utility.yul\":20214:20226   */\n      dup3\n        /* \"#utility.yul\":20182:20243   */\n      tag_249\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20092:20253   */\n      pop\n        /* \"#utility.yul\":20340:20344   */\n      0x60\n        /* \"#utility.yul\":20333:20338   */\n      dup3\n        /* \"#utility.yul\":20329:20345   */\n      add\n        /* \"#utility.yul\":20323:20346   */\n      mload\n        /* \"#utility.yul\":20359:20422   */\n      tag_478\n        /* \"#utility.yul\":20416:20420   */\n      0x60\n        /* \"#utility.yul\":20411:20414   */\n      dup6\n        /* \"#utility.yul\":20407:20421   */\n      add\n        /* \"#utility.yul\":20393:20405   */\n      dup3\n        /* \"#utility.yul\":20359:20422   */\n      tag_248\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":20263:20432   */\n      pop\n        /* \"#utility.yul\":20518:20522   */\n      0x80\n        /* \"#utility.yul\":20511:20516   */\n      dup3\n        /* \"#utility.yul\":20507:20523   */\n      add\n        /* \"#utility.yul\":20501:20524   */\n      mload\n        /* \"#utility.yul\":20537:20600   */\n      tag_479\n        /* \"#utility.yul\":20594:20598   */\n      0x80\n        /* \"#utility.yul\":20589:20592   */\n      dup6\n        /* \"#utility.yul\":20585:20599   */\n      add\n        /* \"#utility.yul\":20571:20583   */\n      dup3\n        /* \"#utility.yul\":20537:20600   */\n      tag_247\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":20442:20610   */\n      pop\n        /* \"#utility.yul\":20696:20700   */\n      0xa0\n        /* \"#utility.yul\":20689:20694   */\n      dup3\n        /* \"#utility.yul\":20685:20701   */\n      add\n        /* \"#utility.yul\":20679:20702   */\n      mload\n        /* \"#utility.yul\":20715:20778   */\n      tag_480\n        /* \"#utility.yul\":20772:20776   */\n      0xa0\n        /* \"#utility.yul\":20767:20770   */\n      dup6\n        /* \"#utility.yul\":20763:20777   */\n      add\n        /* \"#utility.yul\":20749:20761   */\n      dup3\n        /* \"#utility.yul\":20715:20778   */\n      tag_247\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":20620:20788   */\n      pop\n        /* \"#utility.yul\":20882:20886   */\n      0xc0\n        /* \"#utility.yul\":20875:20880   */\n      dup3\n        /* \"#utility.yul\":20871:20887   */\n      add\n        /* \"#utility.yul\":20865:20888   */\n      mload\n        /* \"#utility.yul\":20901:20964   */\n      tag_481\n        /* \"#utility.yul\":20958:20962   */\n      0xc0\n        /* \"#utility.yul\":20953:20956   */\n      dup6\n        /* \"#utility.yul\":20949:20963   */\n      add\n        /* \"#utility.yul\":20935:20947   */\n      dup3\n        /* \"#utility.yul\":20901:20964   */\n      tag_247\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":20798:20974   */\n      pop\n        /* \"#utility.yul\":21069:21073   */\n      0xe0\n        /* \"#utility.yul\":21062:21067   */\n      dup3\n        /* \"#utility.yul\":21058:21074   */\n      add\n        /* \"#utility.yul\":21052:21075   */\n      mload\n        /* \"#utility.yul\":21088:21151   */\n      tag_482\n        /* \"#utility.yul\":21145:21149   */\n      0xe0\n        /* \"#utility.yul\":21140:21143   */\n      dup6\n        /* \"#utility.yul\":21136:21150   */\n      add\n        /* \"#utility.yul\":21122:21134   */\n      dup3\n        /* \"#utility.yul\":21088:21151   */\n      tag_264\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":20984:21161   */\n      pop\n        /* \"#utility.yul\":19689:21168   */\n      pop\n        /* \"#utility.yul\":19545:21168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21174:21553   */\n    tag_104:\n        /* \"#utility.yul\":21345:21349   */\n      0x00\n        /* \"#utility.yul\":21383:21386   */\n      0x0100\n        /* \"#utility.yul\":21372:21381   */\n      dup3\n        /* \"#utility.yul\":21368:21387   */\n      add\n        /* \"#utility.yul\":21360:21387   */\n      swap1\n      pop\n        /* \"#utility.yul\":21397:21546   */\n      tag_484\n        /* \"#utility.yul\":21543:21544   */\n      0x00\n        /* \"#utility.yul\":21532:21541   */\n      dup4\n        /* \"#utility.yul\":21528:21545   */\n      add\n        /* \"#utility.yul\":21519:21525   */\n      dup5\n        /* \"#utility.yul\":21397:21546   */\n      tag_265\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":21174:21553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21559:21706   */\n    tag_266:\n        /* \"#utility.yul\":21660:21671   */\n      0x00\n        /* \"#utility.yul\":21697:21700   */\n      dup2\n        /* \"#utility.yul\":21682:21700   */\n      swap1\n      pop\n        /* \"#utility.yul\":21559:21706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21712:22098   */\n    tag_267:\n        /* \"#utility.yul\":21816:21819   */\n      0x00\n        /* \"#utility.yul\":21844:21882   */\n      tag_487\n        /* \"#utility.yul\":21876:21881   */\n      dup3\n        /* \"#utility.yul\":21844:21882   */\n      tag_253\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":21898:21986   */\n      tag_488\n        /* \"#utility.yul\":21979:21985   */\n      dup2\n        /* \"#utility.yul\":21974:21977   */\n      dup6\n        /* \"#utility.yul\":21898:21986   */\n      tag_266\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":21891:21986   */\n      swap4\n      pop\n        /* \"#utility.yul\":21995:22060   */\n      tag_489\n        /* \"#utility.yul\":22053:22059   */\n      dup2\n        /* \"#utility.yul\":22048:22051   */\n      dup6\n        /* \"#utility.yul\":22041:22045   */\n      0x20\n        /* \"#utility.yul\":22034:22039   */\n      dup7\n        /* \"#utility.yul\":22030:22046   */\n      add\n        /* \"#utility.yul\":21995:22060   */\n      tag_255\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":22085:22091   */\n      dup1\n        /* \"#utility.yul\":22080:22083   */\n      dup5\n        /* \"#utility.yul\":22076:22092   */\n      add\n        /* \"#utility.yul\":22069:22092   */\n      swap2\n      pop\n        /* \"#utility.yul\":21820:22098   */\n      pop\n        /* \"#utility.yul\":21712:22098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22104:22375   */\n    tag_136:\n        /* \"#utility.yul\":22234:22237   */\n      0x00\n        /* \"#utility.yul\":22256:22349   */\n      tag_491\n        /* \"#utility.yul\":22345:22348   */\n      dup3\n        /* \"#utility.yul\":22336:22342   */\n      dup5\n        /* \"#utility.yul\":22256:22349   */\n      tag_267\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":22249:22349   */\n      swap2\n      pop\n        /* \"#utility.yul\":22366:22369   */\n      dup2\n        /* \"#utility.yul\":22359:22369   */\n      swap1\n      pop\n        /* \"#utility.yul\":22104:22375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22381:22534   */\n    tag_268:\n        /* \"#utility.yul\":22521:22526   */\n      0x5354450000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22517:22518   */\n      0x00\n        /* \"#utility.yul\":22509:22515   */\n      dup3\n        /* \"#utility.yul\":22505:22519   */\n      add\n        /* \"#utility.yul\":22498:22527   */\n      mstore\n        /* \"#utility.yul\":22381:22534   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22540:22905   */\n    tag_269:\n        /* \"#utility.yul\":22682:22685   */\n      0x00\n        /* \"#utility.yul\":22703:22769   */\n      tag_494\n        /* \"#utility.yul\":22767:22768   */\n      0x03\n        /* \"#utility.yul\":22762:22765   */\n      dup4\n        /* \"#utility.yul\":22703:22769   */\n      tag_215\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":22696:22769   */\n      swap2\n      pop\n        /* \"#utility.yul\":22778:22871   */\n      tag_495\n        /* \"#utility.yul\":22867:22870   */\n      dup3\n        /* \"#utility.yul\":22778:22871   */\n      tag_268\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":22896:22898   */\n      0x20\n        /* \"#utility.yul\":22891:22894   */\n      dup3\n        /* \"#utility.yul\":22887:22899   */\n      add\n        /* \"#utility.yul\":22880:22899   */\n      swap1\n      pop\n        /* \"#utility.yul\":22540:22905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22911:23330   */\n    tag_142:\n        /* \"#utility.yul\":23077:23081   */\n      0x00\n        /* \"#utility.yul\":23115:23117   */\n      0x20\n        /* \"#utility.yul\":23104:23113   */\n      dup3\n        /* \"#utility.yul\":23100:23118   */\n      add\n        /* \"#utility.yul\":23092:23118   */\n      swap1\n      pop\n        /* \"#utility.yul\":23164:23173   */\n      dup2\n        /* \"#utility.yul\":23158:23162   */\n      dup2\n        /* \"#utility.yul\":23154:23174   */\n      sub\n        /* \"#utility.yul\":23150:23151   */\n      0x00\n        /* \"#utility.yul\":23139:23148   */\n      dup4\n        /* \"#utility.yul\":23135:23152   */\n      add\n        /* \"#utility.yul\":23128:23175   */\n      mstore\n        /* \"#utility.yul\":23192:23323   */\n      tag_497\n        /* \"#utility.yul\":23318:23322   */\n      dup2\n        /* \"#utility.yul\":23192:23323   */\n      tag_269\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":23184:23323   */\n      swap1\n      pop\n        /* \"#utility.yul\":22911:23330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23336:23451   */\n    tag_270:\n        /* \"#utility.yul\":23421:23444   */\n      tag_499\n        /* \"#utility.yul\":23438:23443   */\n      dup2\n        /* \"#utility.yul\":23421:23444   */\n      tag_230\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":23416:23419   */\n      dup3\n        /* \"#utility.yul\":23409:23445   */\n      mstore\n        /* \"#utility.yul\":23336:23451   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23457:23895   */\n    tag_146:\n        /* \"#utility.yul\":23604:23608   */\n      0x00\n        /* \"#utility.yul\":23642:23644   */\n      0x60\n        /* \"#utility.yul\":23631:23640   */\n      dup3\n        /* \"#utility.yul\":23627:23645   */\n      add\n        /* \"#utility.yul\":23619:23645   */\n      swap1\n      pop\n        /* \"#utility.yul\":23655:23726   */\n      tag_501\n        /* \"#utility.yul\":23723:23724   */\n      0x00\n        /* \"#utility.yul\":23712:23721   */\n      dup4\n        /* \"#utility.yul\":23708:23725   */\n      add\n        /* \"#utility.yul\":23699:23705   */\n      dup7\n        /* \"#utility.yul\":23655:23726   */\n      tag_237\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":23736:23808   */\n      tag_502\n        /* \"#utility.yul\":23804:23806   */\n      0x20\n        /* \"#utility.yul\":23793:23802   */\n      dup4\n        /* \"#utility.yul\":23789:23807   */\n      add\n        /* \"#utility.yul\":23780:23786   */\n      dup6\n        /* \"#utility.yul\":23736:23808   */\n      tag_237\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":23818:23888   */\n      tag_503\n        /* \"#utility.yul\":23884:23886   */\n      0x40\n        /* \"#utility.yul\":23873:23882   */\n      dup4\n        /* \"#utility.yul\":23869:23887   */\n      add\n        /* \"#utility.yul\":23860:23866   */\n      dup5\n        /* \"#utility.yul\":23818:23888   */\n      tag_270\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":23457:23895   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23901:24049   */\n    tag_271:\n        /* \"#utility.yul\":24003:24014   */\n      0x00\n        /* \"#utility.yul\":24040:24043   */\n      dup2\n        /* \"#utility.yul\":24025:24043   */\n      swap1\n      pop\n        /* \"#utility.yul\":23901:24049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24055:24269   */\n    tag_272:\n        /* \"#utility.yul\":24195:24261   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24191:24192   */\n      0x00\n        /* \"#utility.yul\":24183:24189   */\n      dup3\n        /* \"#utility.yul\":24179:24193   */\n      add\n        /* \"#utility.yul\":24172:24262   */\n      mstore\n        /* \"#utility.yul\":24055:24269   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24275:24675   */\n    tag_273:\n        /* \"#utility.yul\":24435:24438   */\n      0x00\n        /* \"#utility.yul\":24456:24540   */\n      tag_507\n        /* \"#utility.yul\":24538:24539   */\n      0x01\n        /* \"#utility.yul\":24533:24536   */\n      dup4\n        /* \"#utility.yul\":24456:24540   */\n      tag_271\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":24449:24540   */\n      swap2\n      pop\n        /* \"#utility.yul\":24549:24642   */\n      tag_508\n        /* \"#utility.yul\":24638:24641   */\n      dup3\n        /* \"#utility.yul\":24549:24642   */\n      tag_272\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":24667:24668   */\n      0x01\n        /* \"#utility.yul\":24662:24665   */\n      dup3\n        /* \"#utility.yul\":24658:24669   */\n      add\n        /* \"#utility.yul\":24651:24669   */\n      swap1\n      pop\n        /* \"#utility.yul\":24275:24675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24681:24775   */\n    tag_274:\n        /* \"#utility.yul\":24714:24722   */\n      0x00\n        /* \"#utility.yul\":24762:24767   */\n      dup2\n        /* \"#utility.yul\":24758:24760   */\n      0x60\n        /* \"#utility.yul\":24754:24768   */\n      shl\n        /* \"#utility.yul\":24733:24768   */\n      swap1\n      pop\n        /* \"#utility.yul\":24681:24775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24781:24875   */\n    tag_275:\n        /* \"#utility.yul\":24820:24827   */\n      0x00\n        /* \"#utility.yul\":24849:24869   */\n      tag_511\n        /* \"#utility.yul\":24863:24868   */\n      dup3\n        /* \"#utility.yul\":24849:24869   */\n      tag_274\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":24838:24869   */\n      swap1\n      pop\n        /* \"#utility.yul\":24781:24875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24881:24981   */\n    tag_276:\n        /* \"#utility.yul\":24920:24927   */\n      0x00\n        /* \"#utility.yul\":24949:24975   */\n      tag_513\n        /* \"#utility.yul\":24969:24974   */\n      dup3\n        /* \"#utility.yul\":24949:24975   */\n      tag_275\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":24938:24975   */\n      swap1\n      pop\n        /* \"#utility.yul\":24881:24981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24987:25144   */\n    tag_277:\n        /* \"#utility.yul\":25092:25137   */\n      tag_515\n        /* \"#utility.yul\":25112:25136   */\n      tag_516\n        /* \"#utility.yul\":25130:25135   */\n      dup3\n        /* \"#utility.yul\":25112:25136   */\n      tag_227\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":25092:25137   */\n      tag_276\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":25087:25090   */\n      dup3\n        /* \"#utility.yul\":25080:25138   */\n      mstore\n        /* \"#utility.yul\":24987:25144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25150:25227   */\n    tag_278:\n        /* \"#utility.yul\":25187:25194   */\n      0x00\n        /* \"#utility.yul\":25216:25221   */\n      dup2\n        /* \"#utility.yul\":25205:25221   */\n      swap1\n      pop\n        /* \"#utility.yul\":25150:25227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25233:25312   */\n    tag_279:\n        /* \"#utility.yul\":25272:25279   */\n      0x00\n        /* \"#utility.yul\":25301:25306   */\n      dup2\n        /* \"#utility.yul\":25290:25306   */\n      swap1\n      pop\n        /* \"#utility.yul\":25233:25312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25318:25475   */\n    tag_280:\n        /* \"#utility.yul\":25423:25468   */\n      tag_520\n        /* \"#utility.yul\":25443:25467   */\n      tag_521\n        /* \"#utility.yul\":25461:25466   */\n      dup3\n        /* \"#utility.yul\":25443:25467   */\n      tag_278\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":25423:25468   */\n      tag_279\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":25418:25421   */\n      dup3\n        /* \"#utility.yul\":25411:25469   */\n      mstore\n        /* \"#utility.yul\":25318:25475   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25481:26285   */\n    tag_148:\n        /* \"#utility.yul\":25750:25753   */\n      0x00\n        /* \"#utility.yul\":25772:25920   */\n      tag_523\n        /* \"#utility.yul\":25916:25919   */\n      dup3\n        /* \"#utility.yul\":25772:25920   */\n      tag_273\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":25765:25920   */\n      swap2\n      pop\n        /* \"#utility.yul\":25930:26005   */\n      tag_524\n        /* \"#utility.yul\":26001:26004   */\n      dup3\n        /* \"#utility.yul\":25992:25998   */\n      dup7\n        /* \"#utility.yul\":25930:26005   */\n      tag_277\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":26030:26032   */\n      0x14\n        /* \"#utility.yul\":26025:26028   */\n      dup3\n        /* \"#utility.yul\":26021:26033   */\n      add\n        /* \"#utility.yul\":26014:26033   */\n      swap2\n      pop\n        /* \"#utility.yul\":26043:26118   */\n      tag_525\n        /* \"#utility.yul\":26114:26117   */\n      dup3\n        /* \"#utility.yul\":26105:26111   */\n      dup6\n        /* \"#utility.yul\":26043:26118   */\n      tag_280\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":26143:26145   */\n      0x20\n        /* \"#utility.yul\":26138:26141   */\n      dup3\n        /* \"#utility.yul\":26134:26146   */\n      add\n        /* \"#utility.yul\":26127:26146   */\n      swap2\n      pop\n        /* \"#utility.yul\":26156:26231   */\n      tag_526\n        /* \"#utility.yul\":26227:26230   */\n      dup3\n        /* \"#utility.yul\":26218:26224   */\n      dup5\n        /* \"#utility.yul\":26156:26231   */\n      tag_280\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":26256:26258   */\n      0x20\n        /* \"#utility.yul\":26251:26254   */\n      dup3\n        /* \"#utility.yul\":26247:26259   */\n      add\n        /* \"#utility.yul\":26240:26259   */\n      swap2\n      pop\n        /* \"#utility.yul\":26276:26279   */\n      dup2\n        /* \"#utility.yul\":26269:26279   */\n      swap1\n      pop\n        /* \"#utility.yul\":25481:26285   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26291:26623   */\n    tag_151:\n        /* \"#utility.yul\":26412:26416   */\n      0x00\n        /* \"#utility.yul\":26450:26452   */\n      0x40\n        /* \"#utility.yul\":26439:26448   */\n      dup3\n        /* \"#utility.yul\":26435:26453   */\n      add\n        /* \"#utility.yul\":26427:26453   */\n      swap1\n      pop\n        /* \"#utility.yul\":26463:26534   */\n      tag_528\n        /* \"#utility.yul\":26531:26532   */\n      0x00\n        /* \"#utility.yul\":26520:26529   */\n      dup4\n        /* \"#utility.yul\":26516:26533   */\n      add\n        /* \"#utility.yul\":26507:26513   */\n      dup6\n        /* \"#utility.yul\":26463:26534   */\n      tag_237\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":26544:26616   */\n      tag_529\n        /* \"#utility.yul\":26612:26614   */\n      0x20\n        /* \"#utility.yul\":26601:26610   */\n      dup4\n        /* \"#utility.yul\":26597:26615   */\n      add\n        /* \"#utility.yul\":26588:26594   */\n      dup5\n        /* \"#utility.yul\":26544:26616   */\n      tag_252\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":26291:26623   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26629:26719   */\n    tag_281:\n        /* \"#utility.yul\":26663:26670   */\n      0x00\n        /* \"#utility.yul\":26706:26711   */\n      dup2\n        /* \"#utility.yul\":26699:26712   */\n      iszero\n        /* \"#utility.yul\":26692:26713   */\n      iszero\n        /* \"#utility.yul\":26681:26713   */\n      swap1\n      pop\n        /* \"#utility.yul\":26629:26719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26725:26841   */\n    tag_282:\n        /* \"#utility.yul\":26795:26816   */\n      tag_532\n        /* \"#utility.yul\":26810:26815   */\n      dup2\n        /* \"#utility.yul\":26795:26816   */\n      tag_281\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":26788:26793   */\n      dup2\n        /* \"#utility.yul\":26785:26817   */\n      eq\n        /* \"#utility.yul\":26775:26835   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":26831:26832   */\n      0x00\n        /* \"#utility.yul\":26828:26829   */\n      dup1\n        /* \"#utility.yul\":26821:26833   */\n      revert\n        /* \"#utility.yul\":26775:26835   */\n    tag_533:\n        /* \"#utility.yul\":26725:26841   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26847:26984   */\n    tag_283:\n        /* \"#utility.yul\":26901:26906   */\n      0x00\n        /* \"#utility.yul\":26932:26938   */\n      dup2\n        /* \"#utility.yul\":26926:26939   */\n      mload\n        /* \"#utility.yul\":26917:26939   */\n      swap1\n      pop\n        /* \"#utility.yul\":26948:26978   */\n      tag_535\n        /* \"#utility.yul\":26972:26977   */\n      dup2\n        /* \"#utility.yul\":26948:26978   */\n      tag_282\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":26847:26984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26990:27335   */\n    tag_159:\n        /* \"#utility.yul\":27057:27063   */\n      0x00\n        /* \"#utility.yul\":27106:27108   */\n      0x20\n        /* \"#utility.yul\":27094:27103   */\n      dup3\n        /* \"#utility.yul\":27085:27092   */\n      dup5\n        /* \"#utility.yul\":27081:27104   */\n      sub\n        /* \"#utility.yul\":27077:27109   */\n      slt\n        /* \"#utility.yul\":27074:27193   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":27112:27191   */\n      tag_538\n      tag_219\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":27074:27193   */\n    tag_537:\n        /* \"#utility.yul\":27232:27233   */\n      0x00\n        /* \"#utility.yul\":27257:27318   */\n      tag_539\n        /* \"#utility.yul\":27310:27317   */\n      dup5\n        /* \"#utility.yul\":27301:27307   */\n      dup3\n        /* \"#utility.yul\":27290:27299   */\n      dup6\n        /* \"#utility.yul\":27286:27308   */\n      add\n        /* \"#utility.yul\":27257:27318   */\n      tag_283\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":27247:27318   */\n      swap2\n      pop\n        /* \"#utility.yul\":27203:27328   */\n      pop\n        /* \"#utility.yul\":26990:27335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27341:27493   */\n    tag_284:\n        /* \"#utility.yul\":27481:27485   */\n      0x5354000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27477:27478   */\n      0x00\n        /* \"#utility.yul\":27469:27475   */\n      dup3\n        /* \"#utility.yul\":27465:27479   */\n      add\n        /* \"#utility.yul\":27458:27486   */\n      mstore\n        /* \"#utility.yul\":27341:27493   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27499:27864   */\n    tag_285:\n        /* \"#utility.yul\":27641:27644   */\n      0x00\n        /* \"#utility.yul\":27662:27728   */\n      tag_542\n        /* \"#utility.yul\":27726:27727   */\n      0x02\n        /* \"#utility.yul\":27721:27724   */\n      dup4\n        /* \"#utility.yul\":27662:27728   */\n      tag_215\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":27655:27728   */\n      swap2\n      pop\n        /* \"#utility.yul\":27737:27830   */\n      tag_543\n        /* \"#utility.yul\":27826:27829   */\n      dup3\n        /* \"#utility.yul\":27737:27830   */\n      tag_284\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":27855:27857   */\n      0x20\n        /* \"#utility.yul\":27850:27853   */\n      dup3\n        /* \"#utility.yul\":27846:27858   */\n      add\n        /* \"#utility.yul\":27839:27858   */\n      swap1\n      pop\n        /* \"#utility.yul\":27499:27864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27870:28289   */\n    tag_162:\n        /* \"#utility.yul\":28036:28040   */\n      0x00\n        /* \"#utility.yul\":28074:28076   */\n      0x20\n        /* \"#utility.yul\":28063:28072   */\n      dup3\n        /* \"#utility.yul\":28059:28077   */\n      add\n        /* \"#utility.yul\":28051:28077   */\n      swap1\n      pop\n        /* \"#utility.yul\":28123:28132   */\n      dup2\n        /* \"#utility.yul\":28117:28121   */\n      dup2\n        /* \"#utility.yul\":28113:28133   */\n      sub\n        /* \"#utility.yul\":28109:28110   */\n      0x00\n        /* \"#utility.yul\":28098:28107   */\n      dup4\n        /* \"#utility.yul\":28094:28111   */\n      add\n        /* \"#utility.yul\":28087:28134   */\n      mstore\n        /* \"#utility.yul\":28151:28282   */\n      tag_545\n        /* \"#utility.yul\":28277:28281   */\n      dup2\n        /* \"#utility.yul\":28151:28282   */\n      tag_285\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":28143:28282   */\n      swap1\n      pop\n        /* \"#utility.yul\":27870:28289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28295:28447   */\n    tag_286:\n        /* \"#utility.yul\":28435:28439   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28431:28432   */\n      0x00\n        /* \"#utility.yul\":28423:28429   */\n      dup3\n        /* \"#utility.yul\":28419:28433   */\n      add\n        /* \"#utility.yul\":28412:28440   */\n      mstore\n        /* \"#utility.yul\":28295:28447   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28453:28818   */\n    tag_287:\n        /* \"#utility.yul\":28595:28598   */\n      0x00\n        /* \"#utility.yul\":28616:28682   */\n      tag_548\n        /* \"#utility.yul\":28680:28681   */\n      0x02\n        /* \"#utility.yul\":28675:28678   */\n      dup4\n        /* \"#utility.yul\":28616:28682   */\n      tag_215\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":28609:28682   */\n      swap2\n      pop\n        /* \"#utility.yul\":28691:28784   */\n      tag_549\n        /* \"#utility.yul\":28780:28783   */\n      dup3\n        /* \"#utility.yul\":28691:28784   */\n      tag_286\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":28809:28811   */\n      0x20\n        /* \"#utility.yul\":28804:28807   */\n      dup3\n        /* \"#utility.yul\":28800:28812   */\n      add\n        /* \"#utility.yul\":28793:28812   */\n      swap1\n      pop\n        /* \"#utility.yul\":28453:28818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28824:29243   */\n    tag_177:\n        /* \"#utility.yul\":28990:28994   */\n      0x00\n        /* \"#utility.yul\":29028:29030   */\n      0x20\n        /* \"#utility.yul\":29017:29026   */\n      dup3\n        /* \"#utility.yul\":29013:29031   */\n      add\n        /* \"#utility.yul\":29005:29031   */\n      swap1\n      pop\n        /* \"#utility.yul\":29077:29086   */\n      dup2\n        /* \"#utility.yul\":29071:29075   */\n      dup2\n        /* \"#utility.yul\":29067:29087   */\n      sub\n        /* \"#utility.yul\":29063:29064   */\n      0x00\n        /* \"#utility.yul\":29052:29061   */\n      dup4\n        /* \"#utility.yul\":29048:29065   */\n      add\n        /* \"#utility.yul\":29041:29088   */\n      mstore\n        /* \"#utility.yul\":29105:29236   */\n      tag_551\n        /* \"#utility.yul\":29231:29235   */\n      dup2\n        /* \"#utility.yul\":29105:29236   */\n      tag_287\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":29097:29236   */\n      swap1\n      pop\n        /* \"#utility.yul\":28824:29243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29249:29429   */\n    tag_288:\n        /* \"#utility.yul\":29297:29374   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29294:29295   */\n      0x00\n        /* \"#utility.yul\":29287:29375   */\n      mstore\n        /* \"#utility.yul\":29394:29398   */\n      0x11\n        /* \"#utility.yul\":29391:29392   */\n      0x04\n        /* \"#utility.yul\":29384:29399   */\n      mstore\n        /* \"#utility.yul\":29418:29422   */\n      0x24\n        /* \"#utility.yul\":29415:29416   */\n      0x00\n        /* \"#utility.yul\":29408:29423   */\n      revert\n        /* \"#utility.yul\":29435:29626   */\n    tag_180:\n        /* \"#utility.yul\":29475:29478   */\n      0x00\n        /* \"#utility.yul\":29494:29514   */\n      tag_554\n        /* \"#utility.yul\":29512:29513   */\n      dup3\n        /* \"#utility.yul\":29494:29514   */\n      tag_233\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":29489:29514   */\n      swap2\n      pop\n        /* \"#utility.yul\":29528:29548   */\n      tag_555\n        /* \"#utility.yul\":29546:29547   */\n      dup4\n        /* \"#utility.yul\":29528:29548   */\n      tag_233\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":29523:29548   */\n      swap3\n      pop\n        /* \"#utility.yul\":29571:29572   */\n      dup3\n        /* \"#utility.yul\":29568:29569   */\n      dup3\n        /* \"#utility.yul\":29564:29573   */\n      add\n        /* \"#utility.yul\":29557:29573   */\n      swap1\n      pop\n        /* \"#utility.yul\":29592:29595   */\n      dup1\n        /* \"#utility.yul\":29589:29590   */\n      dup3\n        /* \"#utility.yul\":29586:29596   */\n      gt\n        /* \"#utility.yul\":29583:29619   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":29599:29617   */\n      tag_557\n      tag_288\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":29583:29619   */\n    tag_556:\n        /* \"#utility.yul\":29435:29626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29632:29826   */\n    tag_200:\n        /* \"#utility.yul\":29672:29676   */\n      0x00\n        /* \"#utility.yul\":29692:29712   */\n      tag_559\n        /* \"#utility.yul\":29710:29711   */\n      dup3\n        /* \"#utility.yul\":29692:29712   */\n      tag_233\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":29687:29712   */\n      swap2\n      pop\n        /* \"#utility.yul\":29726:29746   */\n      tag_560\n        /* \"#utility.yul\":29744:29745   */\n      dup4\n        /* \"#utility.yul\":29726:29746   */\n      tag_233\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":29721:29746   */\n      swap3\n      pop\n        /* \"#utility.yul\":29770:29771   */\n      dup3\n        /* \"#utility.yul\":29767:29768   */\n      dup3\n        /* \"#utility.yul\":29763:29772   */\n      sub\n        /* \"#utility.yul\":29755:29772   */\n      swap1\n      pop\n        /* \"#utility.yul\":29794:29795   */\n      dup2\n        /* \"#utility.yul\":29788:29792   */\n      dup2\n        /* \"#utility.yul\":29785:29796   */\n      gt\n        /* \"#utility.yul\":29782:29819   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":29799:29817   */\n      tag_562\n      tag_288\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":29782:29819   */\n    tag_561:\n        /* \"#utility.yul\":29632:29826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29832:30274   */\n    tag_204:\n        /* \"#utility.yul\":29981:29985   */\n      0x00\n        /* \"#utility.yul\":30019:30021   */\n      0x60\n        /* \"#utility.yul\":30008:30017   */\n      dup3\n        /* \"#utility.yul\":30004:30022   */\n      add\n        /* \"#utility.yul\":29996:30022   */\n      swap1\n      pop\n        /* \"#utility.yul\":30032:30103   */\n      tag_564\n        /* \"#utility.yul\":30100:30101   */\n      0x00\n        /* \"#utility.yul\":30089:30098   */\n      dup4\n        /* \"#utility.yul\":30085:30102   */\n      add\n        /* \"#utility.yul\":30076:30082   */\n      dup7\n        /* \"#utility.yul\":30032:30103   */\n      tag_237\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":30113:30185   */\n      tag_565\n        /* \"#utility.yul\":30181:30183   */\n      0x20\n        /* \"#utility.yul\":30170:30179   */\n      dup4\n        /* \"#utility.yul\":30166:30184   */\n      add\n        /* \"#utility.yul\":30157:30163   */\n      dup6\n        /* \"#utility.yul\":30113:30185   */\n      tag_237\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":30195:30267   */\n      tag_566\n        /* \"#utility.yul\":30263:30265   */\n      0x40\n        /* \"#utility.yul\":30252:30261   */\n      dup4\n        /* \"#utility.yul\":30248:30266   */\n      add\n        /* \"#utility.yul\":30239:30245   */\n      dup5\n        /* \"#utility.yul\":30195:30267   */\n      tag_252\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":29832:30274   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30280:30433   */\n    tag_289:\n        /* \"#utility.yul\":30420:30425   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30416:30417   */\n      0x00\n        /* \"#utility.yul\":30408:30414   */\n      dup3\n        /* \"#utility.yul\":30404:30418   */\n      add\n        /* \"#utility.yul\":30397:30426   */\n      mstore\n        /* \"#utility.yul\":30280:30433   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30439:30804   */\n    tag_290:\n        /* \"#utility.yul\":30581:30584   */\n      0x00\n        /* \"#utility.yul\":30602:30668   */\n      tag_569\n        /* \"#utility.yul\":30666:30667   */\n      0x03\n        /* \"#utility.yul\":30661:30664   */\n      dup4\n        /* \"#utility.yul\":30602:30668   */\n      tag_215\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":30595:30668   */\n      swap2\n      pop\n        /* \"#utility.yul\":30677:30770   */\n      tag_570\n        /* \"#utility.yul\":30766:30769   */\n      dup3\n        /* \"#utility.yul\":30677:30770   */\n      tag_289\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":30795:30797   */\n      0x20\n        /* \"#utility.yul\":30790:30793   */\n      dup3\n        /* \"#utility.yul\":30786:30798   */\n      add\n        /* \"#utility.yul\":30779:30798   */\n      swap1\n      pop\n        /* \"#utility.yul\":30439:30804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30810:31229   */\n    tag_214:\n        /* \"#utility.yul\":30976:30980   */\n      0x00\n        /* \"#utility.yul\":31014:31016   */\n      0x20\n        /* \"#utility.yul\":31003:31012   */\n      dup3\n        /* \"#utility.yul\":30999:31017   */\n      add\n        /* \"#utility.yul\":30991:31017   */\n      swap1\n      pop\n        /* \"#utility.yul\":31063:31072   */\n      dup2\n        /* \"#utility.yul\":31057:31061   */\n      dup2\n        /* \"#utility.yul\":31053:31073   */\n      sub\n        /* \"#utility.yul\":31049:31050   */\n      0x00\n        /* \"#utility.yul\":31038:31047   */\n      dup4\n        /* \"#utility.yul\":31034:31051   */\n      add\n        /* \"#utility.yul\":31027:31074   */\n      mstore\n        /* \"#utility.yul\":31091:31222   */\n      tag_572\n        /* \"#utility.yul\":31217:31221   */\n      dup2\n        /* \"#utility.yul\":31091:31222   */\n      tag_290\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":31083:31222   */\n      swap1\n      pop\n        /* \"#utility.yul\":30810:31229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c7ce187d1f04b1e8f5719844d3f5b1930afc963c9d59f495a4f35a92b35082f264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1457": {
									"entryPoint": null,
									"id": 1457,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_707": {
									"entryPoint": null,
									"id": 707,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ISwapRouter_$1073_fromMemory": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$1073t_addresst_address_fromMemory": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$1073": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$1073": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2030:20",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:20",
														"type": ""
													}
												],
												"src": "7:75:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:20",
														"type": ""
													}
												],
												"src": "334:126:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:20",
														"type": ""
													}
												],
												"src": "466:96:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:51:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "654:17:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "654:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "643:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$1073",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "615:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "625:7:20",
														"type": ""
													}
												],
												"src": "568:116:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:99:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "839:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "842:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "832:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "832:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "776:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "821:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$1073",
																					"nodeType": "YulIdentifier",
																					"src": "783:37:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "783:44:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "773:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:55:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:63:20"
															},
															"nodeType": "YulIf",
															"src": "763:83:20"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$1073",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "746:5:20",
														"type": ""
													}
												],
												"src": "690:162:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "941:100:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "951:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "966:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "960:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "951:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1029:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$1073",
																	"nodeType": "YulIdentifier",
																	"src": "982:46:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "982:53:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "982:53:20"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$1073_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "919:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "927:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "935:5:20",
														"type": ""
													}
												],
												"src": "858:183:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:79:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1147:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1156:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1159:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1149:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1113:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1138:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1120:17:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1120:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1110:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1103:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:43:20"
															},
															"nodeType": "YulIf",
															"src": "1100:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1083:5:20",
														"type": ""
													}
												],
												"src": "1047:122:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1238:80:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1248:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1263:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1257:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1257:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1248:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1306:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1279:26:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:33:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1279:33:20"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1216:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1224:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1232:5:20",
														"type": ""
													}
												],
												"src": "1175:143:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1455:572:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1503:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1503:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1503:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1476:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1485:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1472:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1472:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1468:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1468:32:20"
															},
															"nodeType": "YulIf",
															"src": "1465:119:20"
														},
														{
															"nodeType": "YulBlock",
															"src": "1594:148:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1609:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1613:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1638:94:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1704:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1715:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1700:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1700:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1724:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$1073_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1648:51:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:84:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:20"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1752:129:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1767:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1771:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1797:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1843:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1854:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1839:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1839:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1863:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1807:31:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1797:6:20"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1891:129:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1906:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1920:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1910:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1936:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1982:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1993:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1978:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1978:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2002:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1946:31:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1936:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$1073t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1409:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1420:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1432:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1440:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1448:6:20",
														"type": ""
													}
												],
												"src": "1324:703:20"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$1073(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$1073(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$1073(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$1073_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$1073(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$1073t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$1073_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2371 CODESIZE SUB DUP1 PUSH3 0x2371 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x186 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1DF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x10E DUP3 PUSH3 0xE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x121 DUP3 PUSH3 0x102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x133 DUP2 PUSH3 0x115 JUMP JUMPDEST DUP2 EQ PUSH3 0x13E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x151 DUP2 PUSH3 0x128 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x162 DUP2 PUSH3 0x102 JUMP JUMPDEST DUP2 EQ PUSH3 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x180 DUP2 PUSH3 0x157 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0xDF JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x1AF DUP7 DUP3 DUP8 ADD PUSH3 0x141 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1C2 DUP7 DUP3 DUP8 ADD PUSH3 0x170 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1D5 DUP7 DUP3 DUP8 ADD PUSH3 0x170 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2114 PUSH3 0x25D PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x559 ADD MSTORE DUP2 DUP2 PUSH2 0x6D5 ADD MSTORE DUP2 DUP2 PUSH2 0x703 ADD MSTORE DUP2 DUP2 PUSH2 0x750 ADD MSTORE PUSH2 0x88A ADD MSTORE PUSH0 DUP2 DUP2 PUSH1 0x85 ADD MSTORE DUP2 DUP2 PUSH2 0x3BA ADD MSTORE DUP2 DUP2 PUSH2 0x49F ADD MSTORE DUP2 DUP2 PUSH2 0x535 ADD MSTORE DUP2 DUP2 PUSH2 0xF6A ADD MSTORE DUP2 DUP2 PUSH2 0xFCA ADD MSTORE PUSH2 0x1047 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x29C ADD MSTORE DUP2 DUP2 PUSH2 0x57D ADD MSTORE PUSH2 0x68E ADD MSTORE PUSH2 0x2114 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC31C9C07 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xDF2AB5BB EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xE9CBAFB0 EQ PUSH2 0x1FF JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x12210E8A EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x2384463B EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x49404B7C EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x165 JUMPI PUSH2 0x113 JUMP JUMPDEST CALLDATASIZE PUSH2 0x113 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1627 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE GT ISZERO PUSH2 0x23A JUMPI PUSH2 0x239 CALLER SELFBALANCE PUSH2 0xA94 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH2 0x2C1 PUSH32 0x0 DUP4 PUSH2 0xB8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x490E6CBC ADDRESS DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x52E JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x52D DUP3 DUP3 PUSH2 0xA94 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x654 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x671 JUMPI PUSH2 0x670 DUP5 DUP4 DUP4 PUSH2 0xC5F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST SWAP1 POP PUSH2 0x6B7 PUSH32 0x0 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0xDAE JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x60 ADD MLOAD PUSH0 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x6FD DUP3 PUSH32 0x0 DUP6 PUSH0 ADD MLOAD PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x72C DUP2 PUSH32 0x0 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xDF8 JUMP JUMPDEST PUSH0 PUSH2 0x73B DUP5 PUSH1 0x20 ADD MLOAD DUP9 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x74B DUP6 PUSH0 ADD MLOAD DUP11 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x861 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97E SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x99A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9CE DUP9 PUSH0 ADD MLOAD DUP14 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9DF DUP10 PUSH1 0x20 ADD MLOAD DUP14 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP PUSH2 0x9EC DUP9 ADDRESS DUP5 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x9F7 DUP8 ADDRESS DUP4 PUSH2 0xDF8 JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B DUP9 ADDRESS CALLER DUP6 PUSH2 0xF68 JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0xA21 JUMPI PUSH2 0xA20 DUP8 ADDRESS CALLER DUP5 PUSH2 0xF68 JUMP JUMPDEST JUMPDEST DUP2 DUP5 GT ISZERO PUSH2 0xA53 JUMPI PUSH0 PUSH2 0xA34 DUP6 DUP5 PUSH2 0x113D JUMP JUMPDEST SWAP1 POP PUSH2 0xA41 DUP10 ADDRESS DUP4 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xA51 DUP10 ADDRESS DUP13 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0xF68 JUMP JUMPDEST POP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0xA85 JUMPI PUSH0 PUSH2 0xA66 DUP5 DUP4 PUSH2 0x113D JUMP JUMPDEST SWAP1 POP PUSH2 0xA73 DUP10 ADDRESS DUP4 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xA83 DUP9 ADDRESS DUP13 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0xF68 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC6 PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAF9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xBCE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBF0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 PUSH0 SHL PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH0 SHR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC93 SWAP3 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xD68 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xD67 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD66 SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xDA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9E SWAP1 PUSH2 0x1F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB9 DUP4 DUP4 PUSH2 0xB8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE2C SWAP3 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xF01 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xF00 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP5 PUSH2 0xF55 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST SWAP2 POP DUP2 LT ISZERO PUSH2 0xF62 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xFC3 JUMPI POP DUP1 SELFBALANCE LT ISZERO JUMPDEST ISZERO PUSH2 0x10E6 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x102E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10BC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E0 SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST POP PUSH2 0x1137 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1129 JUMPI PUSH2 0x1124 DUP5 DUP4 DUP4 PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x1135 DUP5 DUP5 DUP5 DUP5 PUSH2 0x115E JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP5 PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x200E JUMP JUMPDEST SWAP2 POP DUP2 GT ISZERO PUSH2 0x1158 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1194 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1237 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x123C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1269 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x1268 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129F SWAP1 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742057455448390000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F4 PUSH1 0x9 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FF DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1383 DUP3 PUSH2 0x133D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13A2 JUMPI PUSH2 0x13A1 PUSH2 0x134D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13B4 PUSH2 0x1328 JUMP JUMPDEST SWAP1 POP PUSH2 0x13C0 DUP3 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EE DUP3 PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FE DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1408 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1419 DUP2 PUSH2 0x13F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x141F JUMP JUMPDEST DUP2 EQ PUSH2 0x1440 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1451 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1469 DUP2 PUSH2 0x1457 JUMP JUMPDEST DUP2 EQ PUSH2 0x1473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1484 DUP2 PUSH2 0x1460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149F JUMPI PUSH2 0x149E PUSH2 0x1339 JUMP JUMPDEST JUMPDEST PUSH2 0x14A9 PUSH1 0xE0 PUSH2 0x13AB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x14B8 DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x14CB DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x14DF DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x14F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1507 DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x151B DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x152F DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1550 JUMPI PUSH2 0x154F PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155D DUP5 DUP3 DUP6 ADD PUSH2 0x148A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157C JUMPI PUSH2 0x157B PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1589 DUP6 DUP3 DUP7 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x159A DUP6 DUP3 DUP7 ADD PUSH2 0x140B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15AD DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15EF PUSH2 0x15EA PUSH2 0x15E5 DUP5 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x15CC JUMP JUMPDEST PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1600 DUP3 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1611 DUP3 PUSH2 0x15F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1621 DUP2 PUSH2 0x1607 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x163A PUSH0 DUP4 ADD DUP5 PUSH2 0x1618 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1664 DUP7 DUP3 DUP8 ADD PUSH2 0x140B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1675 DUP7 DUP3 DUP8 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1686 DUP7 DUP3 DUP8 ADD PUSH2 0x140B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x16B1 JUMPI PUSH2 0x16B0 PUSH2 0x1690 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16CE JUMPI PUSH2 0x16CD PUSH2 0x1694 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x16EA JUMPI PUSH2 0x16E9 PUSH2 0x1698 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1716 DUP8 DUP3 DUP9 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1727 DUP8 DUP3 DUP9 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH2 0x1754 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x176B DUP2 PUSH2 0x1457 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x177A DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1789 DUP2 PUSH2 0x141F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x17A3 PUSH0 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x17B6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x17C9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1780 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x17E4 PUSH0 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x17F7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x180A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x181D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x178F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1830 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1780 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1843 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1780 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x185D PUSH0 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x186C DUP2 PUSH2 0x1457 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18A9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x188E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18BE DUP3 PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x18C8 DUP2 DUP6 PUSH2 0x187C JUMP JUMPDEST SWAP4 POP PUSH2 0x18D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x188C JUMP JUMPDEST PUSH2 0x18E1 DUP2 PUSH2 0x133D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH0 DUP4 ADD DUP8 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x190C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x1919 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1863 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x192B DUP2 DUP5 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1944 DUP2 PUSH2 0x1460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x196C DUP5 DUP3 DUP6 ADD PUSH2 0x1936 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742057455448390000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19A9 PUSH1 0x12 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B4 DUP3 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19D6 DUP2 PUSH2 0x199D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2A PUSH1 0x12 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A35 DUP3 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A57 DUP2 PUSH2 0x1A1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A73 JUMPI PUSH2 0x1A72 PUSH2 0x1339 JUMP JUMPDEST JUMPDEST PUSH2 0x1A7D PUSH1 0x60 PUSH2 0x13AB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A8C DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1A9F DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1AB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x1339 JUMP JUMPDEST JUMPDEST PUSH2 0x1ADF PUSH1 0xC0 PUSH2 0x13AB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1AEE DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1B01 DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1B15 DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1B29 DUP5 DUP3 DUP6 ADD PUSH2 0x1A5E JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x1B3D DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x1B51 DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B73 JUMPI PUSH2 0x1B72 PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B80 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B92 DUP2 PUSH2 0x13C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1BAD PUSH0 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1BC0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1BD3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1780 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1BE6 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1BF9 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1C0C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1C1F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1C32 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1B89 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C66 DUP3 PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x1C70 DUP2 DUP6 PUSH2 0x1C52 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C80 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x188C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C97 DUP3 DUP5 PUSH2 0x1C5C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354450000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD6 PUSH1 0x3 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE1 DUP3 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D03 DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D13 DUP2 PUSH2 0x141F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2C PUSH0 DUP4 ADD DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1D39 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1D46 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D0A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D8C PUSH1 0x1 DUP4 PUSH2 0x1D4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D97 DUP3 PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB8 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC9 DUP3 PUSH2 0x1DAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE1 PUSH2 0x1DDC DUP3 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x1DBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E0A PUSH2 0x1E05 DUP3 PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x1DF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1A DUP3 PUSH2 0x1D80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E26 DUP3 DUP7 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1E36 DUP3 DUP6 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1E46 DUP3 DUP5 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH0 DUP4 ADD DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1E77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1863 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E92 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EAD DUP2 PUSH2 0x1E89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC8 JUMPI PUSH2 0x1EC7 PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED5 DUP5 DUP3 DUP6 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F12 PUSH1 0x2 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1D DUP3 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7A PUSH1 0x2 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F85 DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA7 DUP2 PUSH2 0x1F6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FE5 DUP3 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF0 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1FAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2018 DUP3 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x2023 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x203B JUMPI PUSH2 0x203A PUSH2 0x1FAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2054 PUSH0 DUP4 ADD DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x2061 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x206E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1863 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AA PUSH1 0x3 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B5 DUP3 PUSH2 0x2076 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D7 DUP2 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xCE XOR PUSH30 0x1F04B1E8F5719844D3F5B1930AFC963C9D59F495A4F35A92B35082F26473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "797:5896:19:-:0;;;1021:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1150:8;1160:6;562:8:11;552:18;;;;;;;;;;588:6;580:14;;;;;;;;;;496:105;;1192:11:19::1;1179:24;;;;;;;;::::0;::::1;1021:190:::0;;;797:5896;;88:117:20;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:122::-;1120:24;1138:5;1120:24;:::i;:::-;1113:5;1110:35;1100:63;;1159:1;1156;1149:12;1100:63;1047:122;:::o;1175:143::-;1232:5;1263:6;1257:13;1248:22;;1279:33;1306:5;1279:33;:::i;:::-;1175:143;;;;:::o;1324:703::-;1432:6;1440;1448;1497:2;1485:9;1476:7;1472:23;1468:32;1465:119;;;1503:79;;:::i;:::-;1465:119;1623:1;1648:84;1724:7;1715:6;1704:9;1700:22;1648:84;:::i;:::-;1638:94;;1594:148;1781:2;1807:64;1863:7;1854:6;1843:9;1839:22;1807:64;:::i;:::-;1797:74;;1752:129;1920:2;1946:64;2002:7;1993:6;1982:9;1978:22;1946:64;:::i;:::-;1936:74;;1891:129;1324:703;;;;;:::o;797:5896:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH9_691": {
									"entryPoint": 1331,
									"id": 691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_572": {
									"entryPoint": 3911,
									"id": 572,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@computeAddress_1239": {
									"entryPoint": 2959,
									"id": 1239,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@factory_687": {
									"entryPoint": 1403,
									"id": 687,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initFlash_1819": {
									"entryPoint": 572,
									"id": 1819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@pay_930": {
									"entryPoint": 3944,
									"id": 930,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@refundETH_862": {
									"entryPoint": 551,
									"id": 862,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_1384": {
									"entryPoint": 3576,
									"id": 1384,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferETH_1410": {
									"entryPoint": 2708,
									"id": 1410,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1292": {
									"entryPoint": 4446,
									"id": 1292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1338": {
									"entryPoint": 3167,
									"id": 1338,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sub_594": {
									"entryPoint": 4413,
									"id": 594,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapRouter_1438": {
									"entryPoint": 1367,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sweepToken_836": {
									"entryPoint": 1439,
									"id": 836,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@uniswapV3FlashCallback_1727": {
									"entryPoint": 1655,
									"id": 1727,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@unwrapWETH9_792": {
									"entryPoint": 951,
									"id": 792,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallback_1137": {
									"entryPoint": 3502,
									"id": 1137,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 5788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_struct$_FlashCallbackData_$1756_memory_ptr": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_FlashParams_$1742_memory_ptr": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_PoolKey_$1152_memory_ptr": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_address": {
									"entryPoint": 5696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_FlashCallbackData_$1756_memory_ptr": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_FlashParams_$1742_memory_ptr": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
									"entryPoint": 7673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$1073_to_t_address_fromStack": {
									"entryPoint": 5656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$997_memory_ptr_to_t_struct$_ExactInputSingleParams_$997_memory_ptr_fromStack": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_FlashCallbackData_$1756_memory_ptr_to_t_struct$_FlashCallbackData_$1756_memory_ptr_fromStack": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_PoolKey_$1152_memory_ptr_to_t_struct$_PoolKey_$1152_memory_ptr": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 7434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7696,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed": {
									"entryPoint": 7449,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$1073__to_t_address__fromStack_reversed": {
									"entryPoint": 5671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$997_memory_ptr__to_t_struct$_ExactInputSingleParams_$997_memory_ptr__fromStack_reversed": {
									"entryPoint": 7224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_FlashCallbackData_$1756_memory_ptr__to_t_struct$_FlashCallbackData_$1756_memory_ptr__fromStack_reversed": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$1073_to_t_address": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6284,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 7615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes32": {
									"entryPoint": 7664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 7598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4917,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 7586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca": {
									"entryPoint": 7902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 8310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31232:20",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:20",
														"type": ""
													}
												],
												"src": "7:169:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:20"
																	},
																	{
																		"hexValue": "4e6f74205745544839",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:11:20",
																		"type": "",
																		"value": "Not WETH9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:35:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:35:20"
														}
													]
												},
												"name": "store_literal_in_memory_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:20",
														"type": ""
													}
												],
												"src": "182:159:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:219:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "503:73:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "574:1:20",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "510:58:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:66:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "503:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "674:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1",
																	"nodeType": "YulIdentifier",
																	"src": "585:88:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "585:93:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "585:93:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "687:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "698:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "703:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "694:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "687:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "481:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:20",
														"type": ""
													}
												],
												"src": "347:365:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:248:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "899:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "911:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "922:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "907:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "899:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "957:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "965:4:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "971:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "961:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "961:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:47:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "935:47:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "991:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1125:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "999:124:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "999:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "991:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "869:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "884:4:20",
														"type": ""
													}
												],
												"src": "718:419:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:35:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1209:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1203:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1176:6:20",
														"type": ""
													}
												],
												"src": "1143:75:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:12:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1436:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1453:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1456:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1446:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:12:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1446:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1347:117:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1559:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1579:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:12:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1569:12:20"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "1470:117:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1641:54:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1651:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1669:5:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1676:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1665:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1665:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1685:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1661:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1651:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1624:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1634:6:20",
														"type": ""
													}
												],
												"src": "1593:102:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1729:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1746:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1749:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:88:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1739:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1843:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1846:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1836:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1870:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1860:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1701:180:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1930:238:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1940:58:20",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1962:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1992:4:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1970:21:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1970:27:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:40:20"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1944:10:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2109:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2111:16:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2111:18:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2111:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2052:10:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2064:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2049:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:34:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2088:10:20"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2100:6:20"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2085:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2085:22:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2046:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2046:62:20"
															},
															"nodeType": "YulIf",
															"src": "2043:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:2:20",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2151:10:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:22:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:22:20"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1916:6:20",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1924:4:20",
														"type": ""
													}
												],
												"src": "1887:281:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2215:88:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2225:30:20",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2235:18:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:20:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2284:6:20"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2292:4:20"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2264:19:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:33:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2264:33:20"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2199:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2208:6:20",
														"type": ""
													}
												],
												"src": "2174:129:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2398:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2415:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2418:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2408:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:12:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2408:12:20"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "2309:117:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2477:81:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2487:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2502:5:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2509:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2498:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2498:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2487:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2459:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2469:7:20",
														"type": ""
													}
												],
												"src": "2432:126:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2609:51:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2619:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2648:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2630:17:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2619:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2591:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2601:7:20",
														"type": ""
													}
												],
												"src": "2564:96:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2709:79:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2766:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2775:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2768:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2768:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2732:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2757:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2739:17:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2739:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2729:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2729:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:43:20"
															},
															"nodeType": "YulIf",
															"src": "2719:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2702:5:20",
														"type": ""
													}
												],
												"src": "2666:122:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2846:87:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2856:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2878:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2865:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2856:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2921:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2894:26:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:33:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2894:33:20"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2824:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2832:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2840:5:20",
														"type": ""
													}
												],
												"src": "2794:139:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2983:47:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2993:31:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3008:5:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3015:8:20",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3004:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:20:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2993:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2965:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2975:7:20",
														"type": ""
													}
												],
												"src": "2939:91:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3078:78:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3134:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3143:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3146:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3136:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3136:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3136:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3101:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3125:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "3108:16:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3108:23:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3098:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3098:34:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3091:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:42:20"
															},
															"nodeType": "YulIf",
															"src": "3088:62:20"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3071:5:20",
														"type": ""
													}
												],
												"src": "3036:120:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3213:86:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3223:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3245:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3232:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3223:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3287:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "3261:25:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:32:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3261:32:20"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3191:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3199:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3207:5:20",
														"type": ""
													}
												],
												"src": "3162:137:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3350:32:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3360:16:20",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3371:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3360:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3332:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3342:7:20",
														"type": ""
													}
												],
												"src": "3305:77:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3431:79:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3488:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3497:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3500:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3490:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3490:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3490:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3454:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3479:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3461:17:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3451:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3451:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3444:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3444:43:20"
															},
															"nodeType": "YulIf",
															"src": "3441:63:20"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3424:5:20",
														"type": ""
													}
												],
												"src": "3388:122:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:87:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3578:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3600:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3587:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3578:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3643:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3616:26:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:33:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3616:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3546:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3554:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3562:5:20",
														"type": ""
													}
												],
												"src": "3516:139:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3781:1309:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3825:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "3827:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3827:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3827:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3802:3:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3807:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3798:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3798:19:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3819:4:20",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:30:20"
															},
															"nodeType": "YulIf",
															"src": "3791:117:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3917:30:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3942:4:20",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3926:15:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:21:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3917:5:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3957:152:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3994:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3998:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4034:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4041:4:20",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4030:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4030:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4073:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4084:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4069:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4069:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4093:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4048:20:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4048:49:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4023:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4023:75:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4023:75:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4119:153:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4156:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4170:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4160:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4197:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4204:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4193:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4193:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4236:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4247:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4232:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4232:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4256:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4211:20:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4211:49:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4186:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4186:75:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4186:75:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4282:150:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4317:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4331:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4321:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4358:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4365:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4354:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4354:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4396:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4407:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4392:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4392:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4416:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "4372:19:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4372:48:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4347:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:74:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4347:74:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4442:154:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4480:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4494:2:20",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4484:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4521:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4528:4:20",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4517:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4517:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4560:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4571:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4556:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4556:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4580:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4535:20:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4535:49:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4510:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:75:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4510:75:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4606:155:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4644:17:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:3:20",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4648:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4686:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4693:4:20",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4682:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4682:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4725:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4736:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4721:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4721:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4745:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4700:20:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4700:49:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4675:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4675:75:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4675:75:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4771:151:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4806:17:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4820:3:20",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4810:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4848:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4855:4:20",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4844:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4844:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4886:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4897:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4882:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4882:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4906:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "4862:19:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4862:48:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4837:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4837:74:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4837:74:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4932:151:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4967:17:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4981:3:20",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4971:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5009:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5016:4:20",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5005:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5005:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "5047:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "5058:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5043:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5043:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "5067:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "5023:19:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5023:48:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4998:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4998:74:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4998:74:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_FlashParams_$1742_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3756:9:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3767:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3775:5:20",
														"type": ""
													}
												],
												"src": "3697:1393:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5191:293:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5238:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5240:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5240:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5240:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5212:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5221:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5208:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5208:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5233:3:20",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:33:20"
															},
															"nodeType": "YulIf",
															"src": "5201:120:20"
														},
														{
															"nodeType": "YulBlock",
															"src": "5331:146:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5346:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5360:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5350:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5375:92:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5439:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5450:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5435:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5435:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5459:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FlashParams_$1742_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5385:49:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5385:82:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5375:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FlashParams_$1742_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5161:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5172:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5184:6:20",
														"type": ""
													}
												],
												"src": "5096:388:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5573:391:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5619:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5621:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5621:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5621:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5594:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5603:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5590:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5590:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5615:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5586:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:32:20"
															},
															"nodeType": "YulIf",
															"src": "5583:119:20"
														},
														{
															"nodeType": "YulBlock",
															"src": "5712:117:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5727:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5741:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5731:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5756:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5791:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5802:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5787:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5787:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5811:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5766:20:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5766:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5756:6:20"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5839:118:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5854:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5868:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5858:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5884:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5919:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5930:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5915:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5915:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5939:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5894:20:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5894:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5884:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5535:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5546:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5558:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5566:6:20",
														"type": ""
													}
												],
												"src": "5490:474:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6035:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6052:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6075:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6057:17:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6057:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6045:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6045:37:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6045:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6023:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6030:3:20",
														"type": ""
													}
												],
												"src": "5970:118:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6192:124:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6202:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6214:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6210:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6210:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6202:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6282:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6295:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6306:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6291:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6291:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6238:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6238:71:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6238:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6164:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6176:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6187:4:20",
														"type": ""
													}
												],
												"src": "6094:222:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6354:28:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6364:12:20",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6371:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6364:3:20"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6340:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6350:3:20",
														"type": ""
													}
												],
												"src": "6322:60:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6448:82:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6458:66:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6516:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6498:17:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6498:24:20"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6489:8:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6489:34:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6471:17:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6471:53:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6458:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6428:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6438:9:20",
														"type": ""
													}
												],
												"src": "6388:142:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6596:66:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6606:50:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6650:5:20"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6619:30:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6619:37:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6606:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6576:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6586:9:20",
														"type": ""
													}
												],
												"src": "6536:126:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6748:66:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6758:50:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6802:5:20"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6771:30:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:37:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6758:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$1073_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6728:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6738:9:20",
														"type": ""
													}
												],
												"src": "6668:146:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6905:86:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6922:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6978:5:20"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$1073_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6927:50:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6927:57:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6915:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6915:70:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6915:70:20"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$1073_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6893:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6900:3:20",
														"type": ""
													}
												],
												"src": "6820:171:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7115:144:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7125:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7137:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7148:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7125:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7225:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7238:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7249:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7234:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7234:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$1073_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7161:63:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:91:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7161:91:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$1073__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7087:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7099:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7110:4:20",
														"type": ""
													}
												],
												"src": "6997:262:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7365:519:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7411:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7413:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7413:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7413:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7386:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7382:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7382:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7407:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7378:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7378:32:20"
															},
															"nodeType": "YulIf",
															"src": "7375:119:20"
														},
														{
															"nodeType": "YulBlock",
															"src": "7504:117:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7519:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7533:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7523:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7548:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7583:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7594:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7579:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7579:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7603:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7558:20:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7558:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7548:6:20"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7631:118:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7646:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7660:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7650:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7676:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7711:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7722:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7707:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7707:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7731:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7686:20:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7686:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7676:6:20"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7759:118:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7774:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7788:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7778:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7804:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7839:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7850:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7835:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7835:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7859:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7814:20:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7814:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7804:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7319:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7330:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7342:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7350:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7358:6:20",
														"type": ""
													}
												],
												"src": "7265:619:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7979:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7996:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7999:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7989:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:12:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7989:12:20"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "7890:117:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8102:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8119:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8122:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8112:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:12:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8112:12:20"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "8013:117:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8225:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8245:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8235:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:12:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8235:12:20"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8136:117:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8346:478:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8395:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8397:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8397:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8397:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8374:6:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8382:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8370:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8370:17:20"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8389:3:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8366:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8366:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8359:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8359:35:20"
															},
															"nodeType": "YulIf",
															"src": "8356:122:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8487:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8510:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8497:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:20:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8487:6:20"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8560:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "8562:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8562:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8562:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8532:6:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8529:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:30:20"
															},
															"nodeType": "YulIf",
															"src": "8526:117:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8652:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8668:6:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8676:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8664:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8664:17:20"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "8652:8:20"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8735:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "8737:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8737:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8737:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "8700:8:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "8714:6:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8722:4:20",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "8710:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8710:17:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8696:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8696:32:20"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8730:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8693:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8693:41:20"
															},
															"nodeType": "YulIf",
															"src": "8690:128:20"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8313:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8321:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "8329:8:20",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8339:6:20",
														"type": ""
													}
												],
												"src": "8272:552:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8949:698:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8995:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8997:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8997:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8970:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8979:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8966:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8966:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8991:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8962:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8962:32:20"
															},
															"nodeType": "YulIf",
															"src": "8959:119:20"
														},
														{
															"nodeType": "YulBlock",
															"src": "9088:117:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9103:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9117:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9107:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9132:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9167:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9178:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9163:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9163:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9187:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9142:20:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9142:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9132:6:20"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9215:118:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9230:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9244:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9234:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9260:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9295:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9306:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9291:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9291:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9315:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9270:20:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9260:6:20"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9343:297:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9358:46:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9389:9:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9400:2:20",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9385:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9385:18:20"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9372:12:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9372:32:20"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9362:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9451:83:20",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9453:77:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9453:79:20"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9453:79:20"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9423:6:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9431:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9420:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9420:30:20"
																	},
																	"nodeType": "YulIf",
																	"src": "9417:117:20"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9548:82:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9602:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9613:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9598:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9598:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9622:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9566:31:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9566:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9548:6:20"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9556:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8895:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8906:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8918:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8926:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8934:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8942:6:20",
														"type": ""
													}
												],
												"src": "8830:817:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9708:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9725:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9748:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9730:17:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9730:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9718:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "9718:37:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9718:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9696:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9703:3:20",
														"type": ""
													}
												],
												"src": "9653:108:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9822:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9839:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9862:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9844:17:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9844:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9832:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:37:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9810:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9817:3:20",
														"type": ""
													}
												],
												"src": "9767:108:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9934:52:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9951:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9973:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "9956:16:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9956:23:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9944:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "9944:36:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9944:36:20"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9922:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9929:3:20",
														"type": ""
													}
												],
												"src": "9881:105:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10162:566:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10172:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10188:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10193:4:20",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10184:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "10184:14:20"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "10176:4:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10208:166:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10245:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10275:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10282:4:20",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10271:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10271:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10265:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10265:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "10249:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10335:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "10353:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10358:4:20",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10349:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10349:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10301:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10301:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10301:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10384:166:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10421:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10451:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10458:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10447:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10447:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10441:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10441:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "10425:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10511:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "10529:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10534:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10525:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10525:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10477:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10477:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10477:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10560:161:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10594:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10624:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10631:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10620:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10620:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10614:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10614:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "10598:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10682:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "10700:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10705:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10696:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10696:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "10650:31:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10650:61:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10650:61:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_PoolKey_$1152_memory_ptr_to_t_struct$_PoolKey_$1152_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10149:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10156:3:20",
														"type": ""
													}
												],
												"src": "10056:672:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10950:1153:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10960:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10976:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10981:6:20",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10972:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "10972:16:20"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "10964:4:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10998:167:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11036:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11066:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11073:4:20",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11062:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11062:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11056:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11056:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11040:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11126:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11144:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11149:4:20",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11140:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11140:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11092:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11092:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11092:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11175:167:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11213:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11243:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11250:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11239:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11239:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11233:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11233:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11217:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11303:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11321:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11326:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11317:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11317:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11269:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11269:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11269:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11352:165:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11388:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11418:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11425:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11414:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11414:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11408:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11408:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11392:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11478:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11496:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11501:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11492:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11492:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11444:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11444:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11444:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11527:217:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11565:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11595:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11602:4:20",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11591:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11591:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11585:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11585:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11569:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11705:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11723:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11728:4:20",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11719:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11719:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_PoolKey_$1152_memory_ptr_to_t_struct$_PoolKey_$1152_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11621:83:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11621:113:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11621:113:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11754:166:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11793:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11823:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11830:4:20",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11819:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11819:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11813:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11813:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11797:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11881:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11899:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11904:4:20",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11895:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11895:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "11849:31:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11849:61:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11849:61:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11930:166:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11969:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11999:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12006:4:20",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11995:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11995:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11989:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11989:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11973:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12057:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12075:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12080:4:20",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12071:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12071:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "12025:31:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12025:61:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12025:61:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_FlashCallbackData_$1756_memory_ptr_to_t_struct$_FlashCallbackData_$1756_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10937:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10944:3:20",
														"type": ""
													}
												],
												"src": "10814:1289:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12277:195:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12287:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12299:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12310:3:20",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12295:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "12295:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12287:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12438:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12451:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12462:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12447:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12447:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FlashCallbackData_$1756_memory_ptr_to_t_struct$_FlashCallbackData_$1756_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12324:113:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "12324:141:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12324:141:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_FlashCallbackData_$1756_memory_ptr__to_t_struct$_FlashCallbackData_$1756_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12249:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12261:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12272:4:20",
														"type": ""
													}
												],
												"src": "12109:363:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12543:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12560:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12583:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12565:17:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12565:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12553:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "12553:37:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12553:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12531:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12538:3:20",
														"type": ""
													}
												],
												"src": "12478:118:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12660:40:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12671:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12687:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12681:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "12681:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12671:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12643:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12653:6:20",
														"type": ""
													}
												],
												"src": "12602:98:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12801:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12818:3:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12823:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12811:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "12811:19:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12811:19:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12839:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12858:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12863:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12854:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "12854:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12839:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12773:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12778:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12789:11:20",
														"type": ""
													}
												],
												"src": "12706:168:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12942:184:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12952:10:20",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12961:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12956:1:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13021:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13046:3:20"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13051:1:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13042:3:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13042:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13065:3:20"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13070:1:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13061:3:20"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13061:11:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13055:5:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13055:18:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13035:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13035:39:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13035:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12982:1:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12985:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12979:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "12979:13:20"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12993:19:20",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12995:15:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13004:1:20"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13007:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13000:3:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13000:10:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12995:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12975:3:20",
																"statements": []
															},
															"src": "12971:113:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "13104:3:20"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13109:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13100:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13100:16:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13118:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13093:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "13093:27:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13093:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12924:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12929:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12934:6:20",
														"type": ""
													}
												],
												"src": "12880:246:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13222:283:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13232:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13278:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13246:31:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "13246:38:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13236:6:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13293:77:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13358:3:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13363:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13300:57:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "13300:70:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13293:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13418:5:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13425:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13414:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13414:16:20"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13432:3:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13437:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13379:34:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "13379:65:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13379:65:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13453:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13464:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13491:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13469:21:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13469:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13460:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "13460:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13453:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13203:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13210:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13218:3:20",
														"type": ""
													}
												],
												"src": "13132:373:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13711:440:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13721:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13733:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13744:3:20",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13729:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "13729:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13721:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13802:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13815:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13826:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13811:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13811:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13758:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "13758:71:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13758:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13883:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13896:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13907:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13892:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13892:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13839:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "13839:72:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13839:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13965:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13978:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13989:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13974:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13974:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13921:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "13921:72:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13921:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14014:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14025:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14010:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14010:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14034:4:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14040:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14030:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14030:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14003:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "14003:48:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14003:48:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14060:84:20",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14130:6:20"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14139:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14068:61:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "14068:76:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14060:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13659:9:20",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13671:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13679:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13687:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13695:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13706:4:20",
														"type": ""
													}
												],
												"src": "13511:640:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14220:80:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14230:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14245:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14239:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "14239:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14230:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14288:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14261:26:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "14261:33:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14261:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14198:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14206:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14214:5:20",
														"type": ""
													}
												],
												"src": "14157:143:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14383:274:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14429:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14431:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14431:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14431:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14404:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14413:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14400:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14400:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14425:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14396:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "14396:32:20"
															},
															"nodeType": "YulIf",
															"src": "14393:119:20"
														},
														{
															"nodeType": "YulBlock",
															"src": "14522:128:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14537:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14551:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14541:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14566:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14612:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14623:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14608:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14608:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14632:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14576:31:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14576:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14566:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14353:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14364:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14376:6:20",
														"type": ""
													}
												],
												"src": "14306:351:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14769:62:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14791:6:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14799:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14787:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14787:14:20"
																	},
																	{
																		"hexValue": "496e73756666696369656e74205745544839",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14803:20:20",
																		"type": "",
																		"value": "Insufficient WETH9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14780:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "14780:44:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14780:44:20"
														}
													]
												},
												"name": "store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14761:6:20",
														"type": ""
													}
												],
												"src": "14663:168:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14983:220:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14993:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15059:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15064:2:20",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15000:58:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "15000:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14993:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15165:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
																	"nodeType": "YulIdentifier",
																	"src": "15076:88:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "15076:93:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15076:93:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15178:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15189:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15194:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15185:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "15185:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15178:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14971:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14979:3:20",
														"type": ""
													}
												],
												"src": "14837:366:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15380:248:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15390:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15402:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15413:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15398:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "15398:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15390:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15437:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15448:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15433:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15433:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15456:4:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15462:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15452:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15452:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15426:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "15426:47:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15426:47:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15482:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15616:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15490:124:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "15490:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15482:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15360:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15375:4:20",
														"type": ""
													}
												],
												"src": "15209:419:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15732:124:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15742:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15754:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15765:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15750:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "15750:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15742:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15822:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15835:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15846:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15831:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15831:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15778:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "15778:71:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15778:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15704:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15716:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15727:4:20",
														"type": ""
													}
												],
												"src": "15634:222:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15968:62:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15990:6:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15998:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15986:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15986:14:20"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16002:20:20",
																		"type": "",
																		"value": "Insufficient token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15979:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "15979:44:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15979:44:20"
														}
													]
												},
												"name": "store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15960:6:20",
														"type": ""
													}
												],
												"src": "15862:168:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16182:220:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16192:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16258:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16263:2:20",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16199:58:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "16199:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16192:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16364:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
																	"nodeType": "YulIdentifier",
																	"src": "16275:88:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "16275:93:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16275:93:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16377:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16388:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16393:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16384:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "16384:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16377:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16170:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16178:3:20",
														"type": ""
													}
												],
												"src": "16036:366:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16579:248:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16589:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16601:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16612:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16597:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "16597:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16589:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16636:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16647:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16632:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16632:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16655:4:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16661:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16651:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16651:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16625:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "16625:47:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16625:47:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16681:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16815:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16689:124:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "16689:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16681:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16559:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16574:4:20",
														"type": ""
													}
												],
												"src": "16408:419:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16947:657:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16991:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "16993:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16993:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16993:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "16968:3:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16973:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16964:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16964:19:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:20",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16960:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "16960:30:20"
															},
															"nodeType": "YulIf",
															"src": "16957:117:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17083:30:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17108:4:20",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "17092:15:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "17092:21:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17083:5:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17123:152:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17160:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17174:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17164:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17200:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17207:4:20",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17196:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17196:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "17239:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "17250:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "17235:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17235:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "17259:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17214:20:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17214:49:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17189:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17189:75:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17189:75:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17285:153:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17322:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17336:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17326:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17363:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17370:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17359:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17359:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "17402:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "17413:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "17398:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17398:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "17422:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17377:20:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17377:49:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17352:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17352:75:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17352:75:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17448:149:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17482:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17496:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17486:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17523:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17530:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17519:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17519:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "17561:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "17572:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "17557:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17557:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "17581:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "17537:19:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17537:48:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17512:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17512:74:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17512:74:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_PoolKey_$1152_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16922:9:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16933:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16941:5:20",
														"type": ""
													}
												],
												"src": "16867:737:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17742:1183:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17788:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "17790:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17790:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17790:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "17763:3:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17768:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17759:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17759:19:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17780:6:20",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17755:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "17755:32:20"
															},
															"nodeType": "YulIf",
															"src": "17752:119:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17880:30:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17905:4:20",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "17889:15:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "17889:21:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17880:5:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17920:153:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17958:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17972:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17962:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17998:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18005:4:20",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17994:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17994:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "18037:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "18048:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "18033:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18033:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "18057:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18012:20:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18012:49:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17987:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17987:75:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17987:75:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18083:154:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18121:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18135:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18125:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18162:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18169:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18158:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18158:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "18201:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "18212:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "18197:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18197:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "18221:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18176:20:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18176:49:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "18151:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18151:75:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18151:75:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18247:152:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18283:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18297:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18287:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18324:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18331:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18320:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18320:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "18363:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "18374:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "18359:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18359:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "18383:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "18338:20:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18338:49:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "18313:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18313:75:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18313:75:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18409:179:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18447:16:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18461:2:20",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18451:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18488:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18495:4:20",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18484:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18484:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "18552:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "18563:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "18548:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18548:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "18572:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_struct$_PoolKey_$1152_memory_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "18502:45:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18502:74:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "18477:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18477:100:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18477:100:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18598:155:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18637:17:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18651:3:20",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18641:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18679:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18686:4:20",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18675:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18675:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "18717:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "18728:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "18713:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18713:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "18737:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "18693:19:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18693:48:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "18668:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18668:74:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18668:74:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18763:155:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18802:17:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18816:3:20",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18806:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18844:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18851:4:20",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18840:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18840:16:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "18882:9:20"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "18893:6:20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "18878:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18878:22:20"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "18902:3:20"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "18858:19:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18858:48:20"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "18833:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18833:74:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18833:74:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_FlashCallbackData_$1756_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17717:9:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17728:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17736:5:20",
														"type": ""
													}
												],
												"src": "17652:1273:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19032:299:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19079:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19081:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19081:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19081:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19053:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19062:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19049:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19049:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19074:3:20",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19045:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "19045:33:20"
															},
															"nodeType": "YulIf",
															"src": "19042:120:20"
														},
														{
															"nodeType": "YulBlock",
															"src": "19172:152:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19187:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19201:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19191:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19216:98:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19286:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19297:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19282:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19282:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19306:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FlashCallbackData_$1756_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "19226:55:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19226:88:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19216:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FlashCallbackData_$1756_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19002:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19013:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19025:6:20",
														"type": ""
													}
												],
												"src": "18931:400:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19392:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19409:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19432:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "19414:17:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19414:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19402:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "19402:37:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19402:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19380:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19387:3:20",
														"type": ""
													}
												],
												"src": "19337:108:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19689:1479:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19699:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19715:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19720:6:20",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19711:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "19711:16:20"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "19703:4:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19737:167:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19775:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19805:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19812:4:20",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19801:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19801:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19795:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19795:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19779:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19865:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19883:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19888:4:20",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19879:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19879:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19831:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19831:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19831:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19914:168:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19953:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19983:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19990:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19979:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19979:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19973:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19973:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19957:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20043:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20061:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20066:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20057:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20057:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20009:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20009:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20009:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20092:161:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20126:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20156:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20163:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20152:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20152:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20146:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20146:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20130:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20214:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20232:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20237:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20228:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20228:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "20182:31:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20182:61:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20182:61:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20263:169:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20303:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20333:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20340:4:20",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20329:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20329:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20323:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20323:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20307:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20393:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20411:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20416:4:20",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20407:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20407:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20359:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20359:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20359:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20442:168:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20481:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20511:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20518:4:20",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20507:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20507:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20501:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20501:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20485:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20571:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20589:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20594:4:20",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20585:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20585:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20537:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20537:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20537:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20620:168:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20659:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20689:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20696:4:20",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20685:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20685:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20679:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20679:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20663:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20749:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20767:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20772:4:20",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20763:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20763:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20715:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20715:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20715:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20798:176:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20845:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20875:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20882:4:20",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20871:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20871:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20865:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20865:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20849:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20935:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20953:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20958:4:20",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20949:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20949:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20901:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20901:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20901:63:20"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20984:177:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21032:43:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21062:5:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21069:4:20",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21058:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21058:16:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "21052:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21052:23:20"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "21036:12:20",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "21122:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "21140:3:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21145:4:20",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21136:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21136:14:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "21088:33:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21088:63:20"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "21088:63:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$997_memory_ptr_to_t_struct$_ExactInputSingleParams_$997_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19676:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19683:3:20",
														"type": ""
													}
												],
												"src": "19545:1623:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21350:203:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21360:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21372:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21383:3:20",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21368:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "21368:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21360:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21519:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21532:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21543:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21528:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21528:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$997_memory_ptr_to_t_struct$_ExactInputSingleParams_$997_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21397:121:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "21397:149:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21397:149:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$997_memory_ptr__to_t_struct$_ExactInputSingleParams_$997_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21322:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21334:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21345:4:20",
														"type": ""
													}
												],
												"src": "21174:379:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21672:34:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21682:18:20",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21697:3:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21682:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21644:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21649:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21660:11:20",
														"type": ""
													}
												],
												"src": "21559:147:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21820:278:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21830:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21876:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21844:31:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "21844:38:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21834:6:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21891:95:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21974:3:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21979:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21898:75:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "21898:88:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21891:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22034:5:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22041:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22030:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22030:16:20"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22048:3:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22053:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21995:34:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "21995:65:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21995:65:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22069:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22080:3:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22085:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22076:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "22076:16:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22069:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21801:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21808:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21816:3:20",
														"type": ""
													}
												],
												"src": "21712:386:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22238:137:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22249:100:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22336:6:20"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22345:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22256:79:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "22256:93:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22249:3:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22359:10:20",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22366:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22359:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22217:3:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22223:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22234:3:20",
														"type": ""
													}
												],
												"src": "22104:271:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22487:47:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22509:6:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22517:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22505:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22505:14:20"
																	},
																	{
																		"hexValue": "535445",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22521:5:20",
																		"type": "",
																		"value": "STE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22498:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "22498:29:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22498:29:20"
														}
													]
												},
												"name": "store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22479:6:20",
														"type": ""
													}
												],
												"src": "22381:153:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22686:219:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22696:73:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22762:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22767:1:20",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22703:58:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "22703:66:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22696:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22867:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																	"nodeType": "YulIdentifier",
																	"src": "22778:88:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "22778:93:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22778:93:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22880:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22891:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22896:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22887:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "22887:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22880:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22674:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22682:3:20",
														"type": ""
													}
												],
												"src": "22540:365:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23082:248:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23092:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23104:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23115:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23100:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "23100:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23092:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23139:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23150:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23135:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23135:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23158:4:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23164:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23154:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23154:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23128:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "23128:47:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23128:47:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23184:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23318:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23192:124:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "23192:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23184:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23062:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23077:4:20",
														"type": ""
													}
												],
												"src": "22911:419:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23399:52:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23416:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23438:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "23421:16:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23421:23:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23409:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "23409:36:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23409:36:20"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23387:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23394:3:20",
														"type": ""
													}
												],
												"src": "23336:115:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23609:286:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23619:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23631:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23642:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23627:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "23627:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23619:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23699:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23712:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23723:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23708:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23708:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23655:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "23655:71:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23655:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23780:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23793:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23804:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23789:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23789:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23736:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "23736:72:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23736:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23860:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23873:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23884:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23869:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23869:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23818:41:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "23818:70:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23818:70:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23565:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23577:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23585:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23593:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23604:4:20",
														"type": ""
													}
												],
												"src": "23457:438:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24015:34:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24025:18:20",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24040:3:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24025:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23987:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23992:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24003:11:20",
														"type": ""
													}
												],
												"src": "23901:148:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24161:108:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24183:6:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24191:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24179:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24179:14:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24195:66:20",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24172:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "24172:90:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24172:90:20"
														}
													]
												},
												"name": "store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24153:6:20",
														"type": ""
													}
												],
												"src": "24055:214:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24439:236:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24449:91:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24533:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24538:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24456:76:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "24456:84:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24449:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24638:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																	"nodeType": "YulIdentifier",
																	"src": "24549:88:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "24549:93:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24549:93:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24651:18:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24662:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24667:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24658:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "24658:11:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24651:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24427:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24435:3:20",
														"type": ""
													}
												],
												"src": "24275:400:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24723:52:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24733:35:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24758:2:20",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24762:5:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "24754:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "24754:14:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "24733:8:20"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24704:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "24714:8:20",
														"type": ""
													}
												],
												"src": "24681:94:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24828:47:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24838:31:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24863:5:20"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "24849:13:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "24849:20:20"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "24838:7:20"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24810:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "24820:7:20",
														"type": ""
													}
												],
												"src": "24781:94:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24928:53:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24938:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24969:5:20"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "24949:19:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "24949:26:20"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "24938:7:20"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24910:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "24920:7:20",
														"type": ""
													}
												],
												"src": "24881:100:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25070:74:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25087:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25130:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "25112:17:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25112:24:20"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "25092:19:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25092:45:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25080:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "25080:58:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25080:58:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25058:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25065:3:20",
														"type": ""
													}
												],
												"src": "24987:157:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25195:32:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25205:16:20",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "25216:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25205:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25177:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25187:7:20",
														"type": ""
													}
												],
												"src": "25150:77:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25280:32:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25290:16:20",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "25301:5:20"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "25290:7:20"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25262:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "25272:7:20",
														"type": ""
													}
												],
												"src": "25233:79:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25401:74:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25418:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25461:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "25443:17:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25443:24:20"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "25423:19:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25423:45:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25411:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "25411:58:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25411:58:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25389:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25396:3:20",
														"type": ""
													}
												],
												"src": "25318:157:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25754:531:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25765:155:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25916:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25772:142:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "25772:148:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25765:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25992:6:20"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26001:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25930:61:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "25930:75:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25930:75:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26014:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26025:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26030:2:20",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26021:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26021:12:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26014:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26105:6:20"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26114:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26043:61:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26043:75:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26043:75:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26127:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26138:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26143:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26134:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26134:12:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26127:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "26218:6:20"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26227:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26156:61:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26156:75:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26156:75:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26240:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26251:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26256:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26247:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26247:12:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26240:3:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26269:10:20",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "26276:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26269:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25717:3:20",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25723:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25731:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25739:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25750:3:20",
														"type": ""
													}
												],
												"src": "25481:804:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26417:206:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26427:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26439:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26450:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26435:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26435:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26427:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26507:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26520:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26531:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26516:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26516:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26463:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26463:71:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26463:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26588:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26601:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26612:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26597:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26597:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26544:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26544:72:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26544:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26381:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26393:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26401:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26412:4:20",
														"type": ""
													}
												],
												"src": "26291:332:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26671:48:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26681:32:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26706:5:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "26699:6:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26699:13:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26692:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26692:21:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26681:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26653:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26663:7:20",
														"type": ""
													}
												],
												"src": "26629:90:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26765:76:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26819:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26828:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26831:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26821:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26821:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26821:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26788:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "26810:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "26795:14:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26795:21:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "26785:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26785:32:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26778:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26778:40:20"
															},
															"nodeType": "YulIf",
															"src": "26775:60:20"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26758:5:20",
														"type": ""
													}
												],
												"src": "26725:116:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26907:77:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26917:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "26932:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26926:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26926:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26917:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26972:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "26948:23:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "26948:30:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26948:30:20"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "26885:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26893:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26901:5:20",
														"type": ""
													}
												],
												"src": "26847:137:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27064:271:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27110:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "27112:77:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27112:79:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27112:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27085:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27094:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27081:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27081:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27106:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "27077:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "27077:32:20"
															},
															"nodeType": "YulIf",
															"src": "27074:119:20"
														},
														{
															"nodeType": "YulBlock",
															"src": "27203:125:20",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27218:15:20",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27232:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "27222:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27247:71:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "27290:9:20"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "27301:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27286:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27286:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27310:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "27257:28:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27257:61:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "27247:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27034:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "27045:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27057:6:20",
														"type": ""
													}
												],
												"src": "26990:345:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27447:46:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27469:6:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27477:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27465:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27465:14:20"
																	},
																	{
																		"hexValue": "5354",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27481:4:20",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27458:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "27458:28:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27458:28:20"
														}
													]
												},
												"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27439:6:20",
														"type": ""
													}
												],
												"src": "27341:152:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27645:219:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27655:73:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27721:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27726:1:20",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27662:58:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "27662:66:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27655:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27826:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																	"nodeType": "YulIdentifier",
																	"src": "27737:88:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "27737:93:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27737:93:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27839:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27850:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27855:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27846:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "27846:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27839:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27633:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27641:3:20",
														"type": ""
													}
												],
												"src": "27499:365:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28041:248:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28051:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28063:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28074:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28059:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "28059:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28051:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28098:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28109:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28094:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28094:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28117:4:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28123:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28113:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28113:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28087:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "28087:47:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28087:47:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28143:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28277:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28151:124:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "28151:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28143:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28021:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28036:4:20",
														"type": ""
													}
												],
												"src": "27870:419:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28401:46:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28423:6:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28431:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28419:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28419:14:20"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28435:4:20",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28412:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "28412:28:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28412:28:20"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28393:6:20",
														"type": ""
													}
												],
												"src": "28295:152:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28599:219:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28609:73:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28675:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28680:1:20",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28616:58:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "28616:66:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28609:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28780:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nodeType": "YulIdentifier",
																	"src": "28691:88:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "28691:93:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28691:93:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28793:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28804:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28809:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28800:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "28800:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28793:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28587:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28595:3:20",
														"type": ""
													}
												],
												"src": "28453:365:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28995:248:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29005:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29017:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29028:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29013:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29013:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29005:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29052:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29063:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29048:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29048:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29071:4:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29077:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29067:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29067:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29041:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29041:47:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29041:47:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29097:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29231:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29105:124:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29105:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29097:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28975:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28990:4:20",
														"type": ""
													}
												],
												"src": "28824:419:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29277:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29294:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29297:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29287:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29287:88:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29287:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29391:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29394:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29384:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29384:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29384:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29415:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29418:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29408:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29408:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29408:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "29249:180:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29479:147:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29489:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29512:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29494:17:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29494:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "29489:1:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29523:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29546:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29528:17:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29528:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "29523:1:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29557:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29568:1:20"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29571:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29564:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29564:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "29557:3:20"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29597:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "29599:16:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29599:18:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29599:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29589:1:20"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "29592:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29586:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29586:10:20"
															},
															"nodeType": "YulIf",
															"src": "29583:36:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "29466:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "29469:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "29475:3:20",
														"type": ""
													}
												],
												"src": "29435:191:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29677:149:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29687:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29710:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29692:17:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29692:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "29687:1:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29721:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29744:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29726:17:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29726:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "29721:1:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29755:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29767:1:20"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29770:1:20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "29763:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29763:9:20"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "29755:4:20"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29797:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "29799:16:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29799:18:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29799:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "29788:4:20"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29794:1:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29785:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "29785:11:20"
															},
															"nodeType": "YulIf",
															"src": "29782:37:20"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "29663:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "29666:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "29672:4:20",
														"type": ""
													}
												],
												"src": "29632:194:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29986:288:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29996:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30008:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30019:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30004:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "30004:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29996:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "30076:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30089:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30100:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30085:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30085:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30032:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "30032:71:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30032:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "30157:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30170:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30181:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30166:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30166:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30113:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "30113:72:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30113:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "30239:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30252:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30263:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30248:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30248:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30195:43:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "30195:72:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30195:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29942:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "29954:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29962:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29970:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29981:4:20",
														"type": ""
													}
												],
												"src": "29832:442:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30386:47:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30408:6:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30416:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30404:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30404:14:20"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30420:5:20",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30397:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "30397:29:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30397:29:20"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30378:6:20",
														"type": ""
													}
												],
												"src": "30280:153:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30585:219:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30595:73:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30661:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30666:1:20",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30602:58:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "30602:66:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30595:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30766:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nodeType": "YulIdentifier",
																	"src": "30677:88:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "30677:93:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30677:93:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30779:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30790:3:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30795:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30786:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "30786:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30779:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30573:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30581:3:20",
														"type": ""
													}
												],
												"src": "30439:365:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30981:248:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30991:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31003:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31014:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30999:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "30999:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30991:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31038:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31049:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31034:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31034:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31057:4:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31063:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31053:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31053:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31027:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "31027:47:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31027:47:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31083:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31217:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31091:124:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "31091:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31083:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30961:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30976:4:20",
														"type": ""
													}
												],
												"src": "30810:419:20"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not WETH9\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct PairFlash.FlashParams\n    function abi_decode_t_struct$_FlashParams_$1742_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xe0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xe0)\n\n        {\n            // token0\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // token1\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // fee1\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount0\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount1\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // fee2\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // fee3\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FlashParams_$1742_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FlashParams_$1742_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$1073_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$1073_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$1073_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$1073__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$1073_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    // struct PoolAddress.PoolKey -> struct PoolAddress.PoolKey\n    function abi_encode_t_struct$_PoolKey_$1152_memory_ptr_to_t_struct$_PoolKey_$1152_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // token0\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // token1\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    // struct PairFlash.FlashCallbackData -> struct PairFlash.FlashCallbackData\n    function abi_encode_t_struct$_FlashCallbackData_$1756_memory_ptr_to_t_struct$_FlashCallbackData_$1756_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // amount0\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount1\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // payer\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // poolKey\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_struct$_PoolKey_$1152_memory_ptr_to_t_struct$_PoolKey_$1152_memory_ptr(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // poolFee2\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // poolFee3\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_FlashCallbackData_$1756_memory_ptr__to_t_struct$_FlashCallbackData_$1756_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_FlashCallbackData_$1756_memory_ptr_to_t_struct$_FlashCallbackData_$1756_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient WETH9\")\n\n    }\n\n    function abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token\")\n\n    }\n\n    function abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    // struct PoolAddress.PoolKey\n    function abi_decode_t_struct$_PoolKey_$1152_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // token0\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // token1\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // fee\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct PairFlash.FlashCallbackData\n    function abi_decode_t_struct$_FlashCallbackData_$1756_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0100) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xc0)\n\n        {\n            // amount0\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount1\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // payer\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // poolKey\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_struct$_PoolKey_$1152_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // poolFee2\n\n            let offset := 192\n\n            mstore(add(value, 0x80), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // poolFee3\n\n            let offset := 224\n\n            mstore(add(value, 0xa0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FlashCallbackData_$1756_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FlashCallbackData_$1756_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$997_memory_ptr_to_t_struct$_ExactInputSingleParams_$997_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$997_memory_ptr__to_t_struct$_ExactInputSingleParams_$997_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$997_memory_ptr_to_t_struct$_ExactInputSingleParams_$997_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"STE\")\n\n    }\n\n    function abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9(memPtr) {\n\n        mstore(add(memPtr, 0), 0xff00000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9(pos)\n        end := add(pos, 1)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"ST\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"687": [
									{
										"length": 32,
										"start": 668
									},
									{
										"length": 32,
										"start": 1405
									},
									{
										"length": 32,
										"start": 1678
									}
								],
								"691": [
									{
										"length": 32,
										"start": 133
									},
									{
										"length": 32,
										"start": 954
									},
									{
										"length": 32,
										"start": 1183
									},
									{
										"length": 32,
										"start": 1333
									},
									{
										"length": 32,
										"start": 3946
									},
									{
										"length": 32,
										"start": 4042
									},
									{
										"length": 32,
										"start": 4167
									}
								],
								"1438": [
									{
										"length": 32,
										"start": 1369
									},
									{
										"length": 32,
										"start": 1749
									},
									{
										"length": 32,
										"start": 1795
									},
									{
										"length": 32,
										"start": 1872
									},
									{
										"length": 32,
										"start": 2186
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC31C9C07 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xDF2AB5BB EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xE9CBAFB0 EQ PUSH2 0x1FF JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x12210E8A EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x2384463B EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x49404B7C EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x165 JUMPI PUSH2 0x113 JUMP JUMPDEST CALLDATASIZE PUSH2 0x113 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1627 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE GT ISZERO PUSH2 0x23A JUMPI PUSH2 0x239 CALLER SELFBALANCE PUSH2 0xA94 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH2 0x2C1 PUSH32 0x0 DUP4 PUSH2 0xB8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x490E6CBC ADDRESS DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x52E JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x52D DUP3 DUP3 PUSH2 0xA94 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x654 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x671 JUMPI PUSH2 0x670 DUP5 DUP4 DUP4 PUSH2 0xC5F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST SWAP1 POP PUSH2 0x6B7 PUSH32 0x0 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0xDAE JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x60 ADD MLOAD PUSH0 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x6FD DUP3 PUSH32 0x0 DUP6 PUSH0 ADD MLOAD PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x72C DUP2 PUSH32 0x0 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xDF8 JUMP JUMPDEST PUSH0 PUSH2 0x73B DUP5 PUSH1 0x20 ADD MLOAD DUP9 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x74B DUP6 PUSH0 ADD MLOAD DUP11 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x861 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97E SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x99A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9CE DUP9 PUSH0 ADD MLOAD DUP14 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9DF DUP10 PUSH1 0x20 ADD MLOAD DUP14 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP PUSH2 0x9EC DUP9 ADDRESS DUP5 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x9F7 DUP8 ADDRESS DUP4 PUSH2 0xDF8 JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B DUP9 ADDRESS CALLER DUP6 PUSH2 0xF68 JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0xA21 JUMPI PUSH2 0xA20 DUP8 ADDRESS CALLER DUP5 PUSH2 0xF68 JUMP JUMPDEST JUMPDEST DUP2 DUP5 GT ISZERO PUSH2 0xA53 JUMPI PUSH0 PUSH2 0xA34 DUP6 DUP5 PUSH2 0x113D JUMP JUMPDEST SWAP1 POP PUSH2 0xA41 DUP10 ADDRESS DUP4 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xA51 DUP10 ADDRESS DUP13 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0xF68 JUMP JUMPDEST POP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0xA85 JUMPI PUSH0 PUSH2 0xA66 DUP5 DUP4 PUSH2 0x113D JUMP JUMPDEST SWAP1 POP PUSH2 0xA73 DUP10 ADDRESS DUP4 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xA83 DUP9 ADDRESS DUP13 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0xF68 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC6 PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAF9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xBCE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBF0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 PUSH0 SHL PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH0 SHR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC93 SWAP3 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xD68 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xD67 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD66 SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xDA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9E SWAP1 PUSH2 0x1F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB9 DUP4 DUP4 PUSH2 0xB8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE2C SWAP3 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xF01 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xF00 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP5 PUSH2 0xF55 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST SWAP2 POP DUP2 LT ISZERO PUSH2 0xF62 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xFC3 JUMPI POP DUP1 SELFBALANCE LT ISZERO JUMPDEST ISZERO PUSH2 0x10E6 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x102E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10BC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E0 SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST POP PUSH2 0x1137 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1129 JUMPI PUSH2 0x1124 DUP5 DUP4 DUP4 PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x1135 DUP5 DUP5 DUP5 DUP5 PUSH2 0x115E JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP5 PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x200E JUMP JUMPDEST SWAP2 POP DUP2 GT ISZERO PUSH2 0x1158 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1194 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1237 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x123C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1269 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x1268 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129F SWAP1 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742057455448390000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F4 PUSH1 0x9 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FF DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1383 DUP3 PUSH2 0x133D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13A2 JUMPI PUSH2 0x13A1 PUSH2 0x134D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13B4 PUSH2 0x1328 JUMP JUMPDEST SWAP1 POP PUSH2 0x13C0 DUP3 DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EE DUP3 PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FE DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1408 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1419 DUP2 PUSH2 0x13F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x141F JUMP JUMPDEST DUP2 EQ PUSH2 0x1440 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1451 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1469 DUP2 PUSH2 0x1457 JUMP JUMPDEST DUP2 EQ PUSH2 0x1473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1484 DUP2 PUSH2 0x1460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149F JUMPI PUSH2 0x149E PUSH2 0x1339 JUMP JUMPDEST JUMPDEST PUSH2 0x14A9 PUSH1 0xE0 PUSH2 0x13AB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x14B8 DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x14CB DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x14DF DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x14F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1507 DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x151B DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x152F DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1550 JUMPI PUSH2 0x154F PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155D DUP5 DUP3 DUP6 ADD PUSH2 0x148A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157C JUMPI PUSH2 0x157B PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1589 DUP6 DUP3 DUP7 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x159A DUP6 DUP3 DUP7 ADD PUSH2 0x140B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15AD DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15EF PUSH2 0x15EA PUSH2 0x15E5 DUP5 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x15CC JUMP JUMPDEST PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1600 DUP3 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1611 DUP3 PUSH2 0x15F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1621 DUP2 PUSH2 0x1607 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x163A PUSH0 DUP4 ADD DUP5 PUSH2 0x1618 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1664 DUP7 DUP3 DUP8 ADD PUSH2 0x140B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1675 DUP7 DUP3 DUP8 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1686 DUP7 DUP3 DUP8 ADD PUSH2 0x140B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x16B1 JUMPI PUSH2 0x16B0 PUSH2 0x1690 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16CE JUMPI PUSH2 0x16CD PUSH2 0x1694 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x16EA JUMPI PUSH2 0x16E9 PUSH2 0x1698 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1716 DUP8 DUP3 DUP9 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1727 DUP8 DUP3 DUP9 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH2 0x1754 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x176B DUP2 PUSH2 0x1457 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x177A DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1789 DUP2 PUSH2 0x141F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x17A3 PUSH0 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x17B6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x17C9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1780 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x17E4 PUSH0 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x17F7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x180A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x181D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x178F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1830 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1780 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1843 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1780 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x185D PUSH0 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x186C DUP2 PUSH2 0x1457 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18A9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x188E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18BE DUP3 PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x18C8 DUP2 DUP6 PUSH2 0x187C JUMP JUMPDEST SWAP4 POP PUSH2 0x18D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x188C JUMP JUMPDEST PUSH2 0x18E1 DUP2 PUSH2 0x133D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH0 DUP4 ADD DUP8 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x190C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x1919 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1863 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x192B DUP2 DUP5 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1944 DUP2 PUSH2 0x1460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x196C DUP5 DUP3 DUP6 ADD PUSH2 0x1936 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742057455448390000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19A9 PUSH1 0x12 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B4 DUP3 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19D6 DUP2 PUSH2 0x199D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2A PUSH1 0x12 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A35 DUP3 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A57 DUP2 PUSH2 0x1A1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A73 JUMPI PUSH2 0x1A72 PUSH2 0x1339 JUMP JUMPDEST JUMPDEST PUSH2 0x1A7D PUSH1 0x60 PUSH2 0x13AB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A8C DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1A9F DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1AB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x1339 JUMP JUMPDEST JUMPDEST PUSH2 0x1ADF PUSH1 0xC0 PUSH2 0x13AB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1AEE DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1B01 DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1B15 DUP5 DUP3 DUP6 ADD PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1B29 DUP5 DUP3 DUP6 ADD PUSH2 0x1A5E JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x1B3D DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x1B51 DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B73 JUMPI PUSH2 0x1B72 PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B80 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B92 DUP2 PUSH2 0x13C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1BAD PUSH0 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1BC0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1BD3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1780 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1BE6 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1771 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1BF9 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1C0C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1C1F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1762 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1C32 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1B89 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C66 DUP3 PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x1C70 DUP2 DUP6 PUSH2 0x1C52 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C80 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x188C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C97 DUP3 DUP5 PUSH2 0x1C5C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354450000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD6 PUSH1 0x3 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE1 DUP3 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D03 DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D13 DUP2 PUSH2 0x141F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2C PUSH0 DUP4 ADD DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1D39 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1D46 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D0A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D8C PUSH1 0x1 DUP4 PUSH2 0x1D4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D97 DUP3 PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB8 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC9 DUP3 PUSH2 0x1DAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE1 PUSH2 0x1DDC DUP3 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x1DBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E0A PUSH2 0x1E05 DUP3 PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x1DF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1A DUP3 PUSH2 0x1D80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E26 DUP3 DUP7 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1E36 DUP3 DUP6 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1E46 DUP3 DUP5 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH0 DUP4 ADD DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1E77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1863 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E92 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EAD DUP2 PUSH2 0x1E89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC8 JUMPI PUSH2 0x1EC7 PUSH2 0x1331 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED5 DUP5 DUP3 DUP6 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F12 PUSH1 0x2 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1D DUP3 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7A PUSH1 0x2 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F85 DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA7 DUP2 PUSH2 0x1F6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FE5 DUP3 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF0 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1FAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2018 DUP3 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x2023 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x203B JUMPI PUSH2 0x203A PUSH2 0x1FAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2054 PUSH0 DUP4 ADD DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x2061 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x206E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1863 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AA PUSH1 0x3 DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B5 DUP3 PUSH2 0x2076 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D7 DUP2 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xCE XOR PUSH30 0x1F04B1E8F5719844D3F5B1930AFC963C9D59F495A4F35A92B35082F26473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "797:5896:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:5:12;673:19;;:10;:19;;;665:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;797:5896:19;;;;;1640:160:12;;;:::i;:::-;;5652:1038:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;758:397:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;450:39:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973::19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;358:41:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1200:395:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1616:3158:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1640:160:12;1725:1;1701:21;:25;1697:96;;;1728:65;1759:10;1771:21;1728:30;:65::i;:::-;1697:96;1640:160::o;5652:1038:19:-;5718:34;5768:85;;;;;;;;5797:6;:13;;;5768:85;;;;;;5820:6;:13;;;5768:85;;;;;;5840:6;:11;;;5768:85;;;;;5718:135;;5864:19;5901:44;5928:7;5937;5901:26;:44::i;:::-;5864:82;;6219:4;:10;;;6252:4;6272:6;:14;;;6301:6;:14;;;6359:297;;;;;;;;6409:6;:14;;;6359:297;;;;6455:6;:14;;;6359:297;;;;6499:10;6359:297;;;;;;6541:7;6359:297;;;;6581:6;:11;;;6359:297;;;;;;6625:6;:11;;;6359:297;;;;;6330:341;;;;;;;;:::i;:::-;;;;;;;;;;;;;6219:463;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5707:983;;5652:1038;:::o;758:397:12:-;855:20;885:5;878:23;;;910:4;878:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;855:61;;950:13;934:12;:29;;926:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1016:1;1001:12;:16;997:152;;;1040:5;1033:22;;;1056:12;1033:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1083:55;1114:9;1125:12;1083:30;:55::i;:::-;997:152;845:310;758:397;;:::o;450:39:11:-;;;:::o;973::19:-;;;:::o;358:41:11:-;;;:::o;1200:395:12:-;1341:20;1371:5;1364:23;;;1396:4;1364:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1341:61;;1436:13;1420:12;:29;;1412:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1502:1;1487:12;:16;1483:106;;;1519:59;1547:5;1554:9;1565:12;1519:27;:59::i;:::-;1483:106;1331:264;1200:395;;;:::o;1616:3158:19:-;1760:32;1806:4;;1795:37;;;;;;;:::i;:::-;1760:72;;1843:59;1877:7;1886;:15;;;1843:33;:59::i;:::-;;1915:14;1932:7;:15;;;:22;;;1915:39;;1965:14;1982:7;:15;;;:22;;;1965:39;;2017:72;2044:6;2060:10;2073:7;:15;;;2017:26;:72::i;:::-;2100;2127:6;2143:10;2156:7;:15;;;2100:26;:72::i;:::-;2276:18;2297:41;2316:7;:15;;;2333:4;2297:18;:41::i;:::-;2276:62;;2349:18;2370:41;2389:7;:15;;;2406:4;2370:18;:41::i;:::-;2349:62;;2504:18;2538:10;:27;;;2584:413;;;;;;;;2651:6;2584:413;;;;;;2690:6;2584:413;;;;;;2724:7;:16;;;2584:413;;;;;;2782:4;2584:413;;;;;;2820:15;2584:413;;;;2868:7;:15;;;2584:413;;;;2924:10;2584:413;;;;2976:1;2584:413;;;;;2538:474;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2504:508;;3106:18;3140:10;:27;;;3186:413;;;;;;;;3253:6;3186:413;;;;;;3292:6;3186:413;;;;;;3326:7;:16;;;3186:413;;;;;;3384:4;3186:413;;;;;;3422:15;3186:413;;;;3470:7;:15;;;3186:413;;;;3526:10;3186:413;;;;3578:1;3186:413;;;;;3140:474;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3106:508;;3730:19;3752:41;3771:7;:15;;;3788:4;3752:18;:41::i;:::-;3730:63;;3804:19;3826:41;3845:7;:15;;;3862:4;3826:18;:41::i;:::-;3804:63;;3880:62;3907:6;3923:4;3930:11;3880:26;:62::i;:::-;3953;3980:6;3996:4;4003:11;3953:26;:62::i;:::-;4046:1;4032:11;:15;4028:72;;;4049:51;4053:6;4069:4;4076:10;4088:11;4049:3;:51::i;:::-;4028:72;4129:1;4115:11;:15;4111:72;;;4132:51;4136:6;4152:4;4159:10;4171:11;4132:3;:51::i;:::-;4111:72;4260:11;4247:10;:24;4243:258;;;4288:15;4306:43;4325:10;4337:11;4306:18;:43::i;:::-;4288:61;;4366:58;4393:6;4409:4;4416:7;4366:26;:58::i;:::-;4439:50;4443:6;4459:4;4466:7;:13;;;4481:7;4439:3;:50::i;:::-;4273:228;4243:258;4528:11;4515:10;:24;4511:256;;;4556:15;4574:43;4593:10;4605:11;4574:18;:43::i;:::-;4556:61;;4632:58;4659:6;4675:4;4682:7;4632:26;:58::i;:::-;4705:50;4709:6;4725:4;4732:7;:13;;;4747:7;4705:3;:50::i;:::-;4541:226;4511:256;1749:3025;;;;;;;;;1616:3158;;;;:::o;2370:165:18:-;2442:12;2460:2;:7;;2475:5;2492:1;2482:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:54;;;2513:7;2505:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;2431:104;2370:165;;:::o;1305:449:17:-;1389:12;1434:3;:10;;;1421:23;;:3;:10;;;:23;;;1413:32;;;;;;1455:16;1555:7;1601:3;:10;;;1613:3;:10;;;1625:3;:7;;;1590:43;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1580:54;;;;;;241:66;1652:19;;1496:189;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1473:222;;;;;;1455:240;;1736:8;1728:17;;1705:42;;1403:351;1305:449;;;;:::o;1211:309:18:-;1325:12;1339:17;1360:5;:10;;1394:24;;;1420:2;1424:5;1371:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;;1476:1;1461:4;:11;:16;:44;;;;1492:4;1481:24;;;;;;;;;;;;:::i;:::-;1461:44;1449:57;1441:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1314:206;;1211:309;;;:::o;1190:279:16:-;1314:19;1371:44;1398:7;1407;1371:26;:44::i;:::-;1349:67;;1456:4;1434:27;;:10;:27;;;1426:36;;;;;;1190:279;;;;:::o;1873:307:18:-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;435:111:10:-;493:9;537:1;531;527;:5;;;;:::i;:::-;523:9;;;522:16;;514:25;;;;;;435:111;;;;:::o;1991:699:12:-;2138:5;2129:14;;:5;:14;;;:48;;;;;2172:5;2147:21;:30;;2129:48;2125:559;;;2230:5;2223:21;;;2252:5;2223:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:5;2309:22;;;2332:9;2343:5;2309:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2125:559;;;2387:4;2370:22;;:5;:22;;;2366:318;;2499:52;2527:5;2534:9;2545:5;2499:27;:52::i;:::-;2366:318;;;2610:63;2642:5;2649;2656:9;2667:5;2610:31;:63::i;:::-;2366:318;2125:559;1991:699;;;;:::o;710:111:10:-;768:9;812:1;806;802;:5;;;;:::i;:::-;798:9;;;797:16;;789:25;;;;;;710:111;;;;:::o;561:358:18:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;7:169:20:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:159::-;322:11;318:1;310:6;306:14;299:35;182:159;:::o;347:365::-;489:3;510:66;574:1;569:3;510:66;:::i;:::-;503:73;;585:93;674:3;585:93;:::i;:::-;703:2;698:3;694:12;687:19;;347:365;;;:::o;718:419::-;884:4;922:2;911:9;907:18;899:26;;971:9;965:4;961:20;957:1;946:9;942:17;935:47;999:131;1125:4;999:131;:::i;:::-;991:139;;718:419;;;:::o;1143:75::-;1176:6;1209:2;1203:9;1193:19;;1143:75;:::o;1224:117::-;1333:1;1330;1323:12;1347:117;1456:1;1453;1446:12;1470:117;1579:1;1576;1569:12;1593:102;1634:6;1685:2;1681:7;1676:2;1669:5;1665:14;1661:28;1651:38;;1593:102;;;:::o;1701:180::-;1749:77;1746:1;1739:88;1846:4;1843:1;1836:15;1870:4;1867:1;1860:15;1887:281;1970:27;1992:4;1970:27;:::i;:::-;1962:6;1958:40;2100:6;2088:10;2085:22;2064:18;2052:10;2049:34;2046:62;2043:88;;;2111:18;;:::i;:::-;2043:88;2151:10;2147:2;2140:22;1930:238;1887:281;;:::o;2174:129::-;2208:6;2235:20;;:::i;:::-;2225:30;;2264:33;2292:4;2284:6;2264:33;:::i;:::-;2174:129;;;:::o;2432:126::-;2469:7;2509:42;2502:5;2498:54;2487:65;;2432:126;;;:::o;2564:96::-;2601:7;2630:24;2648:5;2630:24;:::i;:::-;2619:35;;2564:96;;;:::o;2666:122::-;2739:24;2757:5;2739:24;:::i;:::-;2732:5;2729:35;2719:63;;2778:1;2775;2768:12;2719:63;2666:122;:::o;2794:139::-;2840:5;2878:6;2865:20;2856:29;;2894:33;2921:5;2894:33;:::i;:::-;2794:139;;;;:::o;2939:91::-;2975:7;3015:8;3008:5;3004:20;2993:31;;2939:91;;;:::o;3036:120::-;3108:23;3125:5;3108:23;:::i;:::-;3101:5;3098:34;3088:62;;3146:1;3143;3136:12;3088:62;3036:120;:::o;3162:137::-;3207:5;3245:6;3232:20;3223:29;;3261:32;3287:5;3261:32;:::i;:::-;3162:137;;;;:::o;3305:77::-;3342:7;3371:5;3360:16;;3305:77;;;:::o;3388:122::-;3461:24;3479:5;3461:24;:::i;:::-;3454:5;3451:35;3441:63;;3500:1;3497;3490:12;3441:63;3388:122;:::o;3516:139::-;3562:5;3600:6;3587:20;3578:29;;3616:33;3643:5;3616:33;:::i;:::-;3516:139;;;;:::o;3697:1393::-;3775:5;3819:4;3807:9;3802:3;3798:19;3794:30;3791:117;;;3827:79;;:::i;:::-;3791:117;3926:21;3942:4;3926:21;:::i;:::-;3917:30;;4008:1;4048:49;4093:3;4084:6;4073:9;4069:22;4048:49;:::i;:::-;4041:4;4034:5;4030:16;4023:75;3957:152;4170:2;4211:49;4256:3;4247:6;4236:9;4232:22;4211:49;:::i;:::-;4204:4;4197:5;4193:16;4186:75;4119:153;4331:2;4372:48;4416:3;4407:6;4396:9;4392:22;4372:48;:::i;:::-;4365:4;4358:5;4354:16;4347:74;4282:150;4494:2;4535:49;4580:3;4571:6;4560:9;4556:22;4535:49;:::i;:::-;4528:4;4521:5;4517:16;4510:75;4442:154;4658:3;4700:49;4745:3;4736:6;4725:9;4721:22;4700:49;:::i;:::-;4693:4;4686:5;4682:16;4675:75;4606:155;4820:3;4862:48;4906:3;4897:6;4886:9;4882:22;4862:48;:::i;:::-;4855:4;4848:5;4844:16;4837:74;4771:151;4981:3;5023:48;5067:3;5058:6;5047:9;5043:22;5023:48;:::i;:::-;5016:4;5009:5;5005:16;4998:74;4932:151;3697:1393;;;;:::o;5096:388::-;5184:6;5233:3;5221:9;5212:7;5208:23;5204:33;5201:120;;;5240:79;;:::i;:::-;5201:120;5360:1;5385:82;5459:7;5450:6;5439:9;5435:22;5385:82;:::i;:::-;5375:92;;5331:146;5096:388;;;;:::o;5490:474::-;5558:6;5566;5615:2;5603:9;5594:7;5590:23;5586:32;5583:119;;;5621:79;;:::i;:::-;5583:119;5741:1;5766:53;5811:7;5802:6;5791:9;5787:22;5766:53;:::i;:::-;5756:63;;5712:117;5868:2;5894:53;5939:7;5930:6;5919:9;5915:22;5894:53;:::i;:::-;5884:63;;5839:118;5490:474;;;;;:::o;5970:118::-;6057:24;6075:5;6057:24;:::i;:::-;6052:3;6045:37;5970:118;;:::o;6094:222::-;6187:4;6225:2;6214:9;6210:18;6202:26;;6238:71;6306:1;6295:9;6291:17;6282:6;6238:71;:::i;:::-;6094:222;;;;:::o;6322:60::-;6350:3;6371:5;6364:12;;6322:60;;;:::o;6388:142::-;6438:9;6471:53;6489:34;6498:24;6516:5;6498:24;:::i;:::-;6489:34;:::i;:::-;6471:53;:::i;:::-;6458:66;;6388:142;;;:::o;6536:126::-;6586:9;6619:37;6650:5;6619:37;:::i;:::-;6606:50;;6536:126;;;:::o;6668:146::-;6738:9;6771:37;6802:5;6771:37;:::i;:::-;6758:50;;6668:146;;;:::o;6820:171::-;6927:57;6978:5;6927:57;:::i;:::-;6922:3;6915:70;6820:171;;:::o;6997:262::-;7110:4;7148:2;7137:9;7133:18;7125:26;;7161:91;7249:1;7238:9;7234:17;7225:6;7161:91;:::i;:::-;6997:262;;;;:::o;7265:619::-;7342:6;7350;7358;7407:2;7395:9;7386:7;7382:23;7378:32;7375:119;;;7413:79;;:::i;:::-;7375:119;7533:1;7558:53;7603:7;7594:6;7583:9;7579:22;7558:53;:::i;:::-;7548:63;;7504:117;7660:2;7686:53;7731:7;7722:6;7711:9;7707:22;7686:53;:::i;:::-;7676:63;;7631:118;7788:2;7814:53;7859:7;7850:6;7839:9;7835:22;7814:53;:::i;:::-;7804:63;;7759:118;7265:619;;;;;:::o;7890:117::-;7999:1;7996;7989:12;8013:117;8122:1;8119;8112:12;8136:117;8245:1;8242;8235:12;8272:552;8329:8;8339:6;8389:3;8382:4;8374:6;8370:17;8366:27;8356:122;;8397:79;;:::i;:::-;8356:122;8510:6;8497:20;8487:30;;8540:18;8532:6;8529:30;8526:117;;;8562:79;;:::i;:::-;8526:117;8676:4;8668:6;8664:17;8652:29;;8730:3;8722:4;8714:6;8710:17;8700:8;8696:32;8693:41;8690:128;;;8737:79;;:::i;:::-;8690:128;8272:552;;;;;:::o;8830:817::-;8918:6;8926;8934;8942;8991:2;8979:9;8970:7;8966:23;8962:32;8959:119;;;8997:79;;:::i;:::-;8959:119;9117:1;9142:53;9187:7;9178:6;9167:9;9163:22;9142:53;:::i;:::-;9132:63;;9088:117;9244:2;9270:53;9315:7;9306:6;9295:9;9291:22;9270:53;:::i;:::-;9260:63;;9215:118;9400:2;9389:9;9385:18;9372:32;9431:18;9423:6;9420:30;9417:117;;;9453:79;;:::i;:::-;9417:117;9566:64;9622:7;9613:6;9602:9;9598:22;9566:64;:::i;:::-;9548:82;;;;9343:297;8830:817;;;;;;;:::o;9653:108::-;9730:24;9748:5;9730:24;:::i;:::-;9725:3;9718:37;9653:108;;:::o;9767:::-;9844:24;9862:5;9844:24;:::i;:::-;9839:3;9832:37;9767:108;;:::o;9881:105::-;9956:23;9973:5;9956:23;:::i;:::-;9951:3;9944:36;9881:105;;:::o;10056:672::-;10193:4;10188:3;10184:14;10282:4;10275:5;10271:16;10265:23;10301:63;10358:4;10353:3;10349:14;10335:12;10301:63;:::i;:::-;10208:166;10458:4;10451:5;10447:16;10441:23;10477:63;10534:4;10529:3;10525:14;10511:12;10477:63;:::i;:::-;10384:166;10631:4;10624:5;10620:16;10614:23;10650:61;10705:4;10700:3;10696:14;10682:12;10650:61;:::i;:::-;10560:161;10162:566;10056:672;;:::o;10814:1289::-;10981:6;10976:3;10972:16;11073:4;11066:5;11062:16;11056:23;11092:63;11149:4;11144:3;11140:14;11126:12;11092:63;:::i;:::-;10998:167;11250:4;11243:5;11239:16;11233:23;11269:63;11326:4;11321:3;11317:14;11303:12;11269:63;:::i;:::-;11175:167;11425:4;11418:5;11414:16;11408:23;11444:63;11501:4;11496:3;11492:14;11478:12;11444:63;:::i;:::-;11352:165;11602:4;11595:5;11591:16;11585:23;11621:113;11728:4;11723:3;11719:14;11705:12;11621:113;:::i;:::-;11527:217;11830:4;11823:5;11819:16;11813:23;11849:61;11904:4;11899:3;11895:14;11881:12;11849:61;:::i;:::-;11754:166;12006:4;11999:5;11995:16;11989:23;12025:61;12080:4;12075:3;12071:14;12057:12;12025:61;:::i;:::-;11930:166;10950:1153;10814:1289;;:::o;12109:363::-;12272:4;12310:3;12299:9;12295:19;12287:27;;12324:141;12462:1;12451:9;12447:17;12438:6;12324:141;:::i;:::-;12109:363;;;;:::o;12478:118::-;12565:24;12583:5;12565:24;:::i;:::-;12560:3;12553:37;12478:118;;:::o;12602:98::-;12653:6;12687:5;12681:12;12671:22;;12602:98;;;:::o;12706:168::-;12789:11;12823:6;12818:3;12811:19;12863:4;12858:3;12854:14;12839:29;;12706:168;;;;:::o;12880:246::-;12961:1;12971:113;12985:6;12982:1;12979:13;12971:113;;;13070:1;13065:3;13061:11;13055:18;13051:1;13046:3;13042:11;13035:39;13007:2;13004:1;13000:10;12995:15;;12971:113;;;13118:1;13109:6;13104:3;13100:16;13093:27;12942:184;12880:246;;;:::o;13132:373::-;13218:3;13246:38;13278:5;13246:38;:::i;:::-;13300:70;13363:6;13358:3;13300:70;:::i;:::-;13293:77;;13379:65;13437:6;13432:3;13425:4;13418:5;13414:16;13379:65;:::i;:::-;13469:29;13491:6;13469:29;:::i;:::-;13464:3;13460:39;13453:46;;13222:283;13132:373;;;;:::o;13511:640::-;13706:4;13744:3;13733:9;13729:19;13721:27;;13758:71;13826:1;13815:9;13811:17;13802:6;13758:71;:::i;:::-;13839:72;13907:2;13896:9;13892:18;13883:6;13839:72;:::i;:::-;13921;13989:2;13978:9;13974:18;13965:6;13921:72;:::i;:::-;14040:9;14034:4;14030:20;14025:2;14014:9;14010:18;14003:48;14068:76;14139:4;14130:6;14068:76;:::i;:::-;14060:84;;13511:640;;;;;;;:::o;14157:143::-;14214:5;14245:6;14239:13;14230:22;;14261:33;14288:5;14261:33;:::i;:::-;14157:143;;;;:::o;14306:351::-;14376:6;14425:2;14413:9;14404:7;14400:23;14396:32;14393:119;;;14431:79;;:::i;:::-;14393:119;14551:1;14576:64;14632:7;14623:6;14612:9;14608:22;14576:64;:::i;:::-;14566:74;;14522:128;14306:351;;;;:::o;14663:168::-;14803:20;14799:1;14791:6;14787:14;14780:44;14663:168;:::o;14837:366::-;14979:3;15000:67;15064:2;15059:3;15000:67;:::i;:::-;14993:74;;15076:93;15165:3;15076:93;:::i;:::-;15194:2;15189:3;15185:12;15178:19;;14837:366;;;:::o;15209:419::-;15375:4;15413:2;15402:9;15398:18;15390:26;;15462:9;15456:4;15452:20;15448:1;15437:9;15433:17;15426:47;15490:131;15616:4;15490:131;:::i;:::-;15482:139;;15209:419;;;:::o;15634:222::-;15727:4;15765:2;15754:9;15750:18;15742:26;;15778:71;15846:1;15835:9;15831:17;15822:6;15778:71;:::i;:::-;15634:222;;;;:::o;15862:168::-;16002:20;15998:1;15990:6;15986:14;15979:44;15862:168;:::o;16036:366::-;16178:3;16199:67;16263:2;16258:3;16199:67;:::i;:::-;16192:74;;16275:93;16364:3;16275:93;:::i;:::-;16393:2;16388:3;16384:12;16377:19;;16036:366;;;:::o;16408:419::-;16574:4;16612:2;16601:9;16597:18;16589:26;;16661:9;16655:4;16651:20;16647:1;16636:9;16632:17;16625:47;16689:131;16815:4;16689:131;:::i;:::-;16681:139;;16408:419;;;:::o;16867:737::-;16941:5;16985:4;16973:9;16968:3;16964:19;16960:30;16957:117;;;16993:79;;:::i;:::-;16957:117;17092:21;17108:4;17092:21;:::i;:::-;17083:30;;17174:1;17214:49;17259:3;17250:6;17239:9;17235:22;17214:49;:::i;:::-;17207:4;17200:5;17196:16;17189:75;17123:152;17336:2;17377:49;17422:3;17413:6;17402:9;17398:22;17377:49;:::i;:::-;17370:4;17363:5;17359:16;17352:75;17285:153;17496:2;17537:48;17581:3;17572:6;17561:9;17557:22;17537:48;:::i;:::-;17530:4;17523:5;17519:16;17512:74;17448:149;16867:737;;;;:::o;17652:1273::-;17736:5;17780:6;17768:9;17763:3;17759:19;17755:32;17752:119;;;17790:79;;:::i;:::-;17752:119;17889:21;17905:4;17889:21;:::i;:::-;17880:30;;17972:1;18012:49;18057:3;18048:6;18037:9;18033:22;18012:49;:::i;:::-;18005:4;17998:5;17994:16;17987:75;17920:153;18135:2;18176:49;18221:3;18212:6;18201:9;18197:22;18176:49;:::i;:::-;18169:4;18162:5;18158:16;18151:75;18083:154;18297:2;18338:49;18383:3;18374:6;18363:9;18359:22;18338:49;:::i;:::-;18331:4;18324:5;18320:16;18313:75;18247:152;18461:2;18502:74;18572:3;18563:6;18552:9;18548:22;18502:74;:::i;:::-;18495:4;18488:5;18484:16;18477:100;18409:179;18651:3;18693:48;18737:3;18728:6;18717:9;18713:22;18693:48;:::i;:::-;18686:4;18679:5;18675:16;18668:74;18598:155;18816:3;18858:48;18902:3;18893:6;18882:9;18878:22;18858:48;:::i;:::-;18851:4;18844:5;18840:16;18833:74;18763:155;17652:1273;;;;:::o;18931:400::-;19025:6;19074:3;19062:9;19053:7;19049:23;19045:33;19042:120;;;19081:79;;:::i;:::-;19042:120;19201:1;19226:88;19306:7;19297:6;19286:9;19282:22;19226:88;:::i;:::-;19216:98;;19172:152;18931:400;;;;:::o;19337:108::-;19414:24;19432:5;19414:24;:::i;:::-;19409:3;19402:37;19337:108;;:::o;19545:1623::-;19720:6;19715:3;19711:16;19812:4;19805:5;19801:16;19795:23;19831:63;19888:4;19883:3;19879:14;19865:12;19831:63;:::i;:::-;19737:167;19990:4;19983:5;19979:16;19973:23;20009:63;20066:4;20061:3;20057:14;20043:12;20009:63;:::i;:::-;19914:168;20163:4;20156:5;20152:16;20146:23;20182:61;20237:4;20232:3;20228:14;20214:12;20182:61;:::i;:::-;20092:161;20340:4;20333:5;20329:16;20323:23;20359:63;20416:4;20411:3;20407:14;20393:12;20359:63;:::i;:::-;20263:169;20518:4;20511:5;20507:16;20501:23;20537:63;20594:4;20589:3;20585:14;20571:12;20537:63;:::i;:::-;20442:168;20696:4;20689:5;20685:16;20679:23;20715:63;20772:4;20767:3;20763:14;20749:12;20715:63;:::i;:::-;20620:168;20882:4;20875:5;20871:16;20865:23;20901:63;20958:4;20953:3;20949:14;20935:12;20901:63;:::i;:::-;20798:176;21069:4;21062:5;21058:16;21052:23;21088:63;21145:4;21140:3;21136:14;21122:12;21088:63;:::i;:::-;20984:177;19689:1479;19545:1623;;:::o;21174:379::-;21345:4;21383:3;21372:9;21368:19;21360:27;;21397:149;21543:1;21532:9;21528:17;21519:6;21397:149;:::i;:::-;21174:379;;;;:::o;21559:147::-;21660:11;21697:3;21682:18;;21559:147;;;;:::o;21712:386::-;21816:3;21844:38;21876:5;21844:38;:::i;:::-;21898:88;21979:6;21974:3;21898:88;:::i;:::-;21891:95;;21995:65;22053:6;22048:3;22041:4;22034:5;22030:16;21995:65;:::i;:::-;22085:6;22080:3;22076:16;22069:23;;21820:278;21712:386;;;;:::o;22104:271::-;22234:3;22256:93;22345:3;22336:6;22256:93;:::i;:::-;22249:100;;22366:3;22359:10;;22104:271;;;;:::o;22381:153::-;22521:5;22517:1;22509:6;22505:14;22498:29;22381:153;:::o;22540:365::-;22682:3;22703:66;22767:1;22762:3;22703:66;:::i;:::-;22696:73;;22778:93;22867:3;22778:93;:::i;:::-;22896:2;22891:3;22887:12;22880:19;;22540:365;;;:::o;22911:419::-;23077:4;23115:2;23104:9;23100:18;23092:26;;23164:9;23158:4;23154:20;23150:1;23139:9;23135:17;23128:47;23192:131;23318:4;23192:131;:::i;:::-;23184:139;;22911:419;;;:::o;23336:115::-;23421:23;23438:5;23421:23;:::i;:::-;23416:3;23409:36;23336:115;;:::o;23457:438::-;23604:4;23642:2;23631:9;23627:18;23619:26;;23655:71;23723:1;23712:9;23708:17;23699:6;23655:71;:::i;:::-;23736:72;23804:2;23793:9;23789:18;23780:6;23736:72;:::i;:::-;23818:70;23884:2;23873:9;23869:18;23860:6;23818:70;:::i;:::-;23457:438;;;;;;:::o;23901:148::-;24003:11;24040:3;24025:18;;23901:148;;;;:::o;24055:214::-;24195:66;24191:1;24183:6;24179:14;24172:90;24055:214;:::o;24275:400::-;24435:3;24456:84;24538:1;24533:3;24456:84;:::i;:::-;24449:91;;24549:93;24638:3;24549:93;:::i;:::-;24667:1;24662:3;24658:11;24651:18;;24275:400;;;:::o;24681:94::-;24714:8;24762:5;24758:2;24754:14;24733:35;;24681:94;;;:::o;24781:::-;24820:7;24849:20;24863:5;24849:20;:::i;:::-;24838:31;;24781:94;;;:::o;24881:100::-;24920:7;24949:26;24969:5;24949:26;:::i;:::-;24938:37;;24881:100;;;:::o;24987:157::-;25092:45;25112:24;25130:5;25112:24;:::i;:::-;25092:45;:::i;:::-;25087:3;25080:58;24987:157;;:::o;25150:77::-;25187:7;25216:5;25205:16;;25150:77;;;:::o;25233:79::-;25272:7;25301:5;25290:16;;25233:79;;;:::o;25318:157::-;25423:45;25443:24;25461:5;25443:24;:::i;:::-;25423:45;:::i;:::-;25418:3;25411:58;25318:157;;:::o;25481:804::-;25750:3;25772:148;25916:3;25772:148;:::i;:::-;25765:155;;25930:75;26001:3;25992:6;25930:75;:::i;:::-;26030:2;26025:3;26021:12;26014:19;;26043:75;26114:3;26105:6;26043:75;:::i;:::-;26143:2;26138:3;26134:12;26127:19;;26156:75;26227:3;26218:6;26156:75;:::i;:::-;26256:2;26251:3;26247:12;26240:19;;26276:3;26269:10;;25481:804;;;;;;:::o;26291:332::-;26412:4;26450:2;26439:9;26435:18;26427:26;;26463:71;26531:1;26520:9;26516:17;26507:6;26463:71;:::i;:::-;26544:72;26612:2;26601:9;26597:18;26588:6;26544:72;:::i;:::-;26291:332;;;;;:::o;26629:90::-;26663:7;26706:5;26699:13;26692:21;26681:32;;26629:90;;;:::o;26725:116::-;26795:21;26810:5;26795:21;:::i;:::-;26788:5;26785:32;26775:60;;26831:1;26828;26821:12;26775:60;26725:116;:::o;26847:137::-;26901:5;26932:6;26926:13;26917:22;;26948:30;26972:5;26948:30;:::i;:::-;26847:137;;;;:::o;26990:345::-;27057:6;27106:2;27094:9;27085:7;27081:23;27077:32;27074:119;;;27112:79;;:::i;:::-;27074:119;27232:1;27257:61;27310:7;27301:6;27290:9;27286:22;27257:61;:::i;:::-;27247:71;;27203:125;26990:345;;;;:::o;27341:152::-;27481:4;27477:1;27469:6;27465:14;27458:28;27341:152;:::o;27499:365::-;27641:3;27662:66;27726:1;27721:3;27662:66;:::i;:::-;27655:73;;27737:93;27826:3;27737:93;:::i;:::-;27855:2;27850:3;27846:12;27839:19;;27499:365;;;:::o;27870:419::-;28036:4;28074:2;28063:9;28059:18;28051:26;;28123:9;28117:4;28113:20;28109:1;28098:9;28094:17;28087:47;28151:131;28277:4;28151:131;:::i;:::-;28143:139;;27870:419;;;:::o;28295:152::-;28435:4;28431:1;28423:6;28419:14;28412:28;28295:152;:::o;28453:365::-;28595:3;28616:66;28680:1;28675:3;28616:66;:::i;:::-;28609:73;;28691:93;28780:3;28691:93;:::i;:::-;28809:2;28804:3;28800:12;28793:19;;28453:365;;;:::o;28824:419::-;28990:4;29028:2;29017:9;29013:18;29005:26;;29077:9;29071:4;29067:20;29063:1;29052:9;29048:17;29041:47;29105:131;29231:4;29105:131;:::i;:::-;29097:139;;28824:419;;;:::o;29249:180::-;29297:77;29294:1;29287:88;29394:4;29391:1;29384:15;29418:4;29415:1;29408:15;29435:191;29475:3;29494:20;29512:1;29494:20;:::i;:::-;29489:25;;29528:20;29546:1;29528:20;:::i;:::-;29523:25;;29571:1;29568;29564:9;29557:16;;29592:3;29589:1;29586:10;29583:36;;;29599:18;;:::i;:::-;29583:36;29435:191;;;;:::o;29632:194::-;29672:4;29692:20;29710:1;29692:20;:::i;:::-;29687:25;;29726:20;29744:1;29726:20;:::i;:::-;29721:25;;29770:1;29767;29763:9;29755:17;;29794:1;29788:4;29785:11;29782:37;;;29799:18;;:::i;:::-;29782:37;29632:194;;;;:::o;29832:442::-;29981:4;30019:2;30008:9;30004:18;29996:26;;30032:71;30100:1;30089:9;30085:17;30076:6;30032:71;:::i;:::-;30113:72;30181:2;30170:9;30166:18;30157:6;30113:72;:::i;:::-;30195;30263:2;30252:9;30248:18;30239:6;30195:72;:::i;:::-;29832:442;;;;;;:::o;30280:153::-;30420:5;30416:1;30408:6;30404:14;30397:29;30280:153;:::o;30439:365::-;30581:3;30602:66;30666:1;30661:3;30602:66;:::i;:::-;30595:73;;30677:93;30766:3;30677:93;:::i;:::-;30795:2;30790:3;30786:12;30779:19;;30439:365;;;:::o;30810:419::-;30976:4;31014:2;31003:9;30999:18;30991:26;;31063:9;31057:4;31053:20;31049:1;31038:9;31034:17;31027:47;31091:131;31217:4;31091:131;:::i;:::-;31083:139;;30810:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1693600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH9()": "infinite",
								"factory()": "infinite",
								"initFlash((address,address,uint24,uint256,uint256,uint24,uint24))": "infinite",
								"refundETH()": "infinite",
								"swapRouter()": "infinite",
								"sweepToken(address,uint256,address)": "infinite",
								"uniswapV3FlashCallback(uint256,uint256,bytes)": "infinite",
								"unwrapWETH9(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "E0"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "PUSHSIZE",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "CODESIZE",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "PUSHSIZE",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 1021,
									"end": 1211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "tag",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1150,
									"end": 1158,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1160,
									"end": 1166,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 562,
									"end": 570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 552,
									"end": 570,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 552,
									"end": 570,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 552,
									"end": 570,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 552,
									"end": 570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 552,
									"end": 570,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 552,
									"end": 570,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 552,
									"end": 570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 552,
									"end": 570,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 552,
									"end": 570,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 552,
									"end": 570,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 588,
									"end": 594,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 594,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 580,
									"end": 594,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 580,
									"end": 594,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 580,
									"end": 594,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 594,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 580,
									"end": 594,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 580,
									"end": 594,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 594,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 580,
									"end": 594,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 594,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 496,
									"end": 601,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 496,
									"end": 601,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1192,
									"end": 1203,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1203,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1179,
									"end": 1203,
									"modifierDepth": 1,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1203,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 19,
									"value": "C0"
								},
								{
									"begin": 1179,
									"end": 1203,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1203,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1179,
									"end": 1203,
									"modifierDepth": 1,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1203,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1203,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1203,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1203,
									"modifierDepth": 1,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1211,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 20,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 20,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 20,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "25"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 20,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 568,
									"end": 684,
									"name": "tag",
									"source": 20,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 684,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 625,
									"end": 632,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 654,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "27"
								},
								{
									"begin": 672,
									"end": 677,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 654,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "13"
								},
								{
									"begin": 654,
									"end": 678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 654,
									"end": 678,
									"name": "tag",
									"source": 20,
									"value": "27"
								},
								{
									"begin": 654,
									"end": 678,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 643,
									"end": 678,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 643,
									"end": 678,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 568,
									"end": 684,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 568,
									"end": 684,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 568,
									"end": 684,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 568,
									"end": 684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 690,
									"end": 852,
									"name": "tag",
									"source": 20,
									"value": "15"
								},
								{
									"begin": 690,
									"end": 852,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 783,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "29"
								},
								{
									"begin": 821,
									"end": 826,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 783,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "14"
								},
								{
									"begin": 783,
									"end": 827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 783,
									"end": 827,
									"name": "tag",
									"source": 20,
									"value": "29"
								},
								{
									"begin": 783,
									"end": 827,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 776,
									"end": 781,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 773,
									"end": 828,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 763,
									"end": 846,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "30"
								},
								{
									"begin": 763,
									"end": 846,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 839,
									"end": 840,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 832,
									"end": 844,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 763,
									"end": 846,
									"name": "tag",
									"source": 20,
									"value": "30"
								},
								{
									"begin": 763,
									"end": 846,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 690,
									"end": 852,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 690,
									"end": 852,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "tag",
									"source": 20,
									"value": "16"
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 935,
									"end": 940,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 972,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 960,
									"end": 973,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 951,
									"end": 973,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 951,
									"end": 973,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "32"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "15"
								},
								{
									"begin": 982,
									"end": 1035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "tag",
									"source": 20,
									"value": "32"
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 858,
									"end": 1041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1047,
									"end": 1169,
									"name": "tag",
									"source": 20,
									"value": "17"
								},
								{
									"begin": 1047,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1120,
									"end": 1144,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "34"
								},
								{
									"begin": 1138,
									"end": 1143,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1120,
									"end": 1144,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "13"
								},
								{
									"begin": 1120,
									"end": 1144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1120,
									"end": 1144,
									"name": "tag",
									"source": 20,
									"value": "34"
								},
								{
									"begin": 1120,
									"end": 1144,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1110,
									"end": 1145,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 1100,
									"end": 1163,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "35"
								},
								{
									"begin": 1100,
									"end": 1163,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1156,
									"end": 1157,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1149,
									"end": 1161,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 1100,
									"end": 1163,
									"name": "tag",
									"source": 20,
									"value": "35"
								},
								{
									"begin": 1100,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1047,
									"end": 1169,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1047,
									"end": 1169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "tag",
									"source": 20,
									"value": "18"
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1232,
									"end": 1237,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1263,
									"end": 1269,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 1248,
									"end": 1270,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1248,
									"end": 1270,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "37"
								},
								{
									"begin": 1306,
									"end": 1311,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "17"
								},
								{
									"begin": 1279,
									"end": 1312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "tag",
									"source": 20,
									"value": "37"
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1175,
									"end": 1318,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "tag",
									"source": 20,
									"value": "3"
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1432,
									"end": 1438,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1448,
									"end": 1454,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1497,
									"end": 1499,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 1485,
									"end": 1494,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1476,
									"end": 1483,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1472,
									"end": 1495,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 1468,
									"end": 1500,
									"name": "SLT",
									"source": 20
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "39"
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 1503,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1503,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "10"
								},
								{
									"begin": 1503,
									"end": 1582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1503,
									"end": 1582,
									"name": "tag",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1503,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "tag",
									"source": 20,
									"value": "39"
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1623,
									"end": 1624,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1648,
									"end": 1732,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "41"
								},
								{
									"begin": 1724,
									"end": 1731,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1704,
									"end": 1713,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 1700,
									"end": 1722,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1648,
									"end": 1732,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "16"
								},
								{
									"begin": 1648,
									"end": 1732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1648,
									"end": 1732,
									"name": "tag",
									"source": 20,
									"value": "41"
								},
								{
									"begin": 1648,
									"end": 1732,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1638,
									"end": 1732,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 1638,
									"end": 1732,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1594,
									"end": 1742,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1781,
									"end": 1783,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "42"
								},
								{
									"begin": 1863,
									"end": 1870,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1843,
									"end": 1852,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 1839,
									"end": 1861,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "18"
								},
								{
									"begin": 1807,
									"end": 1871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "tag",
									"source": 20,
									"value": "42"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1752,
									"end": 1881,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1920,
									"end": 1922,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "43"
								},
								{
									"begin": 2002,
									"end": 2009,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1993,
									"end": 1999,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1982,
									"end": 1991,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 1978,
									"end": 2000,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "18"
								},
								{
									"begin": 1946,
									"end": 2010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "tag",
									"source": 20,
									"value": "43"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1891,
									"end": 2020,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1324,
									"end": 2027,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "tag",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "C0"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "1438"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "691"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "687"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 6693,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7ce187d1f04b1e8f5719844d3f5b1930afc963c9d59f495a4f35a92b35082f264736f6c63430008140033",
									".code": [
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "C31C9C07"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "C31C9C07"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "C45A0155"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "DF2AB5BB"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "E9CBAFB0"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "tag",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "12210E8A"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "2384463B"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "49404B7C"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "4AA4A4FC"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 687,
											"end": 692,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 673,
											"end": 692,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 692,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 673,
											"end": 683,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 673,
											"end": 692,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 692,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 673,
											"end": 692,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 665,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "tag",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 797,
											"end": 6693,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1640,
											"end": 1800,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1640,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1640,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1640,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 1800,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1640,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 1800,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "tag",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "tag",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 5652,
											"end": 6690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "tag",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 5652,
											"end": 6690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "tag",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 450,
											"end": 489,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 450,
											"end": 489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 450,
											"end": 489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "tag",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "tag",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 973,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "tag",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 973,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "tag",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 358,
											"end": 399,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 358,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1200,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1200,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "tag",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "49"
										},
										{
											"begin": 1616,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "tag",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 1616,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 1640,
											"end": 1800,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1640,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1722,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1726,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1793,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1697,
											"end": 1793,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1728,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 1728,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1728,
											"end": 1793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1728,
											"end": 1793,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1728,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1793,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1697,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 1800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "tag",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5752,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5797,
											"end": 5803,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5797,
											"end": 5810,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5810,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5797,
											"end": 5810,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5820,
											"end": 5826,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 5846,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 5851,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 5851,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5840,
											"end": 5851,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFF"
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5768,
											"end": 5853,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5853,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5853,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5864,
											"end": 5883,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 5928,
											"end": 5935,
											"name": "PUSHIMMUTABLE",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 5937,
											"end": 5944,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5901,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 5901,
											"end": 5945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5901,
											"end": 5945,
											"name": "tag",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 5901,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5864,
											"end": 5946,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5864,
											"end": 5946,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6223,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "PUSH",
											"source": 19,
											"value": "490E6CBC"
										},
										{
											"begin": 6252,
											"end": 6256,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6272,
											"end": 6286,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 6272,
											"end": 6286,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6272,
											"end": 6286,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6301,
											"end": 6307,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6301,
											"end": 6315,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 6301,
											"end": 6315,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6301,
											"end": 6315,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6409,
											"end": 6415,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 6409,
											"end": 6423,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 6409,
											"end": 6423,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6409,
											"end": 6423,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6455,
											"end": 6461,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 6455,
											"end": 6469,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 6455,
											"end": 6469,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6455,
											"end": 6469,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6499,
											"end": 6509,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6541,
											"end": 6548,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6581,
											"end": 6587,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 6581,
											"end": 6592,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 6581,
											"end": 6592,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6581,
											"end": 6592,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFF"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6625,
											"end": 6631,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 6625,
											"end": 6636,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 6625,
											"end": 6636,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6625,
											"end": 6636,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFF"
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6656,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "59"
										},
										{
											"begin": 6330,
											"end": 6671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "tag",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6671,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "61"
										},
										{
											"begin": 6219,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "tag",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "EXTCODESIZE",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "tag",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "tag",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6219,
											"end": 6682,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5707,
											"end": 6690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5707,
											"end": 6690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5652,
											"end": 6690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 855,
											"end": 875,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 910,
											"end": 914,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 878,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 878,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 878,
											"end": 916,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 878,
											"end": 916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 855,
											"end": 916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 855,
											"end": 916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 950,
											"end": 963,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 934,
											"end": 946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 934,
											"end": 963,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 934,
											"end": 963,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 926,
											"end": 986,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 986,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 926,
											"end": 986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 986,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 926,
											"end": 986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 926,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 926,
											"end": 986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 986,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 926,
											"end": 986,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 926,
											"end": 986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1017,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1149,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 997,
											"end": 1149,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 1033,
											"end": 1055,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1055,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1055,
											"name": "PUSH",
											"source": 12,
											"value": "2E1A7D4D"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1033,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1114,
											"end": 1123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1137,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1083,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1138,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1083,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1149,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 997,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 845,
											"end": 1155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 450,
											"end": 489,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 450,
											"end": 489,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 450,
											"end": 489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "tag",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSHIMMUTABLE",
											"source": 19,
											"value": "1438"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 358,
											"end": 399,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "687"
										},
										{
											"begin": 358,
											"end": 399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 358,
											"end": 399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1376,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1364,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1364,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1364,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1436,
											"end": 1449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1420,
											"end": 1432,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1412,
											"end": 1472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1412,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1589,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1483,
											"end": 1589,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1547,
											"end": 1552,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1519,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1578,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1519,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1589,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1483,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "tag",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1810,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1806,
											"end": 1810,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1795,
											"end": 1832,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1795,
											"end": 1832,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1795,
											"end": 1832,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1795,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "93"
										},
										{
											"begin": 1795,
											"end": 1832,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1795,
											"end": 1832,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1795,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 1795,
											"end": 1832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1795,
											"end": 1832,
											"name": "tag",
											"source": 19,
											"value": "93"
										},
										{
											"begin": 1795,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1760,
											"end": 1832,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1760,
											"end": 1832,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1843,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 1877,
											"end": 1884,
											"name": "PUSHIMMUTABLE",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 1886,
											"end": 1893,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1886,
											"end": 1901,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1886,
											"end": 1901,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1886,
											"end": 1901,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 1843,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1843,
											"end": 1902,
											"name": "tag",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 1843,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1843,
											"end": 1902,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1915,
											"end": 1929,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1932,
											"end": 1947,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1932,
											"end": 1947,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1932,
											"end": 1947,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1932,
											"end": 1954,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1954,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1932,
											"end": 1954,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1915,
											"end": 1954,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1915,
											"end": 1954,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1965,
											"end": 1979,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1989,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1982,
											"end": 1997,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1982,
											"end": 1997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1982,
											"end": 1997,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1965,
											"end": 2004,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1965,
											"end": 2004,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2017,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 2044,
											"end": 2050,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2060,
											"end": 2070,
											"name": "PUSHIMMUTABLE",
											"source": 19,
											"value": "1438"
										},
										{
											"begin": 2073,
											"end": 2080,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2073,
											"end": 2088,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2017,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 2017,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2017,
											"end": 2089,
											"name": "tag",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 2017,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2100,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 2127,
											"end": 2133,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2143,
											"end": 2153,
											"name": "PUSHIMMUTABLE",
											"source": 19,
											"value": "1438"
										},
										{
											"begin": 2156,
											"end": 2163,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2156,
											"end": 2171,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2171,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2156,
											"end": 2171,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2100,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 2100,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2100,
											"end": 2172,
											"name": "tag",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 2100,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2316,
											"end": 2323,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2333,
											"end": 2337,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 2297,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2297,
											"end": 2338,
											"name": "tag",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2297,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2276,
											"end": 2338,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2276,
											"end": 2338,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 2389,
											"end": 2396,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 2370,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 2370,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "tag",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2349,
											"end": 2411,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2349,
											"end": 2411,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2548,
											"name": "PUSHIMMUTABLE",
											"source": 19,
											"value": "1438"
										},
										{
											"begin": 2538,
											"end": 2565,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2538,
											"end": 2565,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 2565,
											"name": "PUSH",
											"source": 19,
											"value": "414BF389"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2651,
											"end": 2657,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2690,
											"end": 2696,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2724,
											"end": 2731,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 2724,
											"end": 2740,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 2724,
											"end": 2740,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2724,
											"end": 2740,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFF"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2782,
											"end": 2786,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "TIMESTAMP",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 2868,
											"end": 2883,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2883,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2868,
											"end": 2883,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2924,
											"end": 2934,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2976,
											"end": 2977,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2584,
											"end": 2997,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "104"
										},
										{
											"begin": 2538,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "tag",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "tag",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "107"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 2538,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "tag",
											"source": 19,
											"value": "107"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2504,
											"end": 3012,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2504,
											"end": 3012,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3150,
											"name": "PUSHIMMUTABLE",
											"source": 19,
											"value": "1438"
										},
										{
											"begin": 3140,
											"end": 3167,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3167,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3167,
											"name": "PUSH",
											"source": 19,
											"value": "414BF389"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3253,
											"end": 3259,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3326,
											"end": 3333,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 3326,
											"end": 3342,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 3326,
											"end": 3342,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3326,
											"end": 3342,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFF"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3422,
											"end": 3437,
											"name": "TIMESTAMP",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 3470,
											"end": 3485,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3485,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3470,
											"end": 3485,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3526,
											"end": 3536,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3578,
											"end": 3579,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3599,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "104"
										},
										{
											"begin": 3140,
											"end": 3614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "tag",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "110"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "tag",
											"source": 19,
											"value": "110"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 3140,
											"end": 3614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "tag",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 3140,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3106,
											"end": 3614,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3106,
											"end": 3614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3730,
											"end": 3749,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 3771,
											"end": 3778,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3788,
											"end": 3792,
											"name": "DUP14",
											"source": 19
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 3752,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3752,
											"end": 3793,
											"name": "tag",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 3752,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3730,
											"end": 3793,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3730,
											"end": 3793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 3845,
											"end": 3852,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3862,
											"end": 3866,
											"name": "DUP14",
											"source": 19
										},
										{
											"begin": 3826,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 3826,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3826,
											"end": 3867,
											"name": "tag",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 3826,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3804,
											"end": 3867,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3804,
											"end": 3867,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 3907,
											"end": 3913,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 3880,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 3942,
											"name": "tag",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 3880,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 3980,
											"end": 3986,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 3996,
											"end": 4000,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 4003,
											"end": 4014,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3953,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 3953,
											"end": 4015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "tag",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4043,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4032,
											"end": 4047,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 4028,
											"end": 4100,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4028,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 4028,
											"end": 4100,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 4076,
											"end": 4086,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 4049,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4049,
											"end": 4100,
											"name": "tag",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 4049,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4028,
											"end": 4100,
											"name": "tag",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 4028,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4129,
											"end": 4130,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4115,
											"end": 4126,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 4111,
											"end": 4183,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4111,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 4111,
											"end": 4183,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4132,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4152,
											"end": 4156,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 4159,
											"end": 4169,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 4171,
											"end": 4182,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 4132,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4132,
											"end": 4183,
											"name": "tag",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 4132,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4111,
											"end": 4183,
											"name": "tag",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 4111,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4260,
											"end": 4271,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4247,
											"end": 4257,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4247,
											"end": 4271,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 4243,
											"end": 4501,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4243,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 4243,
											"end": 4501,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4288,
											"end": 4303,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 4325,
											"end": 4335,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4337,
											"end": 4348,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 4306,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4306,
											"end": 4349,
											"name": "tag",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 4306,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4288,
											"end": 4349,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4288,
											"end": 4349,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "124"
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 4409,
											"end": 4413,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 4416,
											"end": 4423,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 4366,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4424,
											"name": "tag",
											"source": 19,
											"value": "124"
										},
										{
											"begin": 4366,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4439,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "125"
										},
										{
											"begin": 4443,
											"end": 4449,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 4459,
											"end": 4463,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP13",
											"source": 19
										},
										{
											"begin": 4466,
											"end": 4479,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4466,
											"end": 4479,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4466,
											"end": 4479,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4481,
											"end": 4488,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4439,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 4439,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4439,
											"end": 4489,
											"name": "tag",
											"source": 19,
											"value": "125"
										},
										{
											"begin": 4439,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4273,
											"end": 4501,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4243,
											"end": 4501,
											"name": "tag",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 4243,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4515,
											"end": 4539,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 4511,
											"end": 4767,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4511,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 4511,
											"end": 4767,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4556,
											"end": 4571,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "127"
										},
										{
											"begin": 4593,
											"end": 4603,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4574,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 4574,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4574,
											"end": 4617,
											"name": "tag",
											"source": 19,
											"value": "127"
										},
										{
											"begin": 4574,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4556,
											"end": 4617,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4556,
											"end": 4617,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4632,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 4682,
											"end": 4689,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 4632,
											"end": 4690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4632,
											"end": 4690,
											"name": "tag",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 4632,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4705,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 4709,
											"end": 4715,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4725,
											"end": 4729,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 4732,
											"end": 4739,
											"name": "DUP13",
											"source": 19
										},
										{
											"begin": 4732,
											"end": 4745,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4732,
											"end": 4745,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4732,
											"end": 4745,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4747,
											"end": 4754,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4705,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 4705,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4705,
											"end": 4755,
											"name": "tag",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 4705,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4541,
											"end": 4767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4511,
											"end": 4767,
											"name": "tag",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 4511,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1749,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1749,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1749,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1749,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1749,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1749,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1749,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1749,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1749,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1616,
											"end": 4774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2370,
											"end": 2535,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 2370,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2442,
											"end": 2454,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2467,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2467,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2475,
											"end": 2480,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "131"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 2482,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "tag",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "tag",
											"source": 18,
											"value": "131"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "tag",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 2460,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "tag",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 2505,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "tag",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "tag",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 2505,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2431,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2370,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2370,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2370,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1305,
											"end": 1754,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1305,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1389,
											"end": 1401,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1437,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1434,
											"end": 1444,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1444,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1434,
											"end": 1444,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1424,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1455,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1604,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1611,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1611,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1611,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1616,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1623,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1623,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1623,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1625,
											"end": 1628,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 1590,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1633,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1580,
											"end": 1634,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1580,
											"end": 1634,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1580,
											"end": 1634,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1580,
											"end": 1634,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1634,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1580,
											"end": 1634,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 241,
											"end": 307,
											"name": "PUSH",
											"source": 17,
											"value": "E34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54"
										},
										{
											"begin": 1652,
											"end": 1671,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1671,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 1496,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1685,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1473,
											"end": 1695,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1473,
											"end": 1695,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1473,
											"end": 1695,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1473,
											"end": 1695,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1473,
											"end": 1695,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1455,
											"end": 1695,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1455,
											"end": 1695,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1744,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1728,
											"end": 1745,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1745,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 1705,
											"end": 1747,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1705,
											"end": 1747,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1403,
											"end": 1754,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1305,
											"end": 1754,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1305,
											"end": 1754,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1305,
											"end": 1754,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1305,
											"end": 1754,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1305,
											"end": 1754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "tag",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1356,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 18,
											"value": "A9059CBB"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 1371,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "tag",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 1360,
											"end": 1431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1465,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 1481,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "tag",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "tag",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 1441,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1211,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1190,
											"end": 1469,
											"name": "tag",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 1190,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1314,
											"end": 1333,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 1398,
											"end": 1405,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 1414,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1371,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1371,
											"end": 1415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1371,
											"end": 1415,
											"name": "tag",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 1371,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1349,
											"end": 1416,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1349,
											"end": 1416,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1456,
											"end": 1460,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1434,
											"end": 1461,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1461,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1434,
											"end": 1444,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1434,
											"end": 1461,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1461,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1434,
											"end": 1461,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "tag",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1190,
											"end": 1469,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1190,
											"end": 1469,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1190,
											"end": 1469,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1190,
											"end": 1469,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1190,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 435,
											"end": 546,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 435,
											"end": 546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 493,
											"end": 502,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 538,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 527,
											"end": 528,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 527,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 527,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 527,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 527,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 527,
											"end": 532,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 523,
											"end": 532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 523,
											"end": 532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 522,
											"end": 538,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 522,
											"end": 538,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 514,
											"end": 539,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 514,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 435,
											"end": 546,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 435,
											"end": 546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 435,
											"end": 546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 435,
											"end": 546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 435,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2690,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1991,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2143,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 2129,
											"end": 2143,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2129,
											"end": 2143,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2134,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2143,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2129,
											"end": 2143,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2143,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2177,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2177,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 2129,
											"end": 2177,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2172,
											"end": 2177,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2147,
											"end": 2168,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 2147,
											"end": 2177,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2147,
											"end": 2177,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2177,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 2129,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2125,
											"end": 2684,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2125,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 2125,
											"end": 2684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "PUSH",
											"source": 12,
											"value": "D0E30DB0"
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2343,
											"end": 2348,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2309,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2309,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2125,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2125,
											"end": 2684,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2125,
											"end": 2684,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 2125,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2391,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2392,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2370,
											"end": 2392,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2375,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2392,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2370,
											"end": 2392,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2392,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 2366,
											"end": 2684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 2527,
											"end": 2532,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2550,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 2499,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2551,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 2499,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2366,
											"end": 2684,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2684,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 2366,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 2642,
											"end": 2647,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2649,
											"end": 2654,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2667,
											"end": 2672,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2610,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2673,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 2610,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2684,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2366,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2125,
											"end": 2684,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2125,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1991,
											"end": 2690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1991,
											"end": 2690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1991,
											"end": 2690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1991,
											"end": 2690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1991,
											"end": 2690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 821,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 710,
											"end": 821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 768,
											"end": 777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 806,
											"end": 807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 802,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 802,
											"end": 807,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 802,
											"end": 807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 802,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 802,
											"end": 807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 802,
											"end": 807,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 802,
											"end": 807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 798,
											"end": 807,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 798,
											"end": 807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 797,
											"end": 813,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 797,
											"end": 813,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 789,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 814,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 789,
											"end": 814,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 821,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 710,
											"end": 821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 710,
											"end": 821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 710,
											"end": 821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 710,
											"end": 821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "205"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 18,
											"value": "205"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "210"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "211"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 18,
											"value": "211"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 18,
											"value": "210"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "213"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 18,
											"value": "213"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 182,
											"end": 341,
											"name": "tag",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 182,
											"end": 341,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 322,
											"end": 333,
											"name": "PUSH",
											"source": 20,
											"value": "4E6F742057455448390000000000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 299,
											"end": 334,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 182,
											"end": 341,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 182,
											"end": 341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 347,
											"end": 712,
											"name": "tag",
											"source": 20,
											"value": "217"
										},
										{
											"begin": 347,
											"end": 712,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 489,
											"end": 492,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 574,
											"end": 575,
											"name": "PUSH",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 510,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 510,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 510,
											"end": 576,
											"name": "tag",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 510,
											"end": 576,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 503,
											"end": 576,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 503,
											"end": 576,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 585,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 674,
											"end": 677,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 585,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 585,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 585,
											"end": 678,
											"name": "tag",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 585,
											"end": 678,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 703,
											"end": 705,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 701,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 694,
											"end": 706,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 687,
											"end": 706,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 687,
											"end": 706,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 347,
											"end": 712,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 347,
											"end": 712,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 347,
											"end": 712,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 347,
											"end": 712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 718,
											"end": 1137,
											"name": "tag",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 718,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 884,
											"end": 888,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 924,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 907,
											"end": 925,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 899,
											"end": 925,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 899,
											"end": 925,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 971,
											"end": 980,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 965,
											"end": 969,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 961,
											"end": 981,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 957,
											"end": 958,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 942,
											"end": 959,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 935,
											"end": 982,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 999,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 1125,
											"end": 1129,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 999,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "217"
										},
										{
											"begin": 999,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 999,
											"end": 1130,
											"name": "tag",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 999,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 991,
											"end": 1130,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 991,
											"end": 1130,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 718,
											"end": 1137,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 718,
											"end": 1137,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 718,
											"end": 1137,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 718,
											"end": 1137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1218,
											"name": "tag",
											"source": 20,
											"value": "218"
										},
										{
											"begin": 1143,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1211,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1212,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1193,
											"end": 1212,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1193,
											"end": 1212,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1218,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1224,
											"end": 1341,
											"name": "tag",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 1224,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1347,
											"end": 1464,
											"name": "tag",
											"source": 20,
											"value": "220"
										},
										{
											"begin": 1347,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1470,
											"end": 1587,
											"name": "tag",
											"source": 20,
											"value": "221"
										},
										{
											"begin": 1470,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1569,
											"end": 1581,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1593,
											"end": 1695,
											"name": "tag",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 1593,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1687,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1678,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1669,
											"end": 1674,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1665,
											"end": 1679,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1661,
											"end": 1689,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1651,
											"end": 1689,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1651,
											"end": 1689,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1593,
											"end": 1695,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1593,
											"end": 1695,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1593,
											"end": 1695,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1593,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1701,
											"end": 1881,
											"name": "tag",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 1701,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1749,
											"end": 1826,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1827,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1846,
											"end": 1850,
											"name": "PUSH",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1836,
											"end": 1851,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1870,
											"end": 1874,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1875,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1887,
											"end": 2168,
											"name": "tag",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 1887,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1970,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "306"
										},
										{
											"begin": 1992,
											"end": 1996,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1970,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 1970,
											"end": 1997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1970,
											"end": 1997,
											"name": "tag",
											"source": 20,
											"value": "306"
										},
										{
											"begin": 1970,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2088,
											"end": 2098,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2085,
											"end": 2107,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2062,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2049,
											"end": 2083,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 2046,
											"end": 2108,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 2043,
											"end": 2131,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2043,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 2043,
											"end": 2131,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2111,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "308"
										},
										{
											"begin": 2111,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 2111,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2111,
											"end": 2129,
											"name": "tag",
											"source": 20,
											"value": "308"
										},
										{
											"begin": 2111,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2043,
											"end": 2131,
											"name": "tag",
											"source": 20,
											"value": "307"
										},
										{
											"begin": 2043,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2151,
											"end": 2161,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2162,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1930,
											"end": 2168,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1887,
											"end": 2168,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1887,
											"end": 2168,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1887,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2174,
											"end": 2303,
											"name": "tag",
											"source": 20,
											"value": "224"
										},
										{
											"begin": 2174,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 2235,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "218"
										},
										{
											"begin": 2235,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2235,
											"end": 2255,
											"name": "tag",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 2235,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2225,
											"end": 2255,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2225,
											"end": 2255,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2264,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "311"
										},
										{
											"begin": 2292,
											"end": 2296,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2264,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "223"
										},
										{
											"begin": 2264,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2264,
											"end": 2297,
											"name": "tag",
											"source": 20,
											"value": "311"
										},
										{
											"begin": 2264,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2174,
											"end": 2303,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2174,
											"end": 2303,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2174,
											"end": 2303,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2174,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2558,
											"name": "tag",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 2432,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2551,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2502,
											"end": 2507,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2498,
											"end": 2552,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2487,
											"end": 2552,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2487,
											"end": 2552,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2558,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2558,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2558,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2432,
											"end": 2558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2564,
											"end": 2660,
											"name": "tag",
											"source": 20,
											"value": "227"
										},
										{
											"begin": 2564,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2601,
											"end": 2608,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 2648,
											"end": 2653,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 2630,
											"end": 2654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "tag",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 2630,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2619,
											"end": 2654,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2619,
											"end": 2654,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2564,
											"end": 2660,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2564,
											"end": 2660,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2564,
											"end": 2660,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2564,
											"end": 2660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2666,
											"end": 2788,
											"name": "tag",
											"source": 20,
											"value": "228"
										},
										{
											"begin": 2666,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "317"
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "227"
										},
										{
											"begin": 2739,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "tag",
											"source": 20,
											"value": "317"
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2732,
											"end": 2737,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 2719,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "318"
										},
										{
											"begin": 2719,
											"end": 2782,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2768,
											"end": 2780,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2719,
											"end": 2782,
											"name": "tag",
											"source": 20,
											"value": "318"
										},
										{
											"begin": 2719,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2666,
											"end": 2788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2666,
											"end": 2788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2794,
											"end": 2933,
											"name": "tag",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 2794,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2840,
											"end": 2845,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2865,
											"end": 2885,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 2921,
											"end": 2926,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "228"
										},
										{
											"begin": 2894,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "tag",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2794,
											"end": 2933,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2794,
											"end": 2933,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2794,
											"end": 2933,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2794,
											"end": 2933,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2794,
											"end": 2933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 3030,
											"name": "tag",
											"source": 20,
											"value": "230"
										},
										{
											"begin": 2939,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3023,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFF"
										},
										{
											"begin": 3008,
											"end": 3013,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2993,
											"end": 3024,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2993,
											"end": 3024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 3030,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 3030,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 3030,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2939,
											"end": 3030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3036,
											"end": 3156,
											"name": "tag",
											"source": 20,
											"value": "231"
										},
										{
											"begin": 3036,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "230"
										},
										{
											"begin": 3108,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "tag",
											"source": 20,
											"value": "323"
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3101,
											"end": 3106,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3098,
											"end": 3132,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 3088,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 3088,
											"end": 3150,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3146,
											"end": 3147,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3088,
											"end": 3150,
											"name": "tag",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 3088,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3036,
											"end": 3156,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3036,
											"end": 3156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3162,
											"end": 3299,
											"name": "tag",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 3162,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3207,
											"end": 3212,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3232,
											"end": 3252,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 3223,
											"end": 3252,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3223,
											"end": 3252,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3261,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 3287,
											"end": 3292,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3261,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "231"
										},
										{
											"begin": 3261,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3261,
											"end": 3293,
											"name": "tag",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 3261,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3162,
											"end": 3299,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3162,
											"end": 3299,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3162,
											"end": 3299,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3162,
											"end": 3299,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3162,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3305,
											"end": 3382,
											"name": "tag",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 3305,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3342,
											"end": 3349,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3376,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3305,
											"end": 3382,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3305,
											"end": 3382,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3305,
											"end": 3382,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3305,
											"end": 3382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3388,
											"end": 3510,
											"name": "tag",
											"source": 20,
											"value": "234"
										},
										{
											"begin": 3388,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3461,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 3479,
											"end": 3484,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3461,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 3461,
											"end": 3485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3461,
											"end": 3485,
											"name": "tag",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 3461,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3454,
											"end": 3459,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3451,
											"end": 3486,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 3441,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 3441,
											"end": 3504,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3441,
											"end": 3504,
											"name": "tag",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 3441,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3388,
											"end": 3510,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3388,
											"end": 3510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3516,
											"end": 3655,
											"name": "tag",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 3516,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3562,
											"end": 3567,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3587,
											"end": 3607,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 3578,
											"end": 3607,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3578,
											"end": 3607,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "332"
										},
										{
											"begin": 3643,
											"end": 3648,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "234"
										},
										{
											"begin": 3616,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3649,
											"name": "tag",
											"source": 20,
											"value": "332"
										},
										{
											"begin": 3616,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3516,
											"end": 3655,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3516,
											"end": 3655,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3516,
											"end": 3655,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3516,
											"end": 3655,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3516,
											"end": 3655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 5090,
											"name": "tag",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 3697,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3775,
											"end": 3780,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 3807,
											"end": 3816,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3805,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 3817,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3794,
											"end": 3824,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3791,
											"end": 3908,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3791,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "334"
										},
										{
											"begin": 3791,
											"end": 3908,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3827,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "335"
										},
										{
											"begin": 3827,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "221"
										},
										{
											"begin": 3827,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3827,
											"end": 3906,
											"name": "tag",
											"source": 20,
											"value": "335"
										},
										{
											"begin": 3827,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3791,
											"end": 3908,
											"name": "tag",
											"source": 20,
											"value": "334"
										},
										{
											"begin": 3791,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "336"
										},
										{
											"begin": 3942,
											"end": 3946,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 3926,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "224"
										},
										{
											"begin": 3926,
											"end": 3947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3926,
											"end": 3947,
											"name": "tag",
											"source": 20,
											"value": "336"
										},
										{
											"begin": 3926,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3917,
											"end": 3947,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3917,
											"end": 3947,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "337"
										},
										{
											"begin": 4093,
											"end": 4096,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4084,
											"end": 4090,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4073,
											"end": 4082,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4069,
											"end": 4091,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4048,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 4048,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4048,
											"end": 4097,
											"name": "tag",
											"source": 20,
											"value": "337"
										},
										{
											"begin": 4048,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4041,
											"end": 4045,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4039,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4030,
											"end": 4046,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4023,
											"end": 4098,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3957,
											"end": 4109,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4211,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "338"
										},
										{
											"begin": 4256,
											"end": 4259,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4247,
											"end": 4253,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4236,
											"end": 4245,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4232,
											"end": 4254,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4211,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 4211,
											"end": 4260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4211,
											"end": 4260,
											"name": "tag",
											"source": 20,
											"value": "338"
										},
										{
											"begin": 4211,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4204,
											"end": 4208,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4202,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4193,
											"end": 4209,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4186,
											"end": 4261,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4119,
											"end": 4272,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4372,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 4416,
											"end": 4419,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4407,
											"end": 4413,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4396,
											"end": 4405,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4392,
											"end": 4414,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4372,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 4372,
											"end": 4420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4372,
											"end": 4420,
											"name": "tag",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 4372,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4365,
											"end": 4369,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4358,
											"end": 4363,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4347,
											"end": 4421,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4282,
											"end": 4432,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 4535,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "340"
										},
										{
											"begin": 4580,
											"end": 4583,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4556,
											"end": 4578,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4535,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 4535,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4535,
											"end": 4584,
											"name": "tag",
											"source": 20,
											"value": "340"
										},
										{
											"begin": 4535,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4528,
											"end": 4532,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 4521,
											"end": 4526,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4517,
											"end": 4533,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4510,
											"end": 4585,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4442,
											"end": 4596,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 4700,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 4745,
											"end": 4748,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4725,
											"end": 4734,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4721,
											"end": 4743,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4700,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 4700,
											"end": 4749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4700,
											"end": 4749,
											"name": "tag",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 4700,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4693,
											"end": 4697,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 4686,
											"end": 4691,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4682,
											"end": 4698,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4675,
											"end": 4750,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4606,
											"end": 4761,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4820,
											"end": 4823,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 4862,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "342"
										},
										{
											"begin": 4906,
											"end": 4909,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4897,
											"end": 4903,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4886,
											"end": 4895,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4882,
											"end": 4904,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4862,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 4862,
											"end": 4910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4862,
											"end": 4910,
											"name": "tag",
											"source": 20,
											"value": "342"
										},
										{
											"begin": 4862,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4855,
											"end": 4859,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 4848,
											"end": 4853,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4844,
											"end": 4860,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4837,
											"end": 4911,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4771,
											"end": 4922,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4981,
											"end": 4984,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 5023,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "343"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5047,
											"end": 5056,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5023,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 5023,
											"end": 5071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5023,
											"end": 5071,
											"name": "tag",
											"source": 20,
											"value": "343"
										},
										{
											"begin": 5023,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5016,
											"end": 5020,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 5009,
											"end": 5014,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5005,
											"end": 5021,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4998,
											"end": 5072,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4932,
											"end": 5083,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 5090,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 5090,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 5090,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 5090,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 5090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5096,
											"end": 5484,
											"name": "tag",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 5096,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5184,
											"end": 5190,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5236,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 5221,
											"end": 5230,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5208,
											"end": 5231,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5237,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 5201,
											"end": 5321,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5201,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 5201,
											"end": 5321,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5240,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 5240,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 5240,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5240,
											"end": 5319,
											"name": "tag",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 5240,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5201,
											"end": 5321,
											"name": "tag",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 5201,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5360,
											"end": 5361,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5385,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 5459,
											"end": 5466,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5450,
											"end": 5456,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5435,
											"end": 5457,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5385,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "236"
										},
										{
											"begin": 5385,
											"end": 5467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5385,
											"end": 5467,
											"name": "tag",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 5385,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5375,
											"end": 5467,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5375,
											"end": 5467,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5331,
											"end": 5477,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5096,
											"end": 5484,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5096,
											"end": 5484,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5096,
											"end": 5484,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5096,
											"end": 5484,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5096,
											"end": 5484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5490,
											"end": 5964,
											"name": "tag",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 5490,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5572,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5615,
											"end": 5617,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5594,
											"end": 5601,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5590,
											"end": 5613,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5586,
											"end": 5618,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 5583,
											"end": 5702,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5583,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 5583,
											"end": 5702,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5621,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 5621,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 5621,
											"end": 5700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5621,
											"end": 5700,
											"name": "tag",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 5621,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5583,
											"end": 5702,
											"name": "tag",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 5583,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5741,
											"end": 5742,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 5811,
											"end": 5818,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5802,
											"end": 5808,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5791,
											"end": 5800,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 5787,
											"end": 5809,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5766,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 5766,
											"end": 5819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5766,
											"end": 5819,
											"name": "tag",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 5766,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5756,
											"end": 5819,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5756,
											"end": 5819,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5712,
											"end": 5829,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5868,
											"end": 5870,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5894,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 5939,
											"end": 5946,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5894,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 5894,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5894,
											"end": 5947,
											"name": "tag",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 5894,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5884,
											"end": 5947,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5884,
											"end": 5947,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5839,
											"end": 5957,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5490,
											"end": 5964,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5490,
											"end": 5964,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5490,
											"end": 5964,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5490,
											"end": 5964,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5490,
											"end": 5964,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5490,
											"end": 5964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5970,
											"end": 6088,
											"name": "tag",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 5970,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6057,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 6075,
											"end": 6080,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6057,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "227"
										},
										{
											"begin": 6057,
											"end": 6081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6057,
											"end": 6081,
											"name": "tag",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 6057,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6052,
											"end": 6055,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6045,
											"end": 6082,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5970,
											"end": 6088,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5970,
											"end": 6088,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5970,
											"end": 6088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "tag",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6187,
											"end": 6191,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6227,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6214,
											"end": 6223,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6202,
											"end": 6228,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6202,
											"end": 6228,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6238,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 6306,
											"end": 6307,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6282,
											"end": 6288,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6238,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 6238,
											"end": 6309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6238,
											"end": 6309,
											"name": "tag",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 6238,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6094,
											"end": 6316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6322,
											"end": 6382,
											"name": "tag",
											"source": 20,
											"value": "238"
										},
										{
											"begin": 6322,
											"end": 6382,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6350,
											"end": 6353,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6371,
											"end": 6376,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6364,
											"end": 6376,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6364,
											"end": 6376,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6322,
											"end": 6382,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6322,
											"end": 6382,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6322,
											"end": 6382,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6322,
											"end": 6382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6388,
											"end": 6530,
											"name": "tag",
											"source": 20,
											"value": "239"
										},
										{
											"begin": 6388,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 6489,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 6498,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 6516,
											"end": 6521,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6498,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 6498,
											"end": 6522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6498,
											"end": 6522,
											"name": "tag",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 6498,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6489,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "238"
										},
										{
											"begin": 6489,
											"end": 6523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6489,
											"end": 6523,
											"name": "tag",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 6489,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 6471,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6524,
											"name": "tag",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 6471,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6458,
											"end": 6524,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6458,
											"end": 6524,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6388,
											"end": 6530,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6388,
											"end": 6530,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6388,
											"end": 6530,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6388,
											"end": 6530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6536,
											"end": 6662,
											"name": "tag",
											"source": 20,
											"value": "240"
										},
										{
											"begin": 6536,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6586,
											"end": 6595,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6619,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 6650,
											"end": 6655,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6619,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "239"
										},
										{
											"begin": 6619,
											"end": 6656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6619,
											"end": 6656,
											"name": "tag",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 6619,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6606,
											"end": 6656,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6606,
											"end": 6656,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6536,
											"end": 6662,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6536,
											"end": 6662,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6536,
											"end": 6662,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6536,
											"end": 6662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6668,
											"end": 6814,
											"name": "tag",
											"source": 20,
											"value": "241"
										},
										{
											"begin": 6668,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6738,
											"end": 6747,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 6802,
											"end": 6807,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6771,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "240"
										},
										{
											"begin": 6771,
											"end": 6808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6771,
											"end": 6808,
											"name": "tag",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 6771,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6758,
											"end": 6808,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6758,
											"end": 6808,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6668,
											"end": 6814,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6668,
											"end": 6814,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6668,
											"end": 6814,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6668,
											"end": 6814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6820,
											"end": 6991,
											"name": "tag",
											"source": 20,
											"value": "242"
										},
										{
											"begin": 6820,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6927,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 6978,
											"end": 6983,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6927,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "241"
										},
										{
											"begin": 6927,
											"end": 6984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6927,
											"end": 6984,
											"name": "tag",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 6927,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6922,
											"end": 6925,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6915,
											"end": 6985,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6820,
											"end": 6991,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6820,
											"end": 6991,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6820,
											"end": 6991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6997,
											"end": 7259,
											"name": "tag",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 6997,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7110,
											"end": 7114,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7148,
											"end": 7150,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7146,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7133,
											"end": 7151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7125,
											"end": 7151,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7125,
											"end": 7151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7161,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "369"
										},
										{
											"begin": 7249,
											"end": 7250,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7247,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7234,
											"end": 7251,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7225,
											"end": 7231,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7161,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "242"
										},
										{
											"begin": 7161,
											"end": 7252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7161,
											"end": 7252,
											"name": "tag",
											"source": 20,
											"value": "369"
										},
										{
											"begin": 7161,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6997,
											"end": 7259,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6997,
											"end": 7259,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6997,
											"end": 7259,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6997,
											"end": 7259,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6997,
											"end": 7259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7265,
											"end": 7884,
											"name": "tag",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 7265,
											"end": 7884,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7350,
											"end": 7356,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7409,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7386,
											"end": 7393,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7382,
											"end": 7405,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 7378,
											"end": 7410,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 7375,
											"end": 7494,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7375,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 7375,
											"end": 7494,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7413,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "372"
										},
										{
											"begin": 7413,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 7413,
											"end": 7492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7413,
											"end": 7492,
											"name": "tag",
											"source": 20,
											"value": "372"
										},
										{
											"begin": 7413,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7375,
											"end": 7494,
											"name": "tag",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 7375,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7533,
											"end": 7534,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7594,
											"end": 7600,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7583,
											"end": 7592,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7579,
											"end": 7601,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7558,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 7558,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7558,
											"end": 7611,
											"name": "tag",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 7558,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7548,
											"end": 7611,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7548,
											"end": 7611,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7504,
											"end": 7621,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7660,
											"end": 7662,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 7686,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 7731,
											"end": 7738,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7722,
											"end": 7728,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7711,
											"end": 7720,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7707,
											"end": 7729,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7686,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 7686,
											"end": 7739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7686,
											"end": 7739,
											"name": "tag",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 7686,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7676,
											"end": 7739,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7676,
											"end": 7739,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7631,
											"end": 7749,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7788,
											"end": 7790,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 7814,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 7859,
											"end": 7866,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7850,
											"end": 7856,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7839,
											"end": 7848,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7835,
											"end": 7857,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7814,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 7814,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7814,
											"end": 7867,
											"name": "tag",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 7814,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7804,
											"end": 7867,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7804,
											"end": 7867,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7759,
											"end": 7877,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7265,
											"end": 7884,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7265,
											"end": 7884,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7265,
											"end": 7884,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7265,
											"end": 7884,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7265,
											"end": 7884,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7265,
											"end": 7884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7890,
											"end": 8007,
											"name": "tag",
											"source": 20,
											"value": "243"
										},
										{
											"begin": 7890,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7996,
											"end": 7997,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7989,
											"end": 8001,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8013,
											"end": 8130,
											"name": "tag",
											"source": 20,
											"value": "244"
										},
										{
											"begin": 8013,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8122,
											"end": 8123,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8120,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8136,
											"end": 8253,
											"name": "tag",
											"source": 20,
											"value": "245"
										},
										{
											"begin": 8136,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8245,
											"end": 8246,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8235,
											"end": 8247,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8272,
											"end": 8824,
											"name": "tag",
											"source": 20,
											"value": "246"
										},
										{
											"begin": 8272,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8329,
											"end": 8337,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8345,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8389,
											"end": 8392,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 8374,
											"end": 8380,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8370,
											"end": 8387,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 8356,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 8356,
											"end": 8478,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8397,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "381"
										},
										{
											"begin": 8397,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "243"
										},
										{
											"begin": 8397,
											"end": 8476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8397,
											"end": 8476,
											"name": "tag",
											"source": 20,
											"value": "381"
										},
										{
											"begin": 8397,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8356,
											"end": 8478,
											"name": "tag",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 8356,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8510,
											"end": 8516,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8497,
											"end": 8517,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8540,
											"end": 8558,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8532,
											"end": 8538,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8529,
											"end": 8559,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 8526,
											"end": 8643,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8526,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 8526,
											"end": 8643,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8562,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 8562,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "244"
										},
										{
											"begin": 8562,
											"end": 8641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8562,
											"end": 8641,
											"name": "tag",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 8562,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8526,
											"end": 8643,
											"name": "tag",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 8526,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8676,
											"end": 8680,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8668,
											"end": 8674,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8664,
											"end": 8681,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8652,
											"end": 8681,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8652,
											"end": 8681,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8730,
											"end": 8733,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8722,
											"end": 8726,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8720,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8710,
											"end": 8727,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 8700,
											"end": 8708,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8693,
											"end": 8734,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8737,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 8737,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "245"
										},
										{
											"begin": 8737,
											"end": 8816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8737,
											"end": 8816,
											"name": "tag",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 8737,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "tag",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8272,
											"end": 8824,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8272,
											"end": 8824,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8272,
											"end": 8824,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8272,
											"end": 8824,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8272,
											"end": 8824,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8272,
											"end": 8824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8830,
											"end": 9647,
											"name": "tag",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 8830,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8918,
											"end": 8924,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8926,
											"end": 8932,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8934,
											"end": 8940,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8991,
											"end": 8993,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8979,
											"end": 8988,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 8970,
											"end": 8977,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 8966,
											"end": 8989,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8962,
											"end": 8994,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 8997,
											"end": 9076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "tag",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "tag",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9117,
											"end": 9118,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 9187,
											"end": 9194,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 9178,
											"end": 9184,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9167,
											"end": 9176,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 9163,
											"end": 9185,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 9142,
											"end": 9195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "tag",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9132,
											"end": 9195,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 9132,
											"end": 9195,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9088,
											"end": 9205,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9244,
											"end": 9246,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 9315,
											"end": 9322,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 9306,
											"end": 9312,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9295,
											"end": 9304,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 9291,
											"end": 9313,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9270,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 9270,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9270,
											"end": 9323,
											"name": "tag",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 9270,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9260,
											"end": 9323,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 9260,
											"end": 9323,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9215,
											"end": 9333,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9400,
											"end": 9402,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9389,
											"end": 9398,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9385,
											"end": 9403,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9372,
											"end": 9404,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9431,
											"end": 9449,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9423,
											"end": 9429,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9420,
											"end": 9450,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 9417,
											"end": 9534,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9417,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 9417,
											"end": 9534,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9453,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 9453,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "220"
										},
										{
											"begin": 9453,
											"end": 9532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9453,
											"end": 9532,
											"name": "tag",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 9453,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9417,
											"end": 9534,
											"name": "tag",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 9417,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9566,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 9622,
											"end": 9629,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 9613,
											"end": 9619,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9602,
											"end": 9611,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 9598,
											"end": 9620,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9566,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "246"
										},
										{
											"begin": 9566,
											"end": 9630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9566,
											"end": 9630,
											"name": "tag",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 9566,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9548,
											"end": 9630,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9548,
											"end": 9630,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9548,
											"end": 9630,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9548,
											"end": 9630,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9343,
											"end": 9640,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8830,
											"end": 9647,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8830,
											"end": 9647,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 8830,
											"end": 9647,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8830,
											"end": 9647,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 8830,
											"end": 9647,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8830,
											"end": 9647,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8830,
											"end": 9647,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8830,
											"end": 9647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9653,
											"end": 9761,
											"name": "tag",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 9653,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9730,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 9748,
											"end": 9753,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9730,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 9730,
											"end": 9754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9730,
											"end": 9754,
											"name": "tag",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 9730,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9725,
											"end": 9728,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9718,
											"end": 9755,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9653,
											"end": 9761,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9653,
											"end": 9761,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9653,
											"end": 9761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9767,
											"end": 9875,
											"name": "tag",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 9767,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9844,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "397"
										},
										{
											"begin": 9862,
											"end": 9867,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9844,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "227"
										},
										{
											"begin": 9844,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9844,
											"end": 9868,
											"name": "tag",
											"source": 20,
											"value": "397"
										},
										{
											"begin": 9844,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9839,
											"end": 9842,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9832,
											"end": 9869,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9767,
											"end": 9875,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9767,
											"end": 9875,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9767,
											"end": 9875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9881,
											"end": 9986,
											"name": "tag",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 9881,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9956,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "399"
										},
										{
											"begin": 9973,
											"end": 9978,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9956,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "230"
										},
										{
											"begin": 9956,
											"end": 9979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9956,
											"end": 9979,
											"name": "tag",
											"source": 20,
											"value": "399"
										},
										{
											"begin": 9956,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9951,
											"end": 9954,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9944,
											"end": 9980,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9881,
											"end": 9986,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9881,
											"end": 9986,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9881,
											"end": 9986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10056,
											"end": 10728,
											"name": "tag",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 10056,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10193,
											"end": 10197,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 10188,
											"end": 10191,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10184,
											"end": 10198,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10282,
											"end": 10286,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10280,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10271,
											"end": 10287,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10265,
											"end": 10288,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10301,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10353,
											"end": 10356,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10349,
											"end": 10363,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10335,
											"end": 10347,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10301,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 10301,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10301,
											"end": 10364,
											"name": "tag",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 10301,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10208,
											"end": 10374,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10458,
											"end": 10462,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10451,
											"end": 10456,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10447,
											"end": 10463,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10441,
											"end": 10464,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10477,
											"end": 10540,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "402"
										},
										{
											"begin": 10534,
											"end": 10538,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10529,
											"end": 10532,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10525,
											"end": 10539,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10511,
											"end": 10523,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10477,
											"end": 10540,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 10477,
											"end": 10540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10477,
											"end": 10540,
											"name": "tag",
											"source": 20,
											"value": "402"
										},
										{
											"begin": 10477,
											"end": 10540,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10384,
											"end": 10550,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10631,
											"end": 10635,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10624,
											"end": 10629,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10620,
											"end": 10636,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10614,
											"end": 10637,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10650,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 10705,
											"end": 10709,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10703,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 10696,
											"end": 10710,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10682,
											"end": 10694,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10650,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 10650,
											"end": 10711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10650,
											"end": 10711,
											"name": "tag",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 10650,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10560,
											"end": 10721,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10162,
											"end": 10728,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10056,
											"end": 10728,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10056,
											"end": 10728,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10056,
											"end": 10728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10814,
											"end": 12103,
											"name": "tag",
											"source": 20,
											"value": "251"
										},
										{
											"begin": 10814,
											"end": 12103,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10981,
											"end": 10987,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 10976,
											"end": 10979,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11073,
											"end": 11077,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11071,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11062,
											"end": 11078,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11056,
											"end": 11079,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 11092,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "405"
										},
										{
											"begin": 11149,
											"end": 11153,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11147,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11140,
											"end": 11154,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11126,
											"end": 11138,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11092,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 11092,
											"end": 11155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11092,
											"end": 11155,
											"name": "tag",
											"source": 20,
											"value": "405"
										},
										{
											"begin": 11092,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10998,
											"end": 11165,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11250,
											"end": 11254,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11248,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11239,
											"end": 11255,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11233,
											"end": 11256,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 11269,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 11326,
											"end": 11330,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11321,
											"end": 11324,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11317,
											"end": 11331,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11303,
											"end": 11315,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11269,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 11269,
											"end": 11332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11269,
											"end": 11332,
											"name": "tag",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 11269,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11175,
											"end": 11342,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11425,
											"end": 11429,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11418,
											"end": 11423,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11414,
											"end": 11430,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11408,
											"end": 11431,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 11444,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 11501,
											"end": 11505,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11496,
											"end": 11499,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11492,
											"end": 11506,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11478,
											"end": 11490,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11444,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 11444,
											"end": 11507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11444,
											"end": 11507,
											"name": "tag",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 11444,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11352,
											"end": 11517,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11602,
											"end": 11606,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 11595,
											"end": 11600,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11591,
											"end": 11607,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11585,
											"end": 11608,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 11621,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 11728,
											"end": 11732,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 11723,
											"end": 11726,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11719,
											"end": 11733,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11705,
											"end": 11717,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11621,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 11621,
											"end": 11734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11621,
											"end": 11734,
											"name": "tag",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 11621,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11527,
											"end": 11744,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11830,
											"end": 11834,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 11823,
											"end": 11828,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11819,
											"end": 11835,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11813,
											"end": 11836,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 11849,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 11904,
											"end": 11908,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 11899,
											"end": 11902,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11895,
											"end": 11909,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11881,
											"end": 11893,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11849,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 11849,
											"end": 11910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11849,
											"end": 11910,
											"name": "tag",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 11849,
											"end": 11910,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11754,
											"end": 11920,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12006,
											"end": 12010,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 11999,
											"end": 12004,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11995,
											"end": 12011,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11989,
											"end": 12012,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 12025,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "410"
										},
										{
											"begin": 12080,
											"end": 12084,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 12075,
											"end": 12078,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 12071,
											"end": 12085,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12057,
											"end": 12069,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12025,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 12025,
											"end": 12086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12025,
											"end": 12086,
											"name": "tag",
											"source": 20,
											"value": "410"
										},
										{
											"begin": 12025,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11930,
											"end": 12096,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10950,
											"end": 12103,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10814,
											"end": 12103,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10814,
											"end": 12103,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10814,
											"end": 12103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12109,
											"end": 12472,
											"name": "tag",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 12109,
											"end": 12472,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12272,
											"end": 12276,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12310,
											"end": 12313,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 12299,
											"end": 12308,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12295,
											"end": 12314,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12287,
											"end": 12314,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12287,
											"end": 12314,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12324,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 12462,
											"end": 12463,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12451,
											"end": 12460,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12447,
											"end": 12464,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12438,
											"end": 12444,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 12324,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "251"
										},
										{
											"begin": 12324,
											"end": 12465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12324,
											"end": 12465,
											"name": "tag",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 12324,
											"end": 12465,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12109,
											"end": 12472,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12109,
											"end": 12472,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12109,
											"end": 12472,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12109,
											"end": 12472,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12109,
											"end": 12472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12478,
											"end": 12596,
											"name": "tag",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 12478,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12565,
											"end": 12589,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "414"
										},
										{
											"begin": 12583,
											"end": 12588,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12565,
											"end": 12589,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 12565,
											"end": 12589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12565,
											"end": 12589,
											"name": "tag",
											"source": 20,
											"value": "414"
										},
										{
											"begin": 12565,
											"end": 12589,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12560,
											"end": 12563,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12553,
											"end": 12590,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12478,
											"end": 12596,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12478,
											"end": 12596,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12478,
											"end": 12596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12602,
											"end": 12700,
											"name": "tag",
											"source": 20,
											"value": "253"
										},
										{
											"begin": 12602,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12653,
											"end": 12659,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12687,
											"end": 12692,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12681,
											"end": 12693,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 12671,
											"end": 12693,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12671,
											"end": 12693,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12602,
											"end": 12700,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12602,
											"end": 12700,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12602,
											"end": 12700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12602,
											"end": 12700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12706,
											"end": 12874,
											"name": "tag",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 12706,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12789,
											"end": 12800,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12823,
											"end": 12829,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12818,
											"end": 12821,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12811,
											"end": 12830,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12863,
											"end": 12867,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12858,
											"end": 12861,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12854,
											"end": 12868,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12839,
											"end": 12868,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12839,
											"end": 12868,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12706,
											"end": 12874,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12706,
											"end": 12874,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12706,
											"end": 12874,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12706,
											"end": 12874,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12706,
											"end": 12874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12880,
											"end": 13126,
											"name": "tag",
											"source": 20,
											"value": "255"
										},
										{
											"begin": 12880,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12961,
											"end": 12962,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12971,
											"end": 13084,
											"name": "tag",
											"source": 20,
											"value": "418"
										},
										{
											"begin": 12971,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12985,
											"end": 12991,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12982,
											"end": 12983,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12979,
											"end": 12992,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 12971,
											"end": 13084,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 12971,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "420"
										},
										{
											"begin": 12971,
											"end": 13084,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 13070,
											"end": 13071,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 13065,
											"end": 13068,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13061,
											"end": 13072,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13055,
											"end": 13073,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 13051,
											"end": 13052,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13046,
											"end": 13049,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13042,
											"end": 13053,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13035,
											"end": 13074,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13007,
											"end": 13009,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13004,
											"end": 13005,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13000,
											"end": 13010,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12995,
											"end": 13010,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12995,
											"end": 13010,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12971,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "418"
										},
										{
											"begin": 12971,
											"end": 13084,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12971,
											"end": 13084,
											"name": "tag",
											"source": 20,
											"value": "420"
										},
										{
											"begin": 12971,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13118,
											"end": 13119,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13109,
											"end": 13115,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13104,
											"end": 13107,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13100,
											"end": 13116,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13093,
											"end": 13120,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12942,
											"end": 13126,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12880,
											"end": 13126,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12880,
											"end": 13126,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12880,
											"end": 13126,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12880,
											"end": 13126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13132,
											"end": 13505,
											"name": "tag",
											"source": 20,
											"value": "256"
										},
										{
											"begin": 13132,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13218,
											"end": 13221,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13246,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 13278,
											"end": 13283,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13246,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "253"
										},
										{
											"begin": 13246,
											"end": 13284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13246,
											"end": 13284,
											"name": "tag",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 13246,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13300,
											"end": 13370,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 13363,
											"end": 13369,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13358,
											"end": 13361,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13300,
											"end": 13370,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 13300,
											"end": 13370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13300,
											"end": 13370,
											"name": "tag",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 13300,
											"end": 13370,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13293,
											"end": 13370,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 13293,
											"end": 13370,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13379,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "424"
										},
										{
											"begin": 13437,
											"end": 13443,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13432,
											"end": 13435,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13425,
											"end": 13429,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13418,
											"end": 13423,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 13414,
											"end": 13430,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13379,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "255"
										},
										{
											"begin": 13379,
											"end": 13444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13379,
											"end": 13444,
											"name": "tag",
											"source": 20,
											"value": "424"
										},
										{
											"begin": 13379,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13469,
											"end": 13498,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "425"
										},
										{
											"begin": 13491,
											"end": 13497,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 13469,
											"end": 13498,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "222"
										},
										{
											"begin": 13469,
											"end": 13498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13469,
											"end": 13498,
											"name": "tag",
											"source": 20,
											"value": "425"
										},
										{
											"begin": 13469,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13464,
											"end": 13467,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13460,
											"end": 13499,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13453,
											"end": 13499,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13453,
											"end": 13499,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13222,
											"end": 13505,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13132,
											"end": 13505,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13132,
											"end": 13505,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13132,
											"end": 13505,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13132,
											"end": 13505,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13132,
											"end": 13505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13511,
											"end": 14151,
											"name": "tag",
											"source": 20,
											"value": "61"
										},
										{
											"begin": 13511,
											"end": 14151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13706,
											"end": 13710,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13747,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 13733,
											"end": 13742,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13729,
											"end": 13748,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13721,
											"end": 13748,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13721,
											"end": 13748,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13758,
											"end": 13829,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 13826,
											"end": 13827,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13815,
											"end": 13824,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13811,
											"end": 13828,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13802,
											"end": 13808,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 13758,
											"end": 13829,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 13758,
											"end": 13829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13758,
											"end": 13829,
											"name": "tag",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 13758,
											"end": 13829,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13839,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 13907,
											"end": 13909,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13896,
											"end": 13905,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13883,
											"end": 13889,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 13839,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 13839,
											"end": 13911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13839,
											"end": 13911,
											"name": "tag",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 13839,
											"end": 13911,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13921,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 13989,
											"end": 13991,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13978,
											"end": 13987,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13974,
											"end": 13992,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13965,
											"end": 13971,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13921,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 13921,
											"end": 13993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13921,
											"end": 13993,
											"name": "tag",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 13921,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14040,
											"end": 14049,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14034,
											"end": 14038,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14030,
											"end": 14050,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 14025,
											"end": 14027,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 14014,
											"end": 14023,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14010,
											"end": 14028,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14003,
											"end": 14051,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14068,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 14139,
											"end": 14143,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14130,
											"end": 14136,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 14068,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "256"
										},
										{
											"begin": 14068,
											"end": 14144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14068,
											"end": 14144,
											"name": "tag",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 14068,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14060,
											"end": 14144,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14060,
											"end": 14144,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13511,
											"end": 14151,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 13511,
											"end": 14151,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 13511,
											"end": 14151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13511,
											"end": 14151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13511,
											"end": 14151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13511,
											"end": 14151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13511,
											"end": 14151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13511,
											"end": 14151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14157,
											"end": 14300,
											"name": "tag",
											"source": 20,
											"value": "257"
										},
										{
											"begin": 14157,
											"end": 14300,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14214,
											"end": 14219,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14245,
											"end": 14251,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14239,
											"end": 14252,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 14230,
											"end": 14252,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14230,
											"end": 14252,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14261,
											"end": 14294,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 14288,
											"end": 14293,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14261,
											"end": 14294,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "234"
										},
										{
											"begin": 14261,
											"end": 14294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14261,
											"end": 14294,
											"name": "tag",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 14261,
											"end": 14294,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14157,
											"end": 14300,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14157,
											"end": 14300,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14157,
											"end": 14300,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14157,
											"end": 14300,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14157,
											"end": 14300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14306,
											"end": 14657,
											"name": "tag",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 14306,
											"end": 14657,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14376,
											"end": 14382,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14425,
											"end": 14427,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14422,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14404,
											"end": 14411,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 14400,
											"end": 14423,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 14396,
											"end": 14428,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 14393,
											"end": 14512,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 14393,
											"end": 14512,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 14393,
											"end": 14512,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14431,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 14431,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 14431,
											"end": 14510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14431,
											"end": 14510,
											"name": "tag",
											"source": 20,
											"value": "435"
										},
										{
											"begin": 14431,
											"end": 14510,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14393,
											"end": 14512,
											"name": "tag",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 14393,
											"end": 14512,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14551,
											"end": 14552,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14576,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 14632,
											"end": 14639,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 14623,
											"end": 14629,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14612,
											"end": 14621,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 14608,
											"end": 14630,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14576,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "257"
										},
										{
											"begin": 14576,
											"end": 14640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14576,
											"end": 14640,
											"name": "tag",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 14576,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14566,
											"end": 14640,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14566,
											"end": 14640,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14522,
											"end": 14650,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14306,
											"end": 14657,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14306,
											"end": 14657,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14306,
											"end": 14657,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14306,
											"end": 14657,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14306,
											"end": 14657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14663,
											"end": 14831,
											"name": "tag",
											"source": 20,
											"value": "258"
										},
										{
											"begin": 14663,
											"end": 14831,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14803,
											"end": 14823,
											"name": "PUSH",
											"source": 20,
											"value": "496E73756666696369656E742057455448390000000000000000000000000000"
										},
										{
											"begin": 14799,
											"end": 14800,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14791,
											"end": 14797,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14787,
											"end": 14801,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14780,
											"end": 14824,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14663,
											"end": 14831,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14663,
											"end": 14831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "tag",
											"source": 20,
											"value": "259"
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14979,
											"end": 14982,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15000,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 15064,
											"end": 15066,
											"name": "PUSH",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 15059,
											"end": 15062,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15000,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 15000,
											"end": 15067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15000,
											"end": 15067,
											"name": "tag",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 15000,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14993,
											"end": 15067,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14993,
											"end": 15067,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15076,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 15165,
											"end": 15168,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15076,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "258"
										},
										{
											"begin": 15076,
											"end": 15169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15076,
											"end": 15169,
											"name": "tag",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 15076,
											"end": 15169,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15194,
											"end": 15196,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15189,
											"end": 15192,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15185,
											"end": 15197,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15178,
											"end": 15197,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15178,
											"end": 15197,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14837,
											"end": 15203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "tag",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15375,
											"end": 15379,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15413,
											"end": 15415,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15402,
											"end": 15411,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15398,
											"end": 15416,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15390,
											"end": 15416,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15390,
											"end": 15416,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15462,
											"end": 15471,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15456,
											"end": 15460,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15452,
											"end": 15472,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 15448,
											"end": 15449,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15437,
											"end": 15446,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15433,
											"end": 15450,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15426,
											"end": 15473,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 15490,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 15616,
											"end": 15620,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15490,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "259"
										},
										{
											"begin": 15490,
											"end": 15621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15490,
											"end": 15621,
											"name": "tag",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 15490,
											"end": 15621,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15482,
											"end": 15621,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15482,
											"end": 15621,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15209,
											"end": 15628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15634,
											"end": 15856,
											"name": "tag",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 15634,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15727,
											"end": 15731,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15765,
											"end": 15767,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15754,
											"end": 15763,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15742,
											"end": 15768,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15742,
											"end": 15768,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15778,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "444"
										},
										{
											"begin": 15846,
											"end": 15847,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15835,
											"end": 15844,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15831,
											"end": 15848,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15822,
											"end": 15828,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15778,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 15778,
											"end": 15849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15778,
											"end": 15849,
											"name": "tag",
											"source": 20,
											"value": "444"
										},
										{
											"begin": 15778,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15634,
											"end": 15856,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 15634,
											"end": 15856,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15634,
											"end": 15856,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15634,
											"end": 15856,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15634,
											"end": 15856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15862,
											"end": 16030,
											"name": "tag",
											"source": 20,
											"value": "260"
										},
										{
											"begin": 15862,
											"end": 16030,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16002,
											"end": 16022,
											"name": "PUSH",
											"source": 20,
											"value": "496E73756666696369656E7420746F6B656E0000000000000000000000000000"
										},
										{
											"begin": 15998,
											"end": 15999,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15990,
											"end": 15996,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15986,
											"end": 16000,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15979,
											"end": 16023,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 15862,
											"end": 16030,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15862,
											"end": 16030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "tag",
											"source": 20,
											"value": "261"
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16178,
											"end": 16181,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16199,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 16263,
											"end": 16265,
											"name": "PUSH",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 16258,
											"end": 16261,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16199,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 16199,
											"end": 16266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16199,
											"end": 16266,
											"name": "tag",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 16199,
											"end": 16266,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16192,
											"end": 16266,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16192,
											"end": 16266,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16275,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 16364,
											"end": 16367,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16275,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "260"
										},
										{
											"begin": 16275,
											"end": 16368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16275,
											"end": 16368,
											"name": "tag",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 16275,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16393,
											"end": 16395,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 16388,
											"end": 16391,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16384,
											"end": 16396,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16377,
											"end": 16396,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16377,
											"end": 16396,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16036,
											"end": 16402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "tag",
											"source": 20,
											"value": "88"
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16574,
											"end": 16578,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16614,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16610,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16589,
											"end": 16615,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16589,
											"end": 16615,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16661,
											"end": 16670,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16655,
											"end": 16659,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16651,
											"end": 16671,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 16647,
											"end": 16648,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16636,
											"end": 16645,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16632,
											"end": 16649,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16625,
											"end": 16672,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16689,
											"end": 16820,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 16815,
											"end": 16819,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 16689,
											"end": 16820,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "261"
										},
										{
											"begin": 16689,
											"end": 16820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16689,
											"end": 16820,
											"name": "tag",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 16689,
											"end": 16820,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16681,
											"end": 16820,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16681,
											"end": 16820,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16408,
											"end": 16827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16867,
											"end": 17604,
											"name": "tag",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 16867,
											"end": 17604,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16941,
											"end": 16946,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16985,
											"end": 16989,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 16973,
											"end": 16982,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16968,
											"end": 16971,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 16964,
											"end": 16983,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 16960,
											"end": 16990,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 16957,
											"end": 17074,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 16957,
											"end": 17074,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 16957,
											"end": 17074,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 16993,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "453"
										},
										{
											"begin": 16993,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "221"
										},
										{
											"begin": 16993,
											"end": 17072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16993,
											"end": 17072,
											"name": "tag",
											"source": 20,
											"value": "453"
										},
										{
											"begin": 16993,
											"end": 17072,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16957,
											"end": 17074,
											"name": "tag",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 16957,
											"end": 17074,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17092,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "454"
										},
										{
											"begin": 17108,
											"end": 17112,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 17092,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "224"
										},
										{
											"begin": 17092,
											"end": 17113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17092,
											"end": 17113,
											"name": "tag",
											"source": 20,
											"value": "454"
										},
										{
											"begin": 17092,
											"end": 17113,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17083,
											"end": 17113,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17083,
											"end": 17113,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17174,
											"end": 17175,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17214,
											"end": 17263,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "455"
										},
										{
											"begin": 17259,
											"end": 17262,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 17250,
											"end": 17256,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17239,
											"end": 17248,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 17235,
											"end": 17257,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17214,
											"end": 17263,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 17214,
											"end": 17263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17214,
											"end": 17263,
											"name": "tag",
											"source": 20,
											"value": "455"
										},
										{
											"begin": 17214,
											"end": 17263,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17207,
											"end": 17211,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17200,
											"end": 17205,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17196,
											"end": 17212,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17189,
											"end": 17264,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17123,
											"end": 17275,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17336,
											"end": 17338,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17377,
											"end": 17426,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "456"
										},
										{
											"begin": 17422,
											"end": 17425,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 17413,
											"end": 17419,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17402,
											"end": 17411,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 17398,
											"end": 17420,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17377,
											"end": 17426,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 17377,
											"end": 17426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17377,
											"end": 17426,
											"name": "tag",
											"source": 20,
											"value": "456"
										},
										{
											"begin": 17377,
											"end": 17426,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17370,
											"end": 17374,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17363,
											"end": 17368,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17359,
											"end": 17375,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17352,
											"end": 17427,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17285,
											"end": 17438,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17496,
											"end": 17498,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 17537,
											"end": 17585,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 17581,
											"end": 17584,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 17572,
											"end": 17578,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17561,
											"end": 17570,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 17557,
											"end": 17579,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17537,
											"end": 17585,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 17537,
											"end": 17585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17537,
											"end": 17585,
											"name": "tag",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 17537,
											"end": 17585,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17530,
											"end": 17534,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 17523,
											"end": 17528,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17519,
											"end": 17535,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17512,
											"end": 17586,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17448,
											"end": 17597,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16867,
											"end": 17604,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 16867,
											"end": 17604,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16867,
											"end": 17604,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16867,
											"end": 17604,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16867,
											"end": 17604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17652,
											"end": 18925,
											"name": "tag",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 17652,
											"end": 18925,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17736,
											"end": 17741,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17780,
											"end": 17786,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 17768,
											"end": 17777,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 17759,
											"end": 17778,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 17755,
											"end": 17787,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 17752,
											"end": 17871,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 17752,
											"end": 17871,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "459"
										},
										{
											"begin": 17752,
											"end": 17871,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 17790,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 17790,
											"end": 17869,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "221"
										},
										{
											"begin": 17790,
											"end": 17869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17790,
											"end": 17869,
											"name": "tag",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 17790,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17752,
											"end": 17871,
											"name": "tag",
											"source": 20,
											"value": "459"
										},
										{
											"begin": 17752,
											"end": 17871,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17889,
											"end": 17910,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "461"
										},
										{
											"begin": 17905,
											"end": 17909,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 17889,
											"end": 17910,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "224"
										},
										{
											"begin": 17889,
											"end": 17910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17889,
											"end": 17910,
											"name": "tag",
											"source": 20,
											"value": "461"
										},
										{
											"begin": 17889,
											"end": 17910,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17880,
											"end": 17910,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17880,
											"end": 17910,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17972,
											"end": 17973,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18012,
											"end": 18061,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 18057,
											"end": 18060,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18048,
											"end": 18054,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18037,
											"end": 18046,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 18033,
											"end": 18055,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18012,
											"end": 18061,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 18012,
											"end": 18061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18012,
											"end": 18061,
											"name": "tag",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 18012,
											"end": 18061,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18005,
											"end": 18009,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17998,
											"end": 18003,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17994,
											"end": 18010,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17987,
											"end": 18062,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17920,
											"end": 18073,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18135,
											"end": 18137,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 18176,
											"end": 18225,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 18221,
											"end": 18224,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18212,
											"end": 18218,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18201,
											"end": 18210,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 18197,
											"end": 18219,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18176,
											"end": 18225,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 18176,
											"end": 18225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18176,
											"end": 18225,
											"name": "tag",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 18176,
											"end": 18225,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18169,
											"end": 18173,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 18162,
											"end": 18167,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18158,
											"end": 18174,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18151,
											"end": 18226,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18083,
											"end": 18237,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18297,
											"end": 18299,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 18338,
											"end": 18387,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "464"
										},
										{
											"begin": 18383,
											"end": 18386,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18374,
											"end": 18380,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18363,
											"end": 18372,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 18359,
											"end": 18381,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18338,
											"end": 18387,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "229"
										},
										{
											"begin": 18338,
											"end": 18387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18338,
											"end": 18387,
											"name": "tag",
											"source": 20,
											"value": "464"
										},
										{
											"begin": 18338,
											"end": 18387,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18331,
											"end": 18335,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 18324,
											"end": 18329,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18320,
											"end": 18336,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18313,
											"end": 18388,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18247,
											"end": 18399,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18461,
											"end": 18463,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 18502,
											"end": 18576,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 18572,
											"end": 18575,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18563,
											"end": 18569,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18552,
											"end": 18561,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 18548,
											"end": 18570,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18502,
											"end": 18576,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "262"
										},
										{
											"begin": 18502,
											"end": 18576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18502,
											"end": 18576,
											"name": "tag",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 18502,
											"end": 18576,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18495,
											"end": 18499,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 18488,
											"end": 18493,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18484,
											"end": 18500,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18477,
											"end": 18577,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18409,
											"end": 18588,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18651,
											"end": 18654,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 18693,
											"end": 18741,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "466"
										},
										{
											"begin": 18737,
											"end": 18740,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18728,
											"end": 18734,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18717,
											"end": 18726,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 18713,
											"end": 18735,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18693,
											"end": 18741,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 18693,
											"end": 18741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18693,
											"end": 18741,
											"name": "tag",
											"source": 20,
											"value": "466"
										},
										{
											"begin": 18693,
											"end": 18741,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18686,
											"end": 18690,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 18679,
											"end": 18684,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18675,
											"end": 18691,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18668,
											"end": 18742,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18598,
											"end": 18753,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18816,
											"end": 18819,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 18858,
											"end": 18906,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 18902,
											"end": 18905,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18893,
											"end": 18899,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18882,
											"end": 18891,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 18878,
											"end": 18900,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18858,
											"end": 18906,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 18858,
											"end": 18906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18858,
											"end": 18906,
											"name": "tag",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 18858,
											"end": 18906,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18851,
											"end": 18855,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 18844,
											"end": 18849,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18840,
											"end": 18856,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18833,
											"end": 18907,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 18763,
											"end": 18918,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17652,
											"end": 18925,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 17652,
											"end": 18925,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17652,
											"end": 18925,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17652,
											"end": 18925,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17652,
											"end": 18925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18931,
											"end": 19331,
											"name": "tag",
											"source": 20,
											"value": "94"
										},
										{
											"begin": 18931,
											"end": 19331,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19025,
											"end": 19031,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19074,
											"end": 19077,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 19062,
											"end": 19071,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19053,
											"end": 19060,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 19049,
											"end": 19072,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 19045,
											"end": 19078,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 19042,
											"end": 19162,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 19042,
											"end": 19162,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "469"
										},
										{
											"begin": 19042,
											"end": 19162,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19081,
											"end": 19160,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "470"
										},
										{
											"begin": 19081,
											"end": 19160,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 19081,
											"end": 19160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19081,
											"end": 19160,
											"name": "tag",
											"source": 20,
											"value": "470"
										},
										{
											"begin": 19081,
											"end": 19160,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19042,
											"end": 19162,
											"name": "tag",
											"source": 20,
											"value": "469"
										},
										{
											"begin": 19042,
											"end": 19162,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19201,
											"end": 19202,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19226,
											"end": 19314,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 19306,
											"end": 19313,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 19297,
											"end": 19303,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19286,
											"end": 19295,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 19282,
											"end": 19304,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19226,
											"end": 19314,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 19226,
											"end": 19314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19226,
											"end": 19314,
											"name": "tag",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 19226,
											"end": 19314,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19216,
											"end": 19314,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19216,
											"end": 19314,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19172,
											"end": 19324,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18931,
											"end": 19331,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 18931,
											"end": 19331,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 18931,
											"end": 19331,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18931,
											"end": 19331,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18931,
											"end": 19331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19337,
											"end": 19445,
											"name": "tag",
											"source": 20,
											"value": "264"
										},
										{
											"begin": 19337,
											"end": 19445,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19414,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "473"
										},
										{
											"begin": 19432,
											"end": 19437,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 19414,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 19414,
											"end": 19438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19414,
											"end": 19438,
											"name": "tag",
											"source": 20,
											"value": "473"
										},
										{
											"begin": 19414,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19409,
											"end": 19412,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19402,
											"end": 19439,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 19337,
											"end": 19445,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19337,
											"end": 19445,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19337,
											"end": 19445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19545,
											"end": 21168,
											"name": "tag",
											"source": 20,
											"value": "265"
										},
										{
											"begin": 19545,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19720,
											"end": 19726,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 19715,
											"end": 19718,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19711,
											"end": 19727,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19812,
											"end": 19816,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19805,
											"end": 19810,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19801,
											"end": 19817,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19795,
											"end": 19818,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 19831,
											"end": 19894,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "475"
										},
										{
											"begin": 19888,
											"end": 19892,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19883,
											"end": 19886,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 19879,
											"end": 19893,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19865,
											"end": 19877,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19831,
											"end": 19894,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 19831,
											"end": 19894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19831,
											"end": 19894,
											"name": "tag",
											"source": 20,
											"value": "475"
										},
										{
											"begin": 19831,
											"end": 19894,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19737,
											"end": 19904,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19990,
											"end": 19994,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 19983,
											"end": 19988,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19979,
											"end": 19995,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19973,
											"end": 19996,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 20009,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "476"
										},
										{
											"begin": 20066,
											"end": 20070,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 20061,
											"end": 20064,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 20057,
											"end": 20071,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20043,
											"end": 20055,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20009,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 20009,
											"end": 20072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20009,
											"end": 20072,
											"name": "tag",
											"source": 20,
											"value": "476"
										},
										{
											"begin": 20009,
											"end": 20072,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19914,
											"end": 20082,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20163,
											"end": 20167,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 20156,
											"end": 20161,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20152,
											"end": 20168,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20146,
											"end": 20169,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 20182,
											"end": 20243,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "477"
										},
										{
											"begin": 20237,
											"end": 20241,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 20232,
											"end": 20235,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 20228,
											"end": 20242,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20214,
											"end": 20226,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20182,
											"end": 20243,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 20182,
											"end": 20243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20182,
											"end": 20243,
											"name": "tag",
											"source": 20,
											"value": "477"
										},
										{
											"begin": 20182,
											"end": 20243,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20092,
											"end": 20253,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20340,
											"end": 20344,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 20333,
											"end": 20338,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20329,
											"end": 20345,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20323,
											"end": 20346,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 20359,
											"end": 20422,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 20416,
											"end": 20420,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 20411,
											"end": 20414,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 20407,
											"end": 20421,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20393,
											"end": 20405,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20359,
											"end": 20422,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 20359,
											"end": 20422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20359,
											"end": 20422,
											"name": "tag",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 20359,
											"end": 20422,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20263,
											"end": 20432,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20518,
											"end": 20522,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 20511,
											"end": 20516,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20507,
											"end": 20523,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20501,
											"end": 20524,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 20537,
											"end": 20600,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "479"
										},
										{
											"begin": 20594,
											"end": 20598,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 20589,
											"end": 20592,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 20585,
											"end": 20599,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20571,
											"end": 20583,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20537,
											"end": 20600,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 20537,
											"end": 20600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20537,
											"end": 20600,
											"name": "tag",
											"source": 20,
											"value": "479"
										},
										{
											"begin": 20537,
											"end": 20600,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20442,
											"end": 20610,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20696,
											"end": 20700,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 20689,
											"end": 20694,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20685,
											"end": 20701,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20679,
											"end": 20702,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 20715,
											"end": 20778,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "480"
										},
										{
											"begin": 20772,
											"end": 20776,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 20767,
											"end": 20770,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 20763,
											"end": 20777,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20749,
											"end": 20761,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20715,
											"end": 20778,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 20715,
											"end": 20778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20715,
											"end": 20778,
											"name": "tag",
											"source": 20,
											"value": "480"
										},
										{
											"begin": 20715,
											"end": 20778,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20620,
											"end": 20788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20882,
											"end": 20886,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 20875,
											"end": 20880,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20871,
											"end": 20887,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20865,
											"end": 20888,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 20901,
											"end": 20964,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "481"
										},
										{
											"begin": 20958,
											"end": 20962,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 20953,
											"end": 20956,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 20949,
											"end": 20963,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20935,
											"end": 20947,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20901,
											"end": 20964,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 20901,
											"end": 20964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20901,
											"end": 20964,
											"name": "tag",
											"source": 20,
											"value": "481"
										},
										{
											"begin": 20901,
											"end": 20964,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20798,
											"end": 20974,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21069,
											"end": 21073,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 21062,
											"end": 21067,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21058,
											"end": 21074,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21052,
											"end": 21075,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 21088,
											"end": 21151,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "482"
										},
										{
											"begin": 21145,
											"end": 21149,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 21140,
											"end": 21143,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 21136,
											"end": 21150,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21122,
											"end": 21134,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21088,
											"end": 21151,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "264"
										},
										{
											"begin": 21088,
											"end": 21151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21088,
											"end": 21151,
											"name": "tag",
											"source": 20,
											"value": "482"
										},
										{
											"begin": 21088,
											"end": 21151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20984,
											"end": 21161,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19689,
											"end": 21168,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19545,
											"end": 21168,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19545,
											"end": 21168,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19545,
											"end": 21168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21174,
											"end": 21553,
											"name": "tag",
											"source": 20,
											"value": "104"
										},
										{
											"begin": 21174,
											"end": 21553,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21345,
											"end": 21349,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21383,
											"end": 21386,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 21372,
											"end": 21381,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21368,
											"end": 21387,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21360,
											"end": 21387,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21360,
											"end": 21387,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21397,
											"end": 21546,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 21543,
											"end": 21544,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21532,
											"end": 21541,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 21528,
											"end": 21545,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21519,
											"end": 21525,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 21397,
											"end": 21546,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "265"
										},
										{
											"begin": 21397,
											"end": 21546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21397,
											"end": 21546,
											"name": "tag",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 21397,
											"end": 21546,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21174,
											"end": 21553,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21174,
											"end": 21553,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21174,
											"end": 21553,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21174,
											"end": 21553,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21174,
											"end": 21553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21559,
											"end": 21706,
											"name": "tag",
											"source": 20,
											"value": "266"
										},
										{
											"begin": 21559,
											"end": 21706,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21660,
											"end": 21671,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21697,
											"end": 21700,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21682,
											"end": 21700,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 21682,
											"end": 21700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21559,
											"end": 21706,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21559,
											"end": 21706,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21559,
											"end": 21706,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21559,
											"end": 21706,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21559,
											"end": 21706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21712,
											"end": 22098,
											"name": "tag",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 21712,
											"end": 22098,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21816,
											"end": 21819,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 21844,
											"end": 21882,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "487"
										},
										{
											"begin": 21876,
											"end": 21881,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 21844,
											"end": 21882,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "253"
										},
										{
											"begin": 21844,
											"end": 21882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21844,
											"end": 21882,
											"name": "tag",
											"source": 20,
											"value": "487"
										},
										{
											"begin": 21844,
											"end": 21882,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21898,
											"end": 21986,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "488"
										},
										{
											"begin": 21979,
											"end": 21985,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 21974,
											"end": 21977,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 21898,
											"end": 21986,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "266"
										},
										{
											"begin": 21898,
											"end": 21986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21898,
											"end": 21986,
											"name": "tag",
											"source": 20,
											"value": "488"
										},
										{
											"begin": 21898,
											"end": 21986,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 21891,
											"end": 21986,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 21891,
											"end": 21986,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21995,
											"end": 22060,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "489"
										},
										{
											"begin": 22053,
											"end": 22059,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 22048,
											"end": 22051,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 22041,
											"end": 22045,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 22034,
											"end": 22039,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 22030,
											"end": 22046,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 21995,
											"end": 22060,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "255"
										},
										{
											"begin": 21995,
											"end": 22060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 21995,
											"end": 22060,
											"name": "tag",
											"source": 20,
											"value": "489"
										},
										{
											"begin": 21995,
											"end": 22060,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22085,
											"end": 22091,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 22080,
											"end": 22083,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 22076,
											"end": 22092,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22069,
											"end": 22092,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22069,
											"end": 22092,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21820,
											"end": 22098,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21712,
											"end": 22098,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 21712,
											"end": 22098,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 21712,
											"end": 22098,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21712,
											"end": 22098,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 21712,
											"end": 22098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22104,
											"end": 22375,
											"name": "tag",
											"source": 20,
											"value": "136"
										},
										{
											"begin": 22104,
											"end": 22375,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22234,
											"end": 22237,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22256,
											"end": 22349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "491"
										},
										{
											"begin": 22345,
											"end": 22348,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22336,
											"end": 22342,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 22256,
											"end": 22349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 22256,
											"end": 22349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22256,
											"end": 22349,
											"name": "tag",
											"source": 20,
											"value": "491"
										},
										{
											"begin": 22256,
											"end": 22349,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22249,
											"end": 22349,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22249,
											"end": 22349,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22366,
											"end": 22369,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 22359,
											"end": 22369,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22359,
											"end": 22369,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22104,
											"end": 22375,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 22104,
											"end": 22375,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22104,
											"end": 22375,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22104,
											"end": 22375,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22104,
											"end": 22375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22381,
											"end": 22534,
											"name": "tag",
											"source": 20,
											"value": "268"
										},
										{
											"begin": 22381,
											"end": 22534,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22521,
											"end": 22526,
											"name": "PUSH",
											"source": 20,
											"value": "5354450000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22517,
											"end": 22518,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22509,
											"end": 22515,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22505,
											"end": 22519,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22498,
											"end": 22527,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 22381,
											"end": 22534,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22381,
											"end": 22534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22540,
											"end": 22905,
											"name": "tag",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 22540,
											"end": 22905,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22682,
											"end": 22685,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 22703,
											"end": 22769,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "494"
										},
										{
											"begin": 22767,
											"end": 22768,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 22762,
											"end": 22765,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 22703,
											"end": 22769,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 22703,
											"end": 22769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22703,
											"end": 22769,
											"name": "tag",
											"source": 20,
											"value": "494"
										},
										{
											"begin": 22703,
											"end": 22769,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22696,
											"end": 22769,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22696,
											"end": 22769,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22778,
											"end": 22871,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "495"
										},
										{
											"begin": 22867,
											"end": 22870,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22778,
											"end": 22871,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "268"
										},
										{
											"begin": 22778,
											"end": 22871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22778,
											"end": 22871,
											"name": "tag",
											"source": 20,
											"value": "495"
										},
										{
											"begin": 22778,
											"end": 22871,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 22896,
											"end": 22898,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 22891,
											"end": 22894,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 22887,
											"end": 22899,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 22880,
											"end": 22899,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22880,
											"end": 22899,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22540,
											"end": 22905,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22540,
											"end": 22905,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22540,
											"end": 22905,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22540,
											"end": 22905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 22911,
											"end": 23330,
											"name": "tag",
											"source": 20,
											"value": "142"
										},
										{
											"begin": 22911,
											"end": 23330,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23077,
											"end": 23081,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23115,
											"end": 23117,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 23104,
											"end": 23113,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23100,
											"end": 23118,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23092,
											"end": 23118,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23092,
											"end": 23118,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23164,
											"end": 23173,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23158,
											"end": 23162,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23154,
											"end": 23174,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 23150,
											"end": 23151,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23139,
											"end": 23148,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23135,
											"end": 23152,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23128,
											"end": 23175,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 23192,
											"end": 23323,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "497"
										},
										{
											"begin": 23318,
											"end": 23322,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23192,
											"end": 23323,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 23192,
											"end": 23323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23192,
											"end": 23323,
											"name": "tag",
											"source": 20,
											"value": "497"
										},
										{
											"begin": 23192,
											"end": 23323,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23184,
											"end": 23323,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23184,
											"end": 23323,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22911,
											"end": 23330,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 22911,
											"end": 23330,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 22911,
											"end": 23330,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 22911,
											"end": 23330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23336,
											"end": 23451,
											"name": "tag",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 23336,
											"end": 23451,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23421,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "499"
										},
										{
											"begin": 23438,
											"end": 23443,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 23421,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "230"
										},
										{
											"begin": 23421,
											"end": 23444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23421,
											"end": 23444,
											"name": "tag",
											"source": 20,
											"value": "499"
										},
										{
											"begin": 23421,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23416,
											"end": 23419,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23409,
											"end": 23445,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 23336,
											"end": 23451,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23336,
											"end": 23451,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23336,
											"end": 23451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23457,
											"end": 23895,
											"name": "tag",
											"source": 20,
											"value": "146"
										},
										{
											"begin": 23457,
											"end": 23895,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23604,
											"end": 23608,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23642,
											"end": 23644,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 23631,
											"end": 23640,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 23627,
											"end": 23645,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23619,
											"end": 23645,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 23619,
											"end": 23645,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23655,
											"end": 23726,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "501"
										},
										{
											"begin": 23723,
											"end": 23724,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 23712,
											"end": 23721,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23708,
											"end": 23725,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23699,
											"end": 23705,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 23655,
											"end": 23726,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 23655,
											"end": 23726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23655,
											"end": 23726,
											"name": "tag",
											"source": 20,
											"value": "501"
										},
										{
											"begin": 23655,
											"end": 23726,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23736,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "502"
										},
										{
											"begin": 23804,
											"end": 23806,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 23793,
											"end": 23802,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23789,
											"end": 23807,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23780,
											"end": 23786,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 23736,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 23736,
											"end": 23808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23736,
											"end": 23808,
											"name": "tag",
											"source": 20,
											"value": "502"
										},
										{
											"begin": 23736,
											"end": 23808,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23818,
											"end": 23888,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "503"
										},
										{
											"begin": 23884,
											"end": 23886,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 23873,
											"end": 23882,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 23869,
											"end": 23887,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 23860,
											"end": 23866,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 23818,
											"end": 23888,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 23818,
											"end": 23888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23818,
											"end": 23888,
											"name": "tag",
											"source": 20,
											"value": "503"
										},
										{
											"begin": 23818,
											"end": 23888,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 23457,
											"end": 23895,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 23457,
											"end": 23895,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 23457,
											"end": 23895,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23457,
											"end": 23895,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23457,
											"end": 23895,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23457,
											"end": 23895,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23457,
											"end": 23895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 23901,
											"end": 24049,
											"name": "tag",
											"source": 20,
											"value": "271"
										},
										{
											"begin": 23901,
											"end": 24049,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24003,
											"end": 24014,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24040,
											"end": 24043,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24025,
											"end": 24043,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24025,
											"end": 24043,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23901,
											"end": 24049,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 23901,
											"end": 24049,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 23901,
											"end": 24049,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23901,
											"end": 24049,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 23901,
											"end": 24049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24055,
											"end": 24269,
											"name": "tag",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 24055,
											"end": 24269,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24195,
											"end": 24261,
											"name": "PUSH",
											"source": 20,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24191,
											"end": 24192,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24183,
											"end": 24189,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24179,
											"end": 24193,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 24172,
											"end": 24262,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 24055,
											"end": 24269,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24055,
											"end": 24269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24275,
											"end": 24675,
											"name": "tag",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 24275,
											"end": 24675,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24435,
											"end": 24438,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24456,
											"end": 24540,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "507"
										},
										{
											"begin": 24538,
											"end": 24539,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 24533,
											"end": 24536,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 24456,
											"end": 24540,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "271"
										},
										{
											"begin": 24456,
											"end": 24540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24456,
											"end": 24540,
											"name": "tag",
											"source": 20,
											"value": "507"
										},
										{
											"begin": 24456,
											"end": 24540,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24449,
											"end": 24540,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24449,
											"end": 24540,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24549,
											"end": 24642,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "508"
										},
										{
											"begin": 24638,
											"end": 24641,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24549,
											"end": 24642,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 24549,
											"end": 24642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24549,
											"end": 24642,
											"name": "tag",
											"source": 20,
											"value": "508"
										},
										{
											"begin": 24549,
											"end": 24642,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24667,
											"end": 24668,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 24662,
											"end": 24665,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24658,
											"end": 24669,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 24651,
											"end": 24669,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24651,
											"end": 24669,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24275,
											"end": 24675,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24275,
											"end": 24675,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24275,
											"end": 24675,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24275,
											"end": 24675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24681,
											"end": 24775,
											"name": "tag",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 24681,
											"end": 24775,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24714,
											"end": 24722,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24762,
											"end": 24767,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 24758,
											"end": 24760,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 24754,
											"end": 24768,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 24733,
											"end": 24768,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24733,
											"end": 24768,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24681,
											"end": 24775,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24681,
											"end": 24775,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24681,
											"end": 24775,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24681,
											"end": 24775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24781,
											"end": 24875,
											"name": "tag",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 24781,
											"end": 24875,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24820,
											"end": 24827,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24849,
											"end": 24869,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "511"
										},
										{
											"begin": 24863,
											"end": 24868,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24849,
											"end": 24869,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 24849,
											"end": 24869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24849,
											"end": 24869,
											"name": "tag",
											"source": 20,
											"value": "511"
										},
										{
											"begin": 24849,
											"end": 24869,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24838,
											"end": 24869,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24838,
											"end": 24869,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24781,
											"end": 24875,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24781,
											"end": 24875,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24781,
											"end": 24875,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24781,
											"end": 24875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24881,
											"end": 24981,
											"name": "tag",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 24881,
											"end": 24981,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24920,
											"end": 24927,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 24949,
											"end": 24975,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "513"
										},
										{
											"begin": 24969,
											"end": 24974,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 24949,
											"end": 24975,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 24949,
											"end": 24975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24949,
											"end": 24975,
											"name": "tag",
											"source": 20,
											"value": "513"
										},
										{
											"begin": 24949,
											"end": 24975,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 24938,
											"end": 24975,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24938,
											"end": 24975,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24881,
											"end": 24981,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 24881,
											"end": 24981,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 24881,
											"end": 24981,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24881,
											"end": 24981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 24987,
											"end": 25144,
											"name": "tag",
											"source": 20,
											"value": "277"
										},
										{
											"begin": 24987,
											"end": 25144,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25092,
											"end": 25137,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 25112,
											"end": 25136,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 25130,
											"end": 25135,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25112,
											"end": 25136,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "227"
										},
										{
											"begin": 25112,
											"end": 25136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25112,
											"end": 25136,
											"name": "tag",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 25112,
											"end": 25136,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25092,
											"end": 25137,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 25092,
											"end": 25137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25092,
											"end": 25137,
											"name": "tag",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 25092,
											"end": 25137,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25087,
											"end": 25090,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25080,
											"end": 25138,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 24987,
											"end": 25144,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24987,
											"end": 25144,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 24987,
											"end": 25144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25150,
											"end": 25227,
											"name": "tag",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 25150,
											"end": 25227,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25187,
											"end": 25194,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25216,
											"end": 25221,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25205,
											"end": 25221,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25205,
											"end": 25221,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25150,
											"end": 25227,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25150,
											"end": 25227,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25150,
											"end": 25227,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25150,
											"end": 25227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25233,
											"end": 25312,
											"name": "tag",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 25233,
											"end": 25312,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25272,
											"end": 25279,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25301,
											"end": 25306,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 25290,
											"end": 25306,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25290,
											"end": 25306,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25233,
											"end": 25312,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25233,
											"end": 25312,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 25233,
											"end": 25312,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25233,
											"end": 25312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25318,
											"end": 25475,
											"name": "tag",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 25318,
											"end": 25475,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25423,
											"end": 25468,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "520"
										},
										{
											"begin": 25443,
											"end": 25467,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "521"
										},
										{
											"begin": 25461,
											"end": 25466,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25443,
											"end": 25467,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 25443,
											"end": 25467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25443,
											"end": 25467,
											"name": "tag",
											"source": 20,
											"value": "521"
										},
										{
											"begin": 25443,
											"end": 25467,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25423,
											"end": 25468,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 25423,
											"end": 25468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25423,
											"end": 25468,
											"name": "tag",
											"source": 20,
											"value": "520"
										},
										{
											"begin": 25423,
											"end": 25468,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25418,
											"end": 25421,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25411,
											"end": 25469,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 25318,
											"end": 25475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25318,
											"end": 25475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25318,
											"end": 25475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 26285,
											"name": "tag",
											"source": 20,
											"value": "148"
										},
										{
											"begin": 25481,
											"end": 26285,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25750,
											"end": 25753,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 25772,
											"end": 25920,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 25916,
											"end": 25919,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25772,
											"end": 25920,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 25772,
											"end": 25920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25772,
											"end": 25920,
											"name": "tag",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 25772,
											"end": 25920,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 25765,
											"end": 25920,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 25765,
											"end": 25920,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25930,
											"end": 26005,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "524"
										},
										{
											"begin": 26001,
											"end": 26004,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 25992,
											"end": 25998,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 25930,
											"end": 26005,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "277"
										},
										{
											"begin": 25930,
											"end": 26005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 25930,
											"end": 26005,
											"name": "tag",
											"source": 20,
											"value": "524"
										},
										{
											"begin": 25930,
											"end": 26005,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26030,
											"end": 26032,
											"name": "PUSH",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 26025,
											"end": 26028,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26021,
											"end": 26033,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26014,
											"end": 26033,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26014,
											"end": 26033,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26043,
											"end": 26118,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "525"
										},
										{
											"begin": 26114,
											"end": 26117,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26105,
											"end": 26111,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 26043,
											"end": 26118,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 26043,
											"end": 26118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26043,
											"end": 26118,
											"name": "tag",
											"source": 20,
											"value": "525"
										},
										{
											"begin": 26043,
											"end": 26118,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26143,
											"end": 26145,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 26138,
											"end": 26141,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26134,
											"end": 26146,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26156,
											"end": 26231,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "526"
										},
										{
											"begin": 26227,
											"end": 26230,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26218,
											"end": 26224,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 26156,
											"end": 26231,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 26156,
											"end": 26231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26156,
											"end": 26231,
											"name": "tag",
											"source": 20,
											"value": "526"
										},
										{
											"begin": 26156,
											"end": 26231,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26256,
											"end": 26258,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 26251,
											"end": 26254,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26247,
											"end": 26259,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26240,
											"end": 26259,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26240,
											"end": 26259,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26276,
											"end": 26279,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26269,
											"end": 26279,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26269,
											"end": 26279,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 26285,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 26285,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 26285,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 26285,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 26285,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 26285,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 25481,
											"end": 26285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26623,
											"name": "tag",
											"source": 20,
											"value": "151"
										},
										{
											"begin": 26291,
											"end": 26623,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26412,
											"end": 26416,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26450,
											"end": 26452,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 26439,
											"end": 26448,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 26435,
											"end": 26453,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26427,
											"end": 26453,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26427,
											"end": 26453,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26463,
											"end": 26534,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "528"
										},
										{
											"begin": 26531,
											"end": 26532,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26520,
											"end": 26529,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 26516,
											"end": 26533,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26507,
											"end": 26513,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 26463,
											"end": 26534,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 26463,
											"end": 26534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26463,
											"end": 26534,
											"name": "tag",
											"source": 20,
											"value": "528"
										},
										{
											"begin": 26463,
											"end": 26534,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26544,
											"end": 26616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "529"
										},
										{
											"begin": 26612,
											"end": 26614,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 26601,
											"end": 26610,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 26597,
											"end": 26615,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 26588,
											"end": 26594,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 26544,
											"end": 26616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 26544,
											"end": 26616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26544,
											"end": 26616,
											"name": "tag",
											"source": 20,
											"value": "529"
										},
										{
											"begin": 26544,
											"end": 26616,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26623,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26623,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26623,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26623,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26623,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26291,
											"end": 26623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26629,
											"end": 26719,
											"name": "tag",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 26629,
											"end": 26719,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26663,
											"end": 26670,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26706,
											"end": 26711,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26699,
											"end": 26712,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 26692,
											"end": 26713,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 26681,
											"end": 26713,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26681,
											"end": 26713,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26629,
											"end": 26719,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26629,
											"end": 26719,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26629,
											"end": 26719,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26629,
											"end": 26719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26725,
											"end": 26841,
											"name": "tag",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 26725,
											"end": 26841,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26795,
											"end": 26816,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "532"
										},
										{
											"begin": 26810,
											"end": 26815,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26795,
											"end": 26816,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 26795,
											"end": 26816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26795,
											"end": 26816,
											"name": "tag",
											"source": 20,
											"value": "532"
										},
										{
											"begin": 26795,
											"end": 26816,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26788,
											"end": 26793,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26785,
											"end": 26817,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 26775,
											"end": 26835,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "533"
										},
										{
											"begin": 26775,
											"end": 26835,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 26831,
											"end": 26832,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26828,
											"end": 26829,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 26821,
											"end": 26833,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 26775,
											"end": 26835,
											"name": "tag",
											"source": 20,
											"value": "533"
										},
										{
											"begin": 26775,
											"end": 26835,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26725,
											"end": 26841,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26725,
											"end": 26841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26847,
											"end": 26984,
											"name": "tag",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 26847,
											"end": 26984,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26901,
											"end": 26906,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 26932,
											"end": 26938,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26926,
											"end": 26939,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 26917,
											"end": 26939,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 26917,
											"end": 26939,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26948,
											"end": 26978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "535"
										},
										{
											"begin": 26972,
											"end": 26977,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 26948,
											"end": 26978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 26948,
											"end": 26978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26948,
											"end": 26978,
											"name": "tag",
											"source": 20,
											"value": "535"
										},
										{
											"begin": 26948,
											"end": 26978,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 26847,
											"end": 26984,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 26847,
											"end": 26984,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26847,
											"end": 26984,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26847,
											"end": 26984,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26847,
											"end": 26984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 26990,
											"end": 27335,
											"name": "tag",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 26990,
											"end": 27335,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27057,
											"end": 27063,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 27106,
											"end": 27108,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 27094,
											"end": 27103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27085,
											"end": 27092,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 27081,
											"end": 27104,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 27077,
											"end": 27109,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 27074,
											"end": 27193,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 27074,
											"end": 27193,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "537"
										},
										{
											"begin": 27074,
											"end": 27193,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 27112,
											"end": 27191,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "538"
										},
										{
											"begin": 27112,
											"end": 27191,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "219"
										},
										{
											"begin": 27112,
											"end": 27191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27112,
											"end": 27191,
											"name": "tag",
											"source": 20,
											"value": "538"
										},
										{
											"begin": 27112,
											"end": 27191,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27074,
											"end": 27193,
											"name": "tag",
											"source": 20,
											"value": "537"
										},
										{
											"begin": 27074,
											"end": 27193,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27232,
											"end": 27233,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 27257,
											"end": 27318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "539"
										},
										{
											"begin": 27310,
											"end": 27317,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 27301,
											"end": 27307,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27290,
											"end": 27299,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 27286,
											"end": 27308,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 27257,
											"end": 27318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 27257,
											"end": 27318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27257,
											"end": 27318,
											"name": "tag",
											"source": 20,
											"value": "539"
										},
										{
											"begin": 27257,
											"end": 27318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27247,
											"end": 27318,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 27247,
											"end": 27318,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27203,
											"end": 27328,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26990,
											"end": 27335,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 26990,
											"end": 27335,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 26990,
											"end": 27335,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26990,
											"end": 27335,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 26990,
											"end": 27335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27341,
											"end": 27493,
											"name": "tag",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 27341,
											"end": 27493,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27481,
											"end": 27485,
											"name": "PUSH",
											"source": 20,
											"value": "5354000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27477,
											"end": 27478,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 27469,
											"end": 27475,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27465,
											"end": 27479,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 27458,
											"end": 27486,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 27341,
											"end": 27493,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27341,
											"end": 27493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27499,
											"end": 27864,
											"name": "tag",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 27499,
											"end": 27864,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27641,
											"end": 27644,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 27662,
											"end": 27728,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "542"
										},
										{
											"begin": 27726,
											"end": 27727,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 27721,
											"end": 27724,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 27662,
											"end": 27728,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 27662,
											"end": 27728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27662,
											"end": 27728,
											"name": "tag",
											"source": 20,
											"value": "542"
										},
										{
											"begin": 27662,
											"end": 27728,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27655,
											"end": 27728,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 27655,
											"end": 27728,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27737,
											"end": 27830,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "543"
										},
										{
											"begin": 27826,
											"end": 27829,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27737,
											"end": 27830,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 27737,
											"end": 27830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27737,
											"end": 27830,
											"name": "tag",
											"source": 20,
											"value": "543"
										},
										{
											"begin": 27737,
											"end": 27830,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 27855,
											"end": 27857,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 27850,
											"end": 27853,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 27846,
											"end": 27858,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 27839,
											"end": 27858,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 27839,
											"end": 27858,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27499,
											"end": 27864,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 27499,
											"end": 27864,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 27499,
											"end": 27864,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27499,
											"end": 27864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 27870,
											"end": 28289,
											"name": "tag",
											"source": 20,
											"value": "162"
										},
										{
											"begin": 27870,
											"end": 28289,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28036,
											"end": 28040,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 28074,
											"end": 28076,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 28063,
											"end": 28072,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 28059,
											"end": 28077,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 28051,
											"end": 28077,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28051,
											"end": 28077,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28123,
											"end": 28132,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 28117,
											"end": 28121,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 28113,
											"end": 28133,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 28109,
											"end": 28110,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 28094,
											"end": 28111,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 28087,
											"end": 28134,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 28151,
											"end": 28282,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "545"
										},
										{
											"begin": 28277,
											"end": 28281,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 28151,
											"end": 28282,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 28151,
											"end": 28282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28151,
											"end": 28282,
											"name": "tag",
											"source": 20,
											"value": "545"
										},
										{
											"begin": 28151,
											"end": 28282,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28143,
											"end": 28282,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28143,
											"end": 28282,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27870,
											"end": 28289,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 27870,
											"end": 28289,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 27870,
											"end": 28289,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 27870,
											"end": 28289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28295,
											"end": 28447,
											"name": "tag",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 28295,
											"end": 28447,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28435,
											"end": 28439,
											"name": "PUSH",
											"source": 20,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28431,
											"end": 28432,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 28423,
											"end": 28429,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 28419,
											"end": 28433,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 28412,
											"end": 28440,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 28295,
											"end": 28447,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28295,
											"end": 28447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28453,
											"end": 28818,
											"name": "tag",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 28453,
											"end": 28818,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28595,
											"end": 28598,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 28616,
											"end": 28682,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "548"
										},
										{
											"begin": 28680,
											"end": 28681,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 28675,
											"end": 28678,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 28616,
											"end": 28682,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 28616,
											"end": 28682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28616,
											"end": 28682,
											"name": "tag",
											"source": 20,
											"value": "548"
										},
										{
											"begin": 28616,
											"end": 28682,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28609,
											"end": 28682,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 28609,
											"end": 28682,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28691,
											"end": 28784,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "549"
										},
										{
											"begin": 28780,
											"end": 28783,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 28691,
											"end": 28784,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 28691,
											"end": 28784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28691,
											"end": 28784,
											"name": "tag",
											"source": 20,
											"value": "549"
										},
										{
											"begin": 28691,
											"end": 28784,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28809,
											"end": 28811,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 28804,
											"end": 28807,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 28800,
											"end": 28812,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 28793,
											"end": 28812,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28793,
											"end": 28812,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28453,
											"end": 28818,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 28453,
											"end": 28818,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28453,
											"end": 28818,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28453,
											"end": 28818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 28824,
											"end": 29243,
											"name": "tag",
											"source": 20,
											"value": "177"
										},
										{
											"begin": 28824,
											"end": 29243,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 28990,
											"end": 28994,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29028,
											"end": 29030,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 29017,
											"end": 29026,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29013,
											"end": 29031,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 29005,
											"end": 29031,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 29005,
											"end": 29031,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29077,
											"end": 29086,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 29071,
											"end": 29075,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 29067,
											"end": 29087,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 29063,
											"end": 29064,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29052,
											"end": 29061,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 29048,
											"end": 29065,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 29041,
											"end": 29088,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 29105,
											"end": 29236,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "551"
										},
										{
											"begin": 29231,
											"end": 29235,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 29105,
											"end": 29236,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 29105,
											"end": 29236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29105,
											"end": 29236,
											"name": "tag",
											"source": 20,
											"value": "551"
										},
										{
											"begin": 29105,
											"end": 29236,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29097,
											"end": 29236,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 29097,
											"end": 29236,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28824,
											"end": 29243,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 28824,
											"end": 29243,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 28824,
											"end": 29243,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 28824,
											"end": 29243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29249,
											"end": 29429,
											"name": "tag",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 29249,
											"end": 29429,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29297,
											"end": 29374,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29294,
											"end": 29295,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29287,
											"end": 29375,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 29394,
											"end": 29398,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 29391,
											"end": 29392,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 29384,
											"end": 29399,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 29418,
											"end": 29422,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 29415,
											"end": 29416,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29408,
											"end": 29423,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 29435,
											"end": 29626,
											"name": "tag",
											"source": 20,
											"value": "180"
										},
										{
											"begin": 29435,
											"end": 29626,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29475,
											"end": 29478,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29494,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "554"
										},
										{
											"begin": 29512,
											"end": 29513,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29494,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 29494,
											"end": 29514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29494,
											"end": 29514,
											"name": "tag",
											"source": 20,
											"value": "554"
										},
										{
											"begin": 29494,
											"end": 29514,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29489,
											"end": 29514,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29489,
											"end": 29514,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29528,
											"end": 29548,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "555"
										},
										{
											"begin": 29546,
											"end": 29547,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 29528,
											"end": 29548,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 29528,
											"end": 29548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29528,
											"end": 29548,
											"name": "tag",
											"source": 20,
											"value": "555"
										},
										{
											"begin": 29528,
											"end": 29548,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29523,
											"end": 29548,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 29523,
											"end": 29548,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29571,
											"end": 29572,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29568,
											"end": 29569,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29564,
											"end": 29573,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 29557,
											"end": 29573,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 29557,
											"end": 29573,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29592,
											"end": 29595,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 29589,
											"end": 29590,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29586,
											"end": 29596,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 29583,
											"end": 29619,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 29583,
											"end": 29619,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "556"
										},
										{
											"begin": 29583,
											"end": 29619,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 29599,
											"end": 29617,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "557"
										},
										{
											"begin": 29599,
											"end": 29617,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 29599,
											"end": 29617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29599,
											"end": 29617,
											"name": "tag",
											"source": 20,
											"value": "557"
										},
										{
											"begin": 29599,
											"end": 29617,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29583,
											"end": 29619,
											"name": "tag",
											"source": 20,
											"value": "556"
										},
										{
											"begin": 29583,
											"end": 29619,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29435,
											"end": 29626,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 29435,
											"end": 29626,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29435,
											"end": 29626,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29435,
											"end": 29626,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29435,
											"end": 29626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29632,
											"end": 29826,
											"name": "tag",
											"source": 20,
											"value": "200"
										},
										{
											"begin": 29632,
											"end": 29826,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29672,
											"end": 29676,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 29692,
											"end": 29712,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "559"
										},
										{
											"begin": 29710,
											"end": 29711,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29692,
											"end": 29712,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 29692,
											"end": 29712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29692,
											"end": 29712,
											"name": "tag",
											"source": 20,
											"value": "559"
										},
										{
											"begin": 29692,
											"end": 29712,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29687,
											"end": 29712,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29687,
											"end": 29712,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29726,
											"end": 29746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "560"
										},
										{
											"begin": 29744,
											"end": 29745,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 29726,
											"end": 29746,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "233"
										},
										{
											"begin": 29726,
											"end": 29746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29726,
											"end": 29746,
											"name": "tag",
											"source": 20,
											"value": "560"
										},
										{
											"begin": 29726,
											"end": 29746,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29721,
											"end": 29746,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 29721,
											"end": 29746,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29770,
											"end": 29771,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29767,
											"end": 29768,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 29763,
											"end": 29772,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 29755,
											"end": 29772,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 29755,
											"end": 29772,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29794,
											"end": 29795,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 29788,
											"end": 29792,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 29785,
											"end": 29796,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 29782,
											"end": 29819,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 29782,
											"end": 29819,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "561"
										},
										{
											"begin": 29782,
											"end": 29819,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 29799,
											"end": 29817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "562"
										},
										{
											"begin": 29799,
											"end": 29817,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 29799,
											"end": 29817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29799,
											"end": 29817,
											"name": "tag",
											"source": 20,
											"value": "562"
										},
										{
											"begin": 29799,
											"end": 29817,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29782,
											"end": 29819,
											"name": "tag",
											"source": 20,
											"value": "561"
										},
										{
											"begin": 29782,
											"end": 29819,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29632,
											"end": 29826,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 29632,
											"end": 29826,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 29632,
											"end": 29826,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29632,
											"end": 29826,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29632,
											"end": 29826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 29832,
											"end": 30274,
											"name": "tag",
											"source": 20,
											"value": "204"
										},
										{
											"begin": 29832,
											"end": 30274,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29981,
											"end": 29985,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 30019,
											"end": 30021,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 30008,
											"end": 30017,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 30004,
											"end": 30022,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 29996,
											"end": 30022,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 29996,
											"end": 30022,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30032,
											"end": 30103,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "564"
										},
										{
											"begin": 30100,
											"end": 30101,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 30089,
											"end": 30098,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 30085,
											"end": 30102,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 30076,
											"end": 30082,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 30032,
											"end": 30103,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 30032,
											"end": 30103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30032,
											"end": 30103,
											"name": "tag",
											"source": 20,
											"value": "564"
										},
										{
											"begin": 30032,
											"end": 30103,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30113,
											"end": 30185,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "565"
										},
										{
											"begin": 30181,
											"end": 30183,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 30170,
											"end": 30179,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 30166,
											"end": 30184,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 30157,
											"end": 30163,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 30113,
											"end": 30185,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "237"
										},
										{
											"begin": 30113,
											"end": 30185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30113,
											"end": 30185,
											"name": "tag",
											"source": 20,
											"value": "565"
										},
										{
											"begin": 30113,
											"end": 30185,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30195,
											"end": 30267,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "566"
										},
										{
											"begin": 30263,
											"end": 30265,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 30252,
											"end": 30261,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 30248,
											"end": 30266,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 30239,
											"end": 30245,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 30195,
											"end": 30267,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 30195,
											"end": 30267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30195,
											"end": 30267,
											"name": "tag",
											"source": 20,
											"value": "566"
										},
										{
											"begin": 30195,
											"end": 30267,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 29832,
											"end": 30274,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 29832,
											"end": 30274,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 29832,
											"end": 30274,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29832,
											"end": 30274,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29832,
											"end": 30274,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29832,
											"end": 30274,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 29832,
											"end": 30274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30280,
											"end": 30433,
											"name": "tag",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 30280,
											"end": 30433,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30420,
											"end": 30425,
											"name": "PUSH",
											"source": 20,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30416,
											"end": 30417,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 30408,
											"end": 30414,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 30404,
											"end": 30418,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 30397,
											"end": 30426,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 30280,
											"end": 30433,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30280,
											"end": 30433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30439,
											"end": 30804,
											"name": "tag",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 30439,
											"end": 30804,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30581,
											"end": 30584,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 30602,
											"end": 30668,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "569"
										},
										{
											"begin": 30666,
											"end": 30667,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 30661,
											"end": 30664,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 30602,
											"end": 30668,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 30602,
											"end": 30668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30602,
											"end": 30668,
											"name": "tag",
											"source": 20,
											"value": "569"
										},
										{
											"begin": 30602,
											"end": 30668,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30595,
											"end": 30668,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 30595,
											"end": 30668,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30677,
											"end": 30770,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "570"
										},
										{
											"begin": 30766,
											"end": 30769,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 30677,
											"end": 30770,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 30677,
											"end": 30770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30677,
											"end": 30770,
											"name": "tag",
											"source": 20,
											"value": "570"
										},
										{
											"begin": 30677,
											"end": 30770,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30795,
											"end": 30797,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 30790,
											"end": 30793,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 30786,
											"end": 30798,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 30779,
											"end": 30798,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30779,
											"end": 30798,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30439,
											"end": 30804,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 30439,
											"end": 30804,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30439,
											"end": 30804,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30439,
											"end": 30804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "tag",
											"source": 20,
											"value": "214"
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 30976,
											"end": 30980,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 31014,
											"end": 31016,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 31003,
											"end": 31012,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 30999,
											"end": 31017,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 30991,
											"end": 31017,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30991,
											"end": 31017,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 31063,
											"end": 31072,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 31057,
											"end": 31061,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 31053,
											"end": 31073,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 31049,
											"end": 31050,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 31038,
											"end": 31047,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 31034,
											"end": 31051,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 31027,
											"end": 31074,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 31091,
											"end": 31222,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "572"
										},
										{
											"begin": 31217,
											"end": 31221,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 31091,
											"end": 31222,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 31091,
											"end": 31222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 31091,
											"end": 31222,
											"name": "tag",
											"source": 20,
											"value": "572"
										},
										{
											"begin": 31091,
											"end": 31222,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 31083,
											"end": 31222,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 31083,
											"end": 31222,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 30810,
											"end": 31229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
								"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
								"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/PremaidV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155",
							"initFlash((address,address,uint24,uint256,uint256,uint24,uint24))": "2384463b",
							"refundETH()": "12210e8a",
							"swapRouter()": "c31c9c07",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"uniswapV3FlashCallback(uint256,uint256,bytes)": "e9cbafb0",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee1\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"fee3\",\"type\":\"uint24\"}],\"internalType\":\"struct PairFlash.FlashParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"initFlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3FlashCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"initFlash((address,address,uint24,uint256,uint256,uint24,uint24))\":{\"params\":{\"params\":\"The parameters necessary for flash and the callback, passed in as FlashParams\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"details\":\"fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed\",\"params\":{\"data\":\"The data needed in the callback passed as FlashCallbackData from `initFlash`\",\"fee0\":\"The fee from calling flash for token0\",\"fee1\":\"The fee from calling flash for token1\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Flash contract implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initFlash((address,address,uint24,uint256,uint256,uint24,uint24))\":{\"notice\":\"Calls the pools flash function with data needed in `uniswapV3FlashCallback`\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"notice\":\"implements the callback called from flash\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"An example contract using the Uniswap V3 flash function\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PremaidV3.sol\":\"PairFlash\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol\":{\"keccak256\":\"0x151ba1777392771025f0fca946c95fbc16ec4b5eff05e1f236115b99bd574de2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://738a50c25d9d26ca3fabb1865bf6a0cdd8d7a2eec9dbfbd1fc000c81fb8e2b5e\",\"dweb:/ipfs/QmQjgCiLhrq5eLJgQcVHV24MRHyf6YdVzrGH8Ms7LnSSRA\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0x969099de81e122fa24a6f60e8dad7eb76f12e3bc15b9f45d4360e7185df8a94f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://68b174f33a501774a059c0d93f2e827bacce086d4b17c5c06c01e9eda3af89f8\",\"dweb:/ipfs/QmQHAGmzjSDnSAxfXv1Xs5TAhhsqFGNNTHJgGc6k6wa8ff\"]},\"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol\":{\"keccak256\":\"0x46be79543feb5e84b0fd9513337d35e99be6a3e844424682d4587ed0d6db82bc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9c84201759bb7e261584162ab73b4b392f3f5f6c40dc8599c53c9ce5f1be60ef\",\"dweb:/ipfs/QmWY6mJHZ9sLHwrFUL6tQSr2F6wEGLxkJBMV4wPi6pgT9L\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9c14be08df9786383ce137d45f2b92d5bfea14cc98d24b7dd4a802b29be12e1a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d1bb0b0590412b68030d3e47a3b46b56bdb83dcc9e349ad029de64f58e8593d4\",\"dweb:/ipfs/Qme9yxt9ihCxbLBACGAL7WWmzF1huNpm4opNXREZS3H43k\"]},\"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":{\"keccak256\":\"0xd525429de4363e28607dae2e5803ac1708405a3043bceef00c8e09ecf9b39800\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://424bc3668d08303cf9c5fd7b29bc05884328abb50394d62a2b658727457599a1\",\"dweb:/ipfs/QmciZR4eXqrCNhHWeZjtJrmCHfsz5FooiYjQV67RvDQidA\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xe685c3d70b97e25e063930cf3ebc969c0e9ceff2fa2753b07469c156dd770d25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://82c6562653dac6294174e78493c6292978d56dd81f0395ee1fdd5c2bda9c0ce1\",\"dweb:/ipfs/QmaYu9Wy3mdn9HWxGpyjSjVxGDB4i9DG2hQ6rUummM3q7e\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/PremaidV3.sol\":{\"keccak256\":\"0x20e94b3244a8635f7ec91953c31793bbfb888623537a68b5b19e22308b4b83de\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4b7d20e1cf3a88776e617596d432504918ba2aa0ce1b3692b925a3089d242e5\",\"dweb:/ipfs/Qmeu6A7Bhm6zXJfkJ5J42sqJeBFX9pUpkRL2dVKpmsR3sS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initFlash((address,address,uint24,uint256,uint256,uint24,uint24))": {
								"notice": "Calls the pools flash function with data needed in `uniswapV3FlashCallback`"
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"uniswapV3FlashCallback(uint256,uint256,bytes)": {
								"notice": "implements the callback called from flash"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "An example contract using the Uniswap V3 flash function",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							99
						],
						"IUniswapV3PoolActions": [
							223
						],
						"IUniswapV3PoolDerivedState": [
							254
						],
						"IUniswapV3PoolEvents": [
							373
						],
						"IUniswapV3PoolImmutables": [
							413
						],
						"IUniswapV3PoolOwnerActions": [
							439
						],
						"IUniswapV3PoolState": [
							547
						]
					},
					"id": 100,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 414,
							"src": "71:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 548,
							"src": "117:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 255,
							"src": "158:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 224,
							"src": "206:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 440,
							"src": "249:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 374,
							"src": "297:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 87,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 413,
										"src": "637:24:1"
									},
									"id": 88,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:1"
								},
								{
									"baseName": {
										"id": 89,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 547,
										"src": "667:19:1"
									},
									"id": 90,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:1"
								},
								{
									"baseName": {
										"id": 91,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 254,
										"src": "692:26:1"
									},
									"id": 92,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:1"
								},
								{
									"baseName": {
										"id": 93,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 223,
										"src": "724:21:1"
									},
									"id": 94,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:1"
								},
								{
									"baseName": {
										"id": 95,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 439,
										"src": "751:26:1"
									},
									"id": 96,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:1"
								},
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 373,
										"src": "783:20:1"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:1"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 86,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:1",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99,
								373,
								439,
								223,
								254,
								547,
								413
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 100,
							"src": "605:203:1",
							"usedErrors": [],
							"usedEvents": [
								264,
								281,
								296,
								311,
								328,
								343,
								350,
								361,
								372
							]
						}
					],
					"src": "45:764:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol",
					"exportedSymbols": {
						"IUniswapV3FlashCallback": [
							113
						]
					},
					"id": 114,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 101,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3FlashCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "71:146:2",
								"text": "@title Callback for IUniswapV3PoolActions#flash\n @notice Any contract that calls IUniswapV3PoolActions#flash must implement this interface"
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IUniswapV3FlashCallback",
							"nameLocation": "227:23:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "257:597:2",
										"text": "@notice Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash.\n @dev In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n @param fee0 The fee amount in token0 due to the pool by the end of the flash\n @param fee1 The fee amount in token1 due to the pool by the end of the flash\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#flash call"
									},
									"functionSelector": "e9cbafb0",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3FlashCallback",
									"nameLocation": "868:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "fee0",
												"nameLocation": "908:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "900:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "fee1",
												"nameLocation": "930:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "922:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "959:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "944:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 108,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "944:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:79:2"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:2"
									},
									"scope": 113,
									"src": "859:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "217:764:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:937:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							127
						]
					},
					"id": 128,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:3",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:3",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1197:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 118,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1226:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 120,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1255:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:3"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:3"
									},
									"scope": 127,
									"src": "1157:133:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 128,
							"src": "215:1077:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							223
						]
					},
					"id": 224,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 129,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 130,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:4",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 223,
							"linearizedBaseContracts": [
								223
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:4",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "442:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 132,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:4"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:4"
									},
									"scope": 223,
									"src": "422:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:4",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1536:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1563:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 140,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1588:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 142,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1613:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 144,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1637:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:4"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1681:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1698:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:4"
									},
									"scope": 223,
									"src": "1513:202:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:4",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2805:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2832:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 158,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2857:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 160,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2882:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 162,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2916:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 164,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:4"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2965:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 167,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 169,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:4"
									},
									"scope": 223,
									"src": "2779:220:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:4",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 174,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3689:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 176,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3714:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 178,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:4"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3753:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3770:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:4"
									},
									"scope": 223,
									"src": "3641:146:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:4",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4836:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4863:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4888:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 192,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4920:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 194,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4955:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:4"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4999:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 199,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "5015:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 201,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:4"
									},
									"scope": 223,
									"src": "4813:218:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:4",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5723:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5775:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5800:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:4"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:4"
									},
									"scope": 223,
									"src": "5699:136:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:4",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:4",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "6257:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 218,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:4"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:4"
									},
									"scope": 223,
									"src": "6213:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 224,
							"src": "173:6130:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							254
						]
					},
					"id": 255,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 225,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:5",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 254,
							"linearizedBaseContracts": [
								254
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:5",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1403:29:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 228,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 229,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:5"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1481:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 232,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 233,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:5",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1513:51:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 235,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 236,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:5"
									},
									"scope": 254,
									"src": "1386:180:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:5",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2383:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 241,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 243,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:5"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2477:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 246,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2517:37:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 248,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2568:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 250,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:5"
									},
									"scope": 254,
									"src": "2348:251:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 255,
							"src": "293:2308:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							373
						]
					},
					"id": 374,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 256,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 257,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:6",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 373,
							"linearizedBaseContracts": [
								373
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:6",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 264,
									"name": "Initialize",
									"nameLocation": "551:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "562:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 259,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "584:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 261,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:6"
									},
									"src": "545:51:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:6",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 281,
									"name": "Mint",
									"nameLocation": "1164:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1178:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1202:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1233:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 270,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1266:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 272,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1299:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 274,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1323:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1348:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:6"
									},
									"src": "1158:212:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:6",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 296,
									"name": "Collect",
									"nameLocation": "1880:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1897:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1928:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1955:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 287,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1988:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 289,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2021:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 291,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2046:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 293,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:6"
									},
									"src": "1874:194:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:6",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 311,
									"name": "Burn",
									"nameLocation": "2608:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2622:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2653:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 300,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2686:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 302,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2719:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 304,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2743:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2768:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:6"
									},
									"src": "2602:188:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:6",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 328,
									"name": "Swap",
									"nameLocation": "3407:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3421:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3453:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 317,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3512:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 319,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3536:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 321,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3566:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 323,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3593:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 325,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:6"
									},
									"src": "3401:209:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:6",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 343,
									"name": "Flash",
									"nameLocation": "4189:5:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4204:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4236:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4271:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4296:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4321:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:6"
									},
									"src": "4183:181:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:6",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 350,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4876:36:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 345,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4922:36:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 347,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:6"
									},
									"src": "4826:139:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:6",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 361,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5367:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 352,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5390:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 354,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5413:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 356,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5436:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:6"
									},
									"src": "5346:113:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:6",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 372,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "5876:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "5900:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "5927:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 367,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "5944:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 369,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:6"
									},
									"src": "5854:107:6"
								}
							],
							"scope": 374,
							"src": "159:5804:6",
							"usedErrors": [],
							"usedEvents": [
								264,
								281,
								296,
								311,
								328,
								343,
								350,
								361,
								372
							]
						}
					],
					"src": "45:5919:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							413
						]
					},
					"id": 414,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 375,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 376,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:7",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 413,
							"linearizedBaseContracts": [
								413
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:7",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:7"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "450:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:7"
									},
									"scope": 413,
									"src": "408:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:7",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:7"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "624:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:7"
									},
									"scope": 413,
									"src": "583:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:7",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:7"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "799:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:7"
									},
									"scope": 413,
									"src": "758:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:7",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:7"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "941:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 397,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:7"
									},
									"scope": 413,
									"src": "903:46:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:7",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:7"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1364:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 403,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:7"
									},
									"scope": 413,
									"src": "1318:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:7",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:7"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1799:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 409,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:7"
									},
									"scope": 413,
									"src": "1745:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 414,
							"src": "224:1586:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							439
						]
					},
					"id": 440,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 415,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 416,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:8",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 439,
							"linearizedBaseContracts": [
								439
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:8",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "464:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 418,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "484:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 420,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:8"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:8"
									},
									"scope": 439,
									"src": "440:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:8",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1041:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1068:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 428,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1102:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 430,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:8"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1151:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 433,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1168:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 435,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:8"
									},
									"scope": 439,
									"src": "1007:178:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 440,
							"src": "187:1000:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:8"
				},
				"id": 8
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							547
						]
					},
					"id": 548,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 441,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 442,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:9",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 547,
							"linearizedBaseContracts": [
								547
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:9",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:9"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1498:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 445,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1532:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 447,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1556:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 449,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:9",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1593:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 451,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:9",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1636:33:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 453,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1683:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 455,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1714:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:9"
									},
									"scope": 547,
									"src": "1421:317:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:9",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:9"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "1972:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:9"
									},
									"scope": 547,
									"src": "1917:64:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:9",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:9"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2215:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:9"
									},
									"scope": 547,
									"src": "2160:64:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:9",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:9"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2429:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 475,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2445:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 477,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:9"
									},
									"scope": 547,
									"src": "2382:79:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:9",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:9"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "2666:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 483,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:9"
									},
									"scope": 547,
									"src": "2622:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:9",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3945:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 488,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:9"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4017:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 491,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4053:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 493,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4086:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4129:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4172:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 499,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:9",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4213:38:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 501,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4265:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 503,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4300:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:9"
									},
									"scope": 547,
									"src": "3930:397:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:9",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4457:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 510,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:9"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4500:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:9"
									},
									"scope": 547,
									"src": "4437:72:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:9",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5239:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 518,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:9"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5312:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 521,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:9",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5344:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:9",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5390:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5436:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 527,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5469:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 529,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:9"
									},
									"scope": 547,
									"src": "5220:279:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:9",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6281:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:9"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6356:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 537,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6391:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 539,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:9",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6425:41:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 541,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6480:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:9"
									},
									"scope": 547,
									"src": "6259:248:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 548,
							"src": "240:6269:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:9"
				},
				"id": 9
			},
			"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
					"exportedSymbols": {
						"LowGasSafeMath": [
							677
						]
					},
					"id": 678,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 549,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LowGasSafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 550,
								"nodeType": "StructuredDocumentation",
								"src": "71:178:10",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"
							},
							"fullyImplemented": true,
							"id": 677,
							"linearizedBaseContracts": [
								677
							],
							"name": "LowGasSafeMath",
							"nameLocation": "257:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "504:42:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 561,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "523:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 562,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 553,
																				"src": "527:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 563,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 555,
																				"src": "531:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "527:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "523:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 566,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "522:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 567,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "537:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "522:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "514:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "514:25:10"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "278:152:10",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "444:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "456:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "448:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "467:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "459:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:22:10"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "501:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "493:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:11:10"
									},
									"scope": 677,
									"src": "435:111:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "779:42:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 583,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "798:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 584,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 575,
																				"src": "802:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 585,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 577,
																				"src": "806:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "802:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "798:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 588,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "797:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 589,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "812:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "797:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "789:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "789:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "789:25:10"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "552:153:10",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "719:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "731:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "723:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "742:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "734:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:22:10"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "776:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "768:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:11:10"
									},
									"scope": 677,
									"src": "710:111:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "1055:56:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 605,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "1073:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1078:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1073:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 608,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "1084:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 611,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 609,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 597,
																						"src": "1088:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 610,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 599,
																						"src": "1092:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1088:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1084:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 613,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1083:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 614,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "1097:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1083:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 616,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "1102:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1083:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1073:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1065:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "1065:39:10"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "827:154:10",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "995:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1007:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "999:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1018:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1010:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:22:10"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1052:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1044:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:11:10"
									},
									"scope": 677,
									"src": "986:125:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "1342:54:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 633,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "1361:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 634,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 625,
																					"src": "1365:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 635,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 627,
																					"src": "1369:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1365:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1361:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 638,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1360:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 639,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "1375:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1360:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 641,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 627,
																			"src": "1381:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1386:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1381:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 644,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1380:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1360:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "1352:37:10"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "1117:154:10",
										"text": "@notice Returns x + y, reverts if overflows or underflows\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1285:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1296:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1289:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 624,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1306:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1299:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 626,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:20:10"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1339:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1332:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 629,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:10:10"
									},
									"scope": 677,
									"src": "1276:120:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "1639:54:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 660,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 657,
																				"src": "1658:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 661,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "1662:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 662,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 654,
																					"src": "1666:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1662:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1658:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 665,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1657:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 666,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "1672:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1657:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 668,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "1678:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1683:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1678:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 671,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1677:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1657:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "1649:37:10"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "1402:166:10",
										"text": "@notice Returns x - y, reverts if overflows or underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1582:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1593:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1586:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 651,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1603:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1596:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 653,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:10"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1636:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1629:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 656,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:10:10"
									},
									"scope": 677,
									"src": "1573:120:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 678,
							"src": "249:1446:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1651:10"
				},
				"id": 10
			},
			"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							947
						],
						"PeripheryImmutableState": [
							708
						]
					},
					"id": 709,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 679,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"id": 680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 709,
							"sourceUnit": 948,
							"src": "71:81:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 682,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"282:24:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 947,
										"src": "282:24:11"
									},
									"id": 683,
									"nodeType": "InheritanceSpecifier",
									"src": "282:24:11"
								}
							],
							"canonicalName": "PeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 681,
								"nodeType": "StructuredDocumentation",
								"src": "154:83:11",
								"text": "@title Immutable state\n @notice Immutable state used by periphery contracts"
							},
							"fullyImplemented": true,
							"id": 708,
							"linearizedBaseContracts": [
								708,
								947
							],
							"name": "PeripheryImmutableState",
							"nameLocation": "255:23:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										940
									],
									"constant": false,
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "313:40:11",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "c45a0155",
									"id": 687,
									"mutability": "immutable",
									"name": "factory",
									"nameLocation": "392:7:11",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 686,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "383:8:11"
									},
									"scope": 708,
									"src": "358:41:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 685,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										946
									],
									"constant": false,
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "405:40:11",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "4aa4a4fc",
									"id": 691,
									"mutability": "immutable",
									"name": "WETH9",
									"nameLocation": "484:5:11",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 690,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "475:8:11"
									},
									"scope": 708,
									"src": "450:39:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 689,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "450:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "542:59:11",
										"statements": [
											{
												"expression": {
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 698,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "552:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 699,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "562:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "552:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "552:18:11"
											},
											{
												"expression": {
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 702,
														"name": "WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "580:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 703,
														"name": "_WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "588:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "580:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "580:14:11"
											}
										]
									},
									"id": 707,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "516:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "508:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "_WETH9",
												"nameLocation": "534:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "526:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:34:11"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:0:11"
									},
									"scope": 708,
									"src": "496:105:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 709,
							"src": "237:366:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:559:11"
				},
				"id": 11
			},
			"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IPeripheryImmutableState": [
							947
						],
						"IPeripheryPayments": [
							973
						],
						"IWETH9": [
							728
						],
						"PeripheryImmutableState": [
							708
						],
						"PeripheryPayments": [
							931
						],
						"TransferHelper": [
							1411
						]
					},
					"id": 932,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 932,
							"sourceUnit": 78,
							"src": "71:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
							"id": 712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 932,
							"sourceUnit": 974,
							"src": "129:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "../libraries/TransferHelper.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 932,
							"sourceUnit": 1412,
							"src": "206:41:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
							"file": "./PeripheryImmutableState.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 932,
							"sourceUnit": 709,
							"src": "249:39:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 716,
										"name": "IERC20",
										"nameLocations": [
											"341:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "341:6:12"
									},
									"id": 717,
									"nodeType": "InheritanceSpecifier",
									"src": "341:6:12"
								}
							],
							"canonicalName": "IWETH9",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 715,
								"nodeType": "StructuredDocumentation",
								"src": "290:31:12",
								"text": "@title Interface for WETH9"
							},
							"fullyImplemented": false,
							"id": 728,
							"linearizedBaseContracts": [
								728,
								77
							],
							"name": "IWETH9",
							"nameLocation": "331:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "354:46:12",
										"text": "@notice Deposit ether to get wrapped ether"
									},
									"functionSelector": "d0e30db0",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "414:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:2:12"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:0:12"
									},
									"scope": 728,
									"src": "405:36:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "447:47:12",
										"text": "@notice Withdraw wrapped ether to get ether"
									},
									"functionSelector": "2e1a7d4d",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "508:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "517:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:9:12"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "534:0:12"
									},
									"scope": 728,
									"src": "499:36:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 932,
							"src": "321:216:12",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 729,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"578:18:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 973,
										"src": "578:18:12"
									},
									"id": 730,
									"nodeType": "InheritanceSpecifier",
									"src": "578:18:12"
								},
								{
									"baseName": {
										"id": 731,
										"name": "PeripheryImmutableState",
										"nameLocations": [
											"598:23:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "598:23:12"
									},
									"id": 732,
									"nodeType": "InheritanceSpecifier",
									"src": "598:23:12"
								}
							],
							"canonicalName": "PeripheryPayments",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 931,
							"linearizedBaseContracts": [
								931,
								708,
								947,
								973
							],
							"name": "PeripheryPayments",
							"nameLocation": "557:17:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "655:58:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 736,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "673:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "677:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "673:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 738,
																"name": "WETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "687:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "673:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74205745544839",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "694:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1",
																"typeString": "literal_string \"Not WETH9\""
															},
															"value": "Not WETH9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1",
																"typeString": "literal_string \"Not WETH9\""
															}
														],
														"id": 735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "665:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "665:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "665:41:12"
											}
										]
									},
									"id": 744,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:12"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:0:12"
									},
									"scope": 931,
									"src": "628:85:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										958
									],
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "845:310:12",
										"statements": [
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "balanceWETH9",
														"nameLocation": "863:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 791,
														"src": "855:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "855:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 761,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "910:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "902:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 759,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "902:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 756,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "885:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 755,
																"name": "IWETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "878:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH9_$728_$",
																	"typeString": "type(contract IWETH9)"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "878:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH9_$728",
																"typeString": "contract IWETH9"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "892:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "878:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "855:61:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 766,
																"name": "balanceWETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "934:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 767,
																"name": "amountMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "950:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "934:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74205745544839",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "965:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
																"typeString": "literal_string \"Insufficient WETH9\""
															},
															"value": "Insufficient WETH9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
																"typeString": "literal_string \"Insufficient WETH9\""
															}
														],
														"id": 765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "926:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "926:60:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 772,
														"name": "balanceWETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "1001:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1016:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1001:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "997:152:12",
												"trueBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "1019:130:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 779,
																		"name": "balanceWETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "1056:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 776,
																				"name": "WETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 691,
																				"src": "1040:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 775,
																			"name": "IWETH9",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 728,
																			"src": "1033:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH9_$728_$",
																				"typeString": "type(contract IWETH9)"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1033:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH9_$728",
																			"typeString": "contract IWETH9"
																		}
																	},
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1047:8:12",
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 727,
																	"src": "1033:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1033:36:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 781,
															"nodeType": "ExpressionStatement",
															"src": "1033:36:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "1114:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "balanceWETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "1125:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 782,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "1083:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1098:15:12",
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1410,
																	"src": "1083:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1083:55:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 788,
															"nodeType": "ExpressionStatement",
															"src": "1083:55:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "719:34:12",
										"text": "@inheritdoc IPeripheryPayments"
									},
									"functionSelector": "49404b7c",
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "767:11:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 751,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "836:8:12"
									},
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "787:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "779:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "810:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "802:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:42:12"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:0:12"
									},
									"scope": 931,
									"src": "758:397:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										972
									],
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "1331:264:12",
										"statements": [
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "balanceToken",
														"nameLocation": "1349:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "1341:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 803,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1341:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 814,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 811,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1396:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1388:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1388:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1388:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 806,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "1371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 805,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1364:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1364:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1378:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1364:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:61:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 816,
																"name": "balanceToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1420:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 817,
																"name": "amountMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "1436:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1420:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1451:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
																"typeString": "literal_string \"Insufficient token\""
															},
															"value": "Insufficient token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
																"typeString": "literal_string \"Insufficient token\""
															}
														],
														"id": 815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1412:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1412:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "1412:60:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "balanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "1487:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1502:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1487:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "1483:106:12",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "1505:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 828,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "1547:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 829,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "1554:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 830,
																		"name": "balanceToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "1565:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 825,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "1519:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1534:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1338,
																	"src": "1519:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1519:59:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 832,
															"nodeType": "ExpressionStatement",
															"src": "1519:59:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "1161:34:12",
										"text": "@inheritdoc IPeripheryPayments"
									},
									"functionSelector": "df2ab5bb",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1209:10:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 801,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1322:8:12"
									},
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1260:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1252:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1291:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1283:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:87:12"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1331:0:12"
									},
									"scope": 931,
									"src": "1200:395:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "1687:113:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 843,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1709:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1701:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 841,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1701:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1701:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:7:12",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1701:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1725:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1701:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "1697:96:12",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 851,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1759:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1763:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1759:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 855,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1779:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																				"typeString": "contract PeripheryPayments"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																				"typeString": "contract PeripheryPayments"
																			}
																		],
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1771:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 853,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1771:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1771:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1785:7:12",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1771:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 848,
																"name": "TransferHelper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "1728:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																	"typeString": "type(library TransferHelper)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1743:15:12",
															"memberName": "safeTransferETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1410,
															"src": "1728:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256)"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1728:65:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 859,
													"nodeType": "ExpressionStatement",
													"src": "1728:65:12"
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "1601:34:12",
										"text": "@inheritdoc IPeripheryPayments"
									},
									"functionSelector": "12210e8a",
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "1649:9:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 839,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1678:8:12"
									},
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1658:2:12"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:0:12"
									},
									"scope": 931,
									"src": "1640:160:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "2115:575:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 874,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "2129:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 875,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2138:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2129:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 879,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2155:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																			"typeString": "contract PeripheryPayments"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																			"typeString": "contract PeripheryPayments"
																		}
																	],
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2147:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 877,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2147:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2147:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2161:7:12",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2147:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 882,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "2172:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2147:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2129:48:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 902,
															"name": "payer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "2370:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 905,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2387:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$931",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2379:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 903,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2379:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2379:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2370:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 926,
														"nodeType": "Block",
														"src": "2568:116:12",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 920,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 865,
																			"src": "2642:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 921,
																			"name": "payer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 867,
																			"src": "2649:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 922,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "2656:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 923,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "2667:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 917,
																			"name": "TransferHelper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "2610:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																				"typeString": "type(library TransferHelper)"
																			}
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2625:16:12",
																		"memberName": "safeTransferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1292,
																		"src": "2610:31:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,address,uint256)"
																		}
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2610:63:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 925,
																"nodeType": "ExpressionStatement",
																"src": "2610:63:12"
															}
														]
													},
													"id": 927,
													"nodeType": "IfStatement",
													"src": "2366:318:12",
													"trueBody": {
														"id": 916,
														"nodeType": "Block",
														"src": "2394:168:12",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 911,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 865,
																			"src": "2527:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 912,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "2534:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 913,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "2545:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 908,
																			"name": "TransferHelper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "2499:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																				"typeString": "type(library TransferHelper)"
																			}
																		},
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2514:12:12",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1338,
																		"src": "2499:27:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2499:52:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 915,
																"nodeType": "ExpressionStatement",
																"src": "2499:52:12"
															}
														]
													}
												},
												"id": 928,
												"nodeType": "IfStatement",
												"src": "2125:559:12",
												"trueBody": {
													"id": 901,
													"nodeType": "Block",
													"src": "2179:181:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 886,
																					"name": "WETH9",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 691,
																					"src": "2230:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 885,
																				"name": "IWETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 728,
																				"src": "2223:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IWETH9_$728_$",
																					"typeString": "type(contract IWETH9)"
																				}
																			},
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2223:13:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWETH9_$728",
																				"typeString": "contract IWETH9"
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2237:7:12",
																		"memberName": "deposit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 721,
																		"src": "2223:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$__$returns$__$",
																			"typeString": "function () payable external"
																		}
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 889,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "2252:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "2223:35:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$__$value",
																		"typeString": "function () payable external"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2223:37:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 892,
															"nodeType": "ExpressionStatement",
															"src": "2223:37:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 897,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "2332:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 898,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "2343:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 894,
																				"name": "WETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 691,
																				"src": "2316:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 893,
																			"name": "IWETH9",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 728,
																			"src": "2309:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH9_$728_$",
																				"typeString": "type(contract IWETH9)"
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2309:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH9_$728",
																			"typeString": "contract IWETH9"
																		}
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2323:8:12",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "2309:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 900,
															"nodeType": "ExpressionStatement",
															"src": "2309:40:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "1806:180:12",
										"text": "@param token The token to pay\n @param payer The entity that must pay\n @param recipient The entity that will receive payment\n @param value The amount to pay"
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pay",
									"nameLocation": "2000:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2021:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2013:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "payer",
												"nameLocation": "2044:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2036:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2067:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2059:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2094:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2086:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2003:102:12"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2115:0:12"
									},
									"scope": 931,
									"src": "1991:699:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 932,
							"src": "539:2153:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2648:12"
				},
				"id": 12
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							947
						]
					},
					"id": 948,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 933,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 934,
								"nodeType": "StructuredDocumentation",
								"src": "71:91:13",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 947,
							"linearizedBaseContracts": [
								947
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "172:24:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "203:57:13",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "274:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:13"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "307:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:13"
									},
									"scope": 947,
									"src": "265:51:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "322:40:13",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "376:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:13"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "407:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:13"
									},
									"scope": 947,
									"src": "367:49:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 948,
							"src": "162:256:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:374:13"
				},
				"id": 13
			},
			"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							973
						]
					},
					"id": 974,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 949,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryPayments",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 950,
								"nodeType": "StructuredDocumentation",
								"src": "71:92:14",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 973,
							"linearizedBaseContracts": [
								973
							],
							"name": "IPeripheryPayments",
							"nameLocation": "173:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "198:302:14",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "514:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "534:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "526:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "557:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "549:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:42:14"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:14"
									},
									"scope": 973,
									"src": "505:80:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "591:225:14",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "830:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:14"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:14"
									},
									"scope": 973,
									"src": "821:38:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "865:427:14",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1306:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1334:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1326:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1357:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1349:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1388:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1380:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:87:14"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:0:14"
									},
									"scope": 973,
									"src": "1297:124:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 974,
							"src": "163:1260:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1379:14"
				},
				"id": 14
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							1073
						],
						"IUniswapV3SwapCallback": [
							127
						]
					},
					"id": 1074,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 975,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:15"
						},
						{
							"id": 976,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "69:19:15"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 128,
							"src": "90:83:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 979,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"304:22:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 127,
										"src": "304:22:15"
									},
									"id": 980,
									"nodeType": "InheritanceSpecifier",
									"src": "304:22:15"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 978,
								"nodeType": "StructuredDocumentation",
								"src": "175:104:15",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 1073,
							"linearizedBaseContracts": [
								1073,
								127
							],
							"name": "ISwapRouter",
							"nameLocation": "289:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 997,
									"members": [
										{
											"constant": false,
											"id": 982,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "381:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "373:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 981,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "373:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 984,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "406:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "398:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 983,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "398:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 986,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "431:3:15",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "424:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 985,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "424:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "452:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "444:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 987,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "444:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "479:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "471:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 989,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "471:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "505:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "497:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 991,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "497:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "531:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "523:24:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 993,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "523:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 996,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "565:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "557:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 995,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "340:22:15",
									"nodeType": "StructDefinition",
									"scope": 1073,
									"src": "333:256:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "595:250:15",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 1006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "859:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "908:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "876:38:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$997_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 1000,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 999,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"876:22:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 997,
														"src": "876:22:15"
													},
													"referencedDeclaration": 997,
													"src": "876:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$997_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:40:15"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "950:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "942:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:19:15"
									},
									"scope": 1073,
									"src": "850:111:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 1017,
									"members": [
										{
											"constant": false,
											"id": 1008,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1007:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1001:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1007,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1001:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1010,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1029:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1021:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1009,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1021:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1012,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1056:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1048:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1011,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1048:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1014,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1082:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1074:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1013,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1074:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1016,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1108:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1100:24:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1015,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1100:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "974:16:15",
									"nodeType": "StructDefinition",
									"scope": 1073,
									"src": "967:164:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1137:273:15",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1424:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1461:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1435:32:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$1017_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 1020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1019,
														"name": "ExactInputParams",
														"nameLocations": [
															"1435:16:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1017,
														"src": "1435:16:15"
													},
													"referencedDeclaration": 1017,
													"src": "1435:16:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$1017_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1434:34:15"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1503:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1495:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1494:19:15"
									},
									"scope": 1073,
									"src": "1415:99:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 1043,
									"members": [
										{
											"constant": false,
											"id": 1028,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1569:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 1043,
											"src": "1561:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1027,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1561:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1030,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1594:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 1043,
											"src": "1586:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1029,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1586:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1032,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1619:3:15",
											"nodeType": "VariableDeclaration",
											"scope": 1043,
											"src": "1612:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1031,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1612:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1034,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1640:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1043,
											"src": "1632:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1033,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1632:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1036,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1667:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 1043,
											"src": "1659:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1035,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1659:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1038,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1693:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1043,
											"src": "1685:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1037,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1685:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1040,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1720:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 1043,
											"src": "1712:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1039,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1712:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1042,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1753:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 1043,
											"src": "1745:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1041,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1745:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1527:23:15",
									"nodeType": "StructDefinition",
									"scope": 1073,
									"src": "1520:257:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "1783:250:15",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 1052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2047:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2098:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2065:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1043_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 1046,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1045,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2065:23:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1043,
														"src": "2065:23:15"
													},
													"referencedDeclaration": 1043,
													"src": "2065:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1043_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:41:15"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2140:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2132:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2131:18:15"
									},
									"scope": 1073,
									"src": "2038:112:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 1063,
									"members": [
										{
											"constant": false,
											"id": 1054,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2197:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 1063,
											"src": "2191:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1053,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2191:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1056,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2219:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1063,
											"src": "2211:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1055,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2211:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1058,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2246:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 1063,
											"src": "2238:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1057,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2238:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1060,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2272:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1063,
											"src": "2264:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1059,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2264:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1062,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2299:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 1063,
											"src": "2291:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1061,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2291:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2163:17:15",
									"nodeType": "StructDefinition",
									"scope": 1073,
									"src": "2156:165:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "2327:284:15",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2625:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2664:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2637:33:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$1063_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 1066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1065,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2637:17:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1063,
														"src": "2637:17:15"
													},
													"referencedDeclaration": 1063,
													"src": "2637:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$1063_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2636:35:15"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2706:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2698:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:18:15"
									},
									"scope": 1073,
									"src": "2616:100:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1074,
							"src": "279:2439:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2674:15"
				},
				"id": 15
			},
			"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
					"exportedSymbols": {
						"CallbackValidation": [
							1138
						],
						"IUniswapV3Pool": [
							99
						],
						"IUniswapV3PoolActions": [
							223
						],
						"IUniswapV3PoolDerivedState": [
							254
						],
						"IUniswapV3PoolEvents": [
							373
						],
						"IUniswapV3PoolImmutables": [
							413
						],
						"IUniswapV3PoolOwnerActions": [
							439
						],
						"IUniswapV3PoolState": [
							547
						],
						"PoolAddress": [
							1240
						]
					},
					"id": 1139,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1076,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 100,
							"src": "71:66:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
							"file": "./PoolAddress.sol",
							"id": 1077,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 1241,
							"src": "138:27:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CallbackValidation",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1078,
								"nodeType": "StructuredDocumentation",
								"src": "167:68:16",
								"text": "@notice Provides validation for callbacks from Uniswap V3 Pools"
							},
							"fullyImplemented": true,
							"id": 1138,
							"linearizedBaseContracts": [
								1138
							],
							"name": "CallbackValidation",
							"nameLocation": "243:18:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "851:92:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1094,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "883:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1097,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "915:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1098,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "923:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1099,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "931:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"expression": {
																	"id": 1095,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "892:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1240_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "904:10:16",
																"memberName": "getPoolKey",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1184,
																"src": "892:22:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$1152_memory_ptr_$",
																	"typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "892:43:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														],
														"id": 1093,
														"name": "verifyCallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1104,
															1137
														],
														"referencedDeclaration": 1137,
														"src": "868:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$1152_memory_ptr_$returns$_t_contract$_IUniswapV3Pool_$99_$",
															"typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:68:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1102,
												"nodeType": "Return",
												"src": "861:75:16"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "268:411:16",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The V3 pool contract address"
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nameLocation": "693:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "725:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "717:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "750:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "742:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "774:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "766:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "797:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "790:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1086,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:99:16"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "845:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "830:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1090,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1089,
														"name": "IUniswapV3Pool",
														"nameLocations": [
															"830:14:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 99,
														"src": "830:14:16"
													},
													"referencedDeclaration": 99,
													"src": "830:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:21:16"
									},
									"scope": 1138,
									"src": "684:259:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "1339:130:16",
										"statements": [
											{
												"expression": {
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1116,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "1349:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1120,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "1398:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1121,
																		"name": "poolKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "1407:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	],
																	"expression": {
																		"id": 1118,
																		"name": "PoolAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "1371:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1240_$",
																			"typeString": "type(library PoolAddress)"
																		}
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1383:14:16",
																	"memberName": "computeAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1239,
																	"src": "1371:26:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$1152_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1371:44:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1117,
															"name": "IUniswapV3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "1356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$99_$",
																"typeString": "type(contract IUniswapV3Pool)"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1356:60:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"src": "1349:67:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "1349:67:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1127,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1434:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1438:6:16",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1434:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1131,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "1456:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	],
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1448:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1129,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1448:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1448:13:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1434:27:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1426:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1426:36:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "1426:36:16"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "949:236:16",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param poolKey The identifying key of the V3 pool\n @return pool The V3 pool contract address"
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nameLocation": "1199:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1222:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1214:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "1258:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1231:34:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1109,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1108,
														"name": "PoolAddress.PoolKey",
														"nameLocations": [
															"1231:11:16",
															"1243:7:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1152,
														"src": "1231:19:16"
													},
													"referencedDeclaration": 1152,
													"src": "1231:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1152_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:53:16"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1329:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1314:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1113,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1112,
														"name": "IUniswapV3Pool",
														"nameLocations": [
															"1314:14:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 99,
														"src": "1314:14:16"
													},
													"referencedDeclaration": 99,
													"src": "1314:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:21:16"
									},
									"scope": 1138,
									"src": "1190:279:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1139,
							"src": "235:1236:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1427:16"
				},
				"id": 16
			},
			"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
					"exportedSymbols": {
						"PoolAddress": [
							1240
						]
					},
					"id": 1241,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1140,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PoolAddress",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1141,
								"nodeType": "StructuredDocumentation",
								"src": "71:96:17",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 1240,
							"linearizedBaseContracts": [
								1240
							],
							"name": "PoolAddress",
							"nameLocation": "175:11:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1144,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nameLocation": "219:19:17",
									"nodeType": "VariableDeclaration",
									"scope": 1240,
									"src": "193:114:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1142,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "193:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
										"id": 1143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "241:66:17",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
											"typeString": "int_const 1028...(70 digits omitted)...6276"
										},
										"value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "314:43:17",
										"text": "@notice The identifying key of the pool"
									},
									"id": 1152,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "395:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 1152,
											"src": "387:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "387:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "419:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 1152,
											"src": "411:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1148,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "411:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "442:3:17",
											"nodeType": "VariableDeclaration",
											"scope": 1152,
											"src": "435:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1150,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "435:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nameLocation": "369:7:17",
									"nodeType": "StructDefinition",
									"scope": 1240,
									"src": "362:90:17",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "917:141:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1165,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "931:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1166,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "940:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "931:15:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "927:56:17",
												"trueBody": {
													"expression": {
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1168,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "949:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1169,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "957:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1170,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "948:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1171,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "968:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1172,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "976:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1173,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "967:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "948:35:17",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1175,
													"nodeType": "ExpressionStatement",
													"src": "948:35:17"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1178,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "1017:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "1033:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "1046:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 1177,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "1000:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$1152_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1009:6:17",
														"1025:6:17",
														"1041:3:17"
													],
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "1000:51:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1182,
												"nodeType": "Return",
												"src": "993:58:17"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "458:321:17",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nameLocation": "793:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "821:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "813:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "845:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "837:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "868:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "861:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1158,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "861:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:74:17"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "901:14:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1161,
														"name": "PoolKey",
														"nameLocations": [
															"901:7:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1152,
														"src": "901:7:17"
													},
													"referencedDeclaration": 1152,
													"src": "901:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1152_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:16:17"
									},
									"scope": 1240,
									"src": "784:274:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "1403:351:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1196,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "1421:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1425:6:17",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "1421:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1198,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "1434:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1438:6:17",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "1434:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1421:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1413:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1413:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "1413:32:17"
											},
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "poolHash",
														"nameLocation": "1463:8:17",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "1455:16:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1203,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1455:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1224,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "ff",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1530:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																		"typeString": "literal_string hex\"ff\""
																	}
																},
																{
																	"id": 1209,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "1555:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1213,
																						"name": "key",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1190,
																						"src": "1601:3:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																							"typeString": "struct PoolAddress.PoolKey memory"
																						}
																					},
																					"id": 1214,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1605:6:17",
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1147,
																					"src": "1601:10:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1215,
																						"name": "key",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1190,
																						"src": "1613:3:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																							"typeString": "struct PoolAddress.PoolKey memory"
																						}
																					},
																					"id": 1216,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1617:6:17",
																					"memberName": "token1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1149,
																					"src": "1613:10:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1217,
																						"name": "key",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1190,
																						"src": "1625:3:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																							"typeString": "struct PoolAddress.PoolKey memory"
																						}
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1629:3:17",
																					"memberName": "fee",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1151,
																					"src": "1625:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint24",
																						"typeString": "uint24"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint24",
																						"typeString": "uint24"
																					}
																				],
																				"expression": {
																					"id": 1211,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1590:3:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1594:6:17",
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"src": "1590:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1590:43:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1210,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "1580:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1580:54:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1221,
																	"name": "POOL_INIT_CODE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "1652:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																		"typeString": "literal_string hex\"ff\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1206,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1496:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1500:12:17",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1496:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1496:189:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1205,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1473:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:222:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1455:240:17"
											},
											{
												"expression": {
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1225,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "1705:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1232,
																				"name": "poolHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1204,
																				"src": "1736:8:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1728:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1230,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1728:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1728:17:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1720:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1228,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "1720:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1720:26:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1712:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1226,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1712:7:17",
																"typeDescriptions": {}
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1712:35:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1705:42:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "1705:42:17"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "1064:236:17",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "1314:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1337:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1329:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1361:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1346:18:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1189,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1188,
														"name": "PoolKey",
														"nameLocations": [
															"1346:7:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1152,
														"src": "1346:7:17"
													},
													"referencedDeclaration": 1152,
													"src": "1346:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1152_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:37:17"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1397:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1389:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:14:17"
									},
									"scope": 1240,
									"src": "1305:449:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1241,
							"src": "167:1589:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1712:17"
				},
				"id": 17
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							1411
						]
					},
					"id": 1412,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1242,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1243,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1412,
							"sourceUnit": 78,
							"src": "71:56:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1411,
							"linearizedBaseContracts": [
								1411
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "690:229:18",
										"statements": [
											{
												"assignments": [
													1256,
													1258
												],
												"declarations": [
													{
														"constant": false,
														"id": 1256,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "701:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1255,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1258,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:18",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "715:17:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1257,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1271,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1263,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:18",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:18",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1266,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "812:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1267,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "818:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1268,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "822:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1261,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:18",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1259,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "748:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:18",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "847:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1274,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1258,
																					"src": "859:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:18",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1280,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1258,
																					"src": "890:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1282,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1281,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:18",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1283,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1278,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:18",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1286,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "839:73:18"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:18",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "596:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "619:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "641:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "661:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:18"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:18"
									},
									"scope": 1411,
									"src": "561:358:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "1314:206:18",
										"statements": [
											{
												"assignments": [
													1303,
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "1325:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1302,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:18",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "1339:17:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1304,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1310,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:18",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:18",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1313,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "1420:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "1424:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1308,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:18",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1306,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "1360:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:18",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1319,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "1449:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1320,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1305,
																					"src": "1461:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:18",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1326,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1305,
																					"src": "1492:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1328,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1327,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:18",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1329,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1324,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:18",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1332,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:18"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:18",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1242:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1265:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1285:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:18"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:18"
									},
									"scope": 1411,
									"src": "1211:309:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "1975:205:18",
										"statements": [
											{
												"assignments": [
													1349,
													1351
												],
												"declarations": [
													{
														"constant": false,
														"id": 1349,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 1383,
														"src": "1986:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1348,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1351,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:18",
														"nodeType": "VariableDeclaration",
														"scope": 1383,
														"src": "2000:17:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1350,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1356,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:18",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:18",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1359,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "2080:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1360,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "2084:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1354,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:18",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1352,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "2021:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:18",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "2109:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1366,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1351,
																					"src": "2121:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:18",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1372,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1351,
																					"src": "2152:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1374,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1373,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:18",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1375,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1370,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:18",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1378,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:18"
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:18",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1903:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1926:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1946:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:18"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:18"
									},
									"scope": 1411,
									"src": "1873:307:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "2431:104:18",
										"statements": [
											{
												"assignments": [
													1393,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 1409,
														"src": "2442:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1392,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1403,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1398,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1394,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "2460:2:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:18",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1396,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "2475:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "2513:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 1404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:18"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:18",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2395:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2407:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:18"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:18"
									},
									"scope": 1411,
									"src": "2370:165:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1412,
							"src": "129:2408:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:18"
				},
				"id": 18
			},
			"contracts/PremaidV3.sol": {
				"ast": {
					"absolutePath": "contracts/PremaidV3.sol",
					"exportedSymbols": {
						"CallbackValidation": [
							1138
						],
						"IERC20": [
							77
						],
						"IPeripheryImmutableState": [
							947
						],
						"IPeripheryPayments": [
							973
						],
						"ISwapRouter": [
							1073
						],
						"IUniswapV3FlashCallback": [
							113
						],
						"IUniswapV3Pool": [
							99
						],
						"IUniswapV3PoolActions": [
							223
						],
						"IUniswapV3PoolDerivedState": [
							254
						],
						"IUniswapV3PoolEvents": [
							373
						],
						"IUniswapV3PoolImmutables": [
							413
						],
						"IUniswapV3PoolOwnerActions": [
							439
						],
						"IUniswapV3PoolState": [
							547
						],
						"IUniswapV3SwapCallback": [
							127
						],
						"IWETH9": [
							728
						],
						"LowGasSafeMath": [
							677
						],
						"PairFlash": [
							1820
						],
						"PeripheryImmutableState": [
							708
						],
						"PeripheryPayments": [
							931
						],
						"PoolAddress": [
							1240
						],
						"TransferHelper": [
							1411
						]
					},
					"id": 1821,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1413,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:23:19"
						},
						{
							"id": 1414,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "73:19:19"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol",
							"id": 1415,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 114,
							"src": "96:84:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
							"id": 1416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 678,
							"src": "182:65:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
							"id": 1417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 1241,
							"src": "249:67:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
							"file": "@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
							"id": 1418,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 709,
							"src": "318:74:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
							"id": 1419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 1139,
							"src": "394:74:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 1420,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 1412,
							"src": "470:70:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 1421,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 1074,
							"src": "542:68:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol",
							"file": "@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol",
							"id": 1422,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1821,
							"sourceUnit": 932,
							"src": "612:68:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1424,
										"name": "IUniswapV3FlashCallback",
										"nameLocations": [
											"819:23:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 113,
										"src": "819:23:19"
									},
									"id": 1425,
									"nodeType": "InheritanceSpecifier",
									"src": "819:23:19"
								},
								{
									"baseName": {
										"id": 1426,
										"name": "PeripheryImmutableState",
										"nameLocations": [
											"844:23:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "844:23:19"
									},
									"id": 1427,
									"nodeType": "InheritanceSpecifier",
									"src": "844:23:19"
								},
								{
									"baseName": {
										"id": 1428,
										"name": "PeripheryPayments",
										"nameLocations": [
											"869:17:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 931,
										"src": "869:17:19"
									},
									"id": 1429,
									"nodeType": "InheritanceSpecifier",
									"src": "869:17:19"
								}
							],
							"canonicalName": "PairFlash",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1423,
								"nodeType": "StructuredDocumentation",
								"src": "686:111:19",
								"text": "@title Flash contract implementation\n @notice An example contract using the Uniswap V3 flash function"
							},
							"fullyImplemented": true,
							"id": 1820,
							"linearizedBaseContracts": [
								1820,
								931,
								708,
								947,
								973,
								113
							],
							"name": "PairFlash",
							"nameLocation": "806:9:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1432,
									"libraryName": {
										"id": 1430,
										"name": "LowGasSafeMath",
										"nameLocations": [
											"900:14:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 677,
										"src": "900:14:19"
									},
									"nodeType": "UsingForDirective",
									"src": "894:33:19",
									"typeName": {
										"id": 1431,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "919:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1435,
									"libraryName": {
										"id": 1433,
										"name": "LowGasSafeMath",
										"nameLocations": [
											"939:14:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 677,
										"src": "939:14:19"
									},
									"nodeType": "UsingForDirective",
									"src": "933:32:19",
									"typeName": {
										"id": 1434,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "958:6:19",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 1438,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "1002:10:19",
									"nodeType": "VariableDeclaration",
									"scope": 1820,
									"src": "973:39:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$1073",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 1437,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1436,
											"name": "ISwapRouter",
											"nameLocations": [
												"973:11:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1073,
											"src": "973:11:19"
										},
										"referencedDeclaration": 1073,
										"src": "973:11:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$1073",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "1168:43:19",
										"statements": [
											{
												"expression": {
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1452,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "1179:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1073",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1453,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "1192:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1073",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "1179:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$1073",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "1179:24:19"
											}
										]
									},
									"id": 1457,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1448,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1443,
													"src": "1150:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1449,
													"name": "_WETH9",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1445,
													"src": "1160:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1450,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1447,
												"name": "PeripheryImmutableState",
												"nameLocations": [
													"1126:23:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "1126:23:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "1126:41:19"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "1055:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1043:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$1073",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 1440,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1439,
														"name": "ISwapRouter",
														"nameLocations": [
															"1043:11:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1073,
														"src": "1043:11:19"
													},
													"referencedDeclaration": 1073,
													"src": "1043:11:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$1073",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "1085:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1077:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "_WETH9",
												"nameLocation": "1112:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1104:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:93:19"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:0:19"
									},
									"scope": 1820,
									"src": "1021:190:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										112
									],
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "1749:3025:19",
										"statements": [
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "decoded",
														"nameLocation": "1785:7:19",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "1760:32:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
															"typeString": "struct PairFlash.FlashCallbackData"
														},
														"typeName": {
															"id": 1469,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1468,
																"name": "FlashCallbackData",
																"nameLocations": [
																	"1760:17:19"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1756,
																"src": "1760:17:19"
															},
															"referencedDeclaration": 1756,
															"src": "1760:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlashCallbackData_$1756_storage_ptr",
																"typeString": "struct PairFlash.FlashCallbackData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"initialValue": {
													"arguments": [
														{
															"id": 1473,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "1806:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 1474,
																	"name": "FlashCallbackData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "1813:17:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_FlashCallbackData_$1756_storage_ptr_$",
																		"typeString": "type(struct PairFlash.FlashCallbackData storage pointer)"
																	}
																}
															],
															"id": 1475,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1812:19:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FlashCallbackData_$1756_storage_ptr_$",
																"typeString": "type(struct PairFlash.FlashCallbackData storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_type$_t_struct$_FlashCallbackData_$1756_storage_ptr_$",
																"typeString": "type(struct PairFlash.FlashCallbackData storage pointer)"
															}
														],
														"expression": {
															"id": 1471,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1795:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1799:6:19",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1795:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1795:37:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
														"typeString": "struct PairFlash.FlashCallbackData memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1760:72:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1481,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "1877:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1482,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "1886:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																	"typeString": "struct PairFlash.FlashCallbackData memory"
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1894:7:19",
															"memberName": "poolKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1751,
															"src": "1886:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														],
														"expression": {
															"id": 1478,
															"name": "CallbackValidation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1843:18:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CallbackValidation_$1138_$",
																"typeString": "type(library CallbackValidation)"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1862:14:19",
														"memberName": "verifyCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1137,
														"src": "1843:33:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$1152_memory_ptr_$returns$_t_contract$_IUniswapV3Pool_$99_$",
															"typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:59:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "1843:59:19"
											},
											{
												"assignments": [
													1487
												],
												"declarations": [
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "1923:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "1915:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1486,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1915:7:19",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1491,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1488,
															"name": "decoded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "1932:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																"typeString": "struct PairFlash.FlashCallbackData memory"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1940:7:19",
														"memberName": "poolKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1751,
														"src": "1932:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
															"typeString": "struct PoolAddress.PoolKey memory"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1948:6:19",
													"memberName": "token0",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "1932:22:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1915:39:19"
											},
											{
												"assignments": [
													1493
												],
												"declarations": [
													{
														"constant": false,
														"id": 1493,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "1973:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "1965:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1492,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1965:7:19",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1497,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1494,
															"name": "decoded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "1982:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																"typeString": "struct PairFlash.FlashCallbackData memory"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1990:7:19",
														"memberName": "poolKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1751,
														"src": "1982:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
															"typeString": "struct PoolAddress.PoolKey memory"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1998:6:19",
													"memberName": "token1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "1982:22:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1965:39:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1501,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "2044:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1504,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1438,
																	"src": "2060:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1073",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1073",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2052:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1502,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2052:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2052:19:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1506,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "2073:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																	"typeString": "struct PairFlash.FlashCallbackData memory"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2081:7:19",
															"memberName": "amount0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1744,
															"src": "2073:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1498,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "2017:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2032:11:19",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1384,
														"src": "2017:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2017:72:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "2017:72:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1513,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "2127:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1516,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1438,
																	"src": "2143:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1073",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1073",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2135:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2135:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2135:19:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1518,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "2156:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																	"typeString": "struct PairFlash.FlashCallbackData memory"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2164:7:19",
															"memberName": "amount1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1746,
															"src": "2156:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1510,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "2100:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2115:11:19",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1384,
														"src": "2100:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2100:72:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "2100:72:19"
											},
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "amount1Min",
														"nameLocation": "2284:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "2276:18:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2276:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1526,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "2316:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																	"typeString": "struct PairFlash.FlashCallbackData memory"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2324:7:19",
															"memberName": "amount1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1746,
															"src": "2316:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1528,
															"name": "fee1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2333:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1524,
															"name": "LowGasSafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "2297:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$677_$",
																"typeString": "type(library LowGasSafeMath)"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2312:3:19",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 572,
														"src": "2297:18:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:41:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2276:62:19"
											},
											{
												"assignments": [
													1532
												],
												"declarations": [
													{
														"constant": false,
														"id": 1532,
														"mutability": "mutable",
														"name": "amount0Min",
														"nameLocation": "2357:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "2349:18:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2349:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1535,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "2389:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																	"typeString": "struct PairFlash.FlashCallbackData memory"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2397:7:19",
															"memberName": "amount0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1744,
															"src": "2389:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1537,
															"name": "fee0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "2406:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1533,
															"name": "LowGasSafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "2370:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$677_$",
																"typeString": "type(library LowGasSafeMath)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2385:3:19",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 572,
														"src": "2370:18:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:41:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2349:62:19"
											},
											{
												"assignments": [
													1541
												],
												"declarations": [
													{
														"constant": false,
														"id": 1541,
														"mutability": "mutable",
														"name": "amountOut0",
														"nameLocation": "2512:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "2504:18:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2504:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1562,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1546,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "2651:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1547,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "2690:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1548,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "2724:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																			"typeString": "struct PairFlash.FlashCallbackData memory"
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2732:8:19",
																	"memberName": "poolFee2",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1753,
																	"src": "2724:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1552,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2782:4:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PairFlash_$1820",
																				"typeString": "contract PairFlash"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PairFlash_$1820",
																				"typeString": "contract PairFlash"
																			}
																		],
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2774:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1550,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2774:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2774:13:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1554,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2820:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2826:9:19",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2820:15:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1556,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "2868:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																			"typeString": "struct PairFlash.FlashCallbackData memory"
																		}
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2876:7:19",
																	"memberName": "amount1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1746,
																	"src": "2868:15:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1558,
																	"name": "amount0Min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "2924:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2976:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"expression": {
																	"id": 1544,
																	"name": "ISwapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "2584:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1073_$",
																		"typeString": "type(contract ISwapRouter)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2596:22:19",
																"memberName": "ExactInputSingleParams",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 997,
																"src": "2584:34:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$997_storage_ptr_$",
																	"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"2642:7:19",
																"2680:8:19",
																"2719:3:19",
																"2763:9:19",
																"2810:8:19",
																"2858:8:19",
																"2906:16:19",
																"2957:17:19"
															],
															"names": [
																"tokenIn",
																"tokenOut",
																"fee",
																"recipient",
																"deadline",
																"amountIn",
																"amountOutMinimum",
																"sqrtPriceLimitX96"
															],
															"nodeType": "FunctionCall",
															"src": "2584:413:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$997_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$997_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 1542,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "2538:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$1073",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2549:16:19",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1006,
														"src": "2538:27:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$997_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:474:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2504:508:19"
											},
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "amountOut1",
														"nameLocation": "3114:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "3106:18:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3106:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1569,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "3253:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1570,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "3292:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1571,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "3326:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																			"typeString": "struct PairFlash.FlashCallbackData memory"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3334:8:19",
																	"memberName": "poolFee3",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1755,
																	"src": "3326:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1575,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3384:4:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PairFlash_$1820",
																				"typeString": "contract PairFlash"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PairFlash_$1820",
																				"typeString": "contract PairFlash"
																			}
																		],
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3376:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1573,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3376:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3376:13:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1577,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3422:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3428:9:19",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3422:15:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1579,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "3470:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																			"typeString": "struct PairFlash.FlashCallbackData memory"
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3478:7:19",
																	"memberName": "amount0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1744,
																	"src": "3470:15:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1581,
																	"name": "amount1Min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "3526:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3578:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"expression": {
																	"id": 1567,
																	"name": "ISwapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "3186:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1073_$",
																		"typeString": "type(contract ISwapRouter)"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3198:22:19",
																"memberName": "ExactInputSingleParams",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 997,
																"src": "3186:34:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$997_storage_ptr_$",
																	"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3244:7:19",
																"3282:8:19",
																"3321:3:19",
																"3365:9:19",
																"3412:8:19",
																"3460:8:19",
																"3508:16:19",
																"3559:17:19"
															],
															"names": [
																"tokenIn",
																"tokenOut",
																"fee",
																"recipient",
																"deadline",
																"amountIn",
																"amountOutMinimum",
																"sqrtPriceLimitX96"
															],
															"nodeType": "FunctionCall",
															"src": "3186:413:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$997_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$997_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 1565,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "3140:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$1073",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3151:16:19",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1006,
														"src": "3140:27:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$997_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3140:474:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3106:508:19"
											},
											{
												"assignments": [
													1587
												],
												"declarations": [
													{
														"constant": false,
														"id": 1587,
														"mutability": "mutable",
														"name": "amount0Owed",
														"nameLocation": "3738:11:19",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "3730:19:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3730:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1590,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "3771:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																	"typeString": "struct PairFlash.FlashCallbackData memory"
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3779:7:19",
															"memberName": "amount0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1744,
															"src": "3771:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1592,
															"name": "fee0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "3788:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1588,
															"name": "LowGasSafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "3752:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$677_$",
																"typeString": "type(library LowGasSafeMath)"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3767:3:19",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 572,
														"src": "3752:18:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3752:41:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3730:63:19"
											},
											{
												"assignments": [
													1596
												],
												"declarations": [
													{
														"constant": false,
														"id": 1596,
														"mutability": "mutable",
														"name": "amount1Owed",
														"nameLocation": "3812:11:19",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "3804:19:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3804:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1603,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1599,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "3845:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																	"typeString": "struct PairFlash.FlashCallbackData memory"
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3853:7:19",
															"memberName": "amount1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1746,
															"src": "3845:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1601,
															"name": "fee1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "3862:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1597,
															"name": "LowGasSafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "3826:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$677_$",
																"typeString": "type(library LowGasSafeMath)"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3841:3:19",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 572,
														"src": "3826:18:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3826:41:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3804:63:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1607,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "3907:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1610,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3923:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PairFlash_$1820",
																		"typeString": "contract PairFlash"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PairFlash_$1820",
																		"typeString": "contract PairFlash"
																	}
																],
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3915:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1608,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3915:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3915:13:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1612,
															"name": "amount0Owed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "3930:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1604,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "3880:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3895:11:19",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1384,
														"src": "3880:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3880:62:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "3880:62:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1618,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "3980:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1621,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3996:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PairFlash_$1820",
																		"typeString": "contract PairFlash"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PairFlash_$1820",
																		"typeString": "contract PairFlash"
																	}
																],
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3988:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1619,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3988:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3988:13:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1623,
															"name": "amount1Owed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "4003:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1615,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "3953:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3968:11:19",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1384,
														"src": "3953:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3953:62:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "3953:62:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1626,
														"name": "amount0Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "4032:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4046:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4032:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1640,
												"nodeType": "IfStatement",
												"src": "4028:72:19",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 1630,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "4053:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1633,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4069:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PairFlash_$1820",
																			"typeString": "contract PairFlash"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PairFlash_$1820",
																			"typeString": "contract PairFlash"
																		}
																	],
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4061:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4061:7:19",
																		"typeDescriptions": {}
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4061:13:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 1635,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4076:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4080:6:19",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4076:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1637,
																"name": "amount0Owed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "4088:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1629,
															"name": "pay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "4049:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,address,address,uint256)"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4049:51:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1639,
													"nodeType": "ExpressionStatement",
													"src": "4049:51:19"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "amount1Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "4115:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4129:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4115:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1655,
												"nodeType": "IfStatement",
												"src": "4111:72:19",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 1645,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "4136:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1648,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4152:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PairFlash_$1820",
																			"typeString": "contract PairFlash"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PairFlash_$1820",
																			"typeString": "contract PairFlash"
																		}
																	],
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4144:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1646,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4144:7:19",
																		"typeDescriptions": {}
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4144:13:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 1650,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4159:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4163:6:19",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4159:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1652,
																"name": "amount1Owed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "4171:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1644,
															"name": "pay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "4132:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,address,address,uint256)"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4132:51:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1654,
													"nodeType": "ExpressionStatement",
													"src": "4132:51:19"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1656,
														"name": "amountOut0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "4247:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1657,
														"name": "amount0Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "4260:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4247:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "4243:258:19",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "4273:228:19",
													"statements": [
														{
															"assignments": [
																1660
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1660,
																	"mutability": "mutable",
																	"name": "profit0",
																	"nameLocation": "4296:7:19",
																	"nodeType": "VariableDeclaration",
																	"scope": 1689,
																	"src": "4288:15:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1659,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4288:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1666,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1663,
																		"name": "amountOut0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1541,
																		"src": "4325:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1664,
																		"name": "amount0Owed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1587,
																		"src": "4337:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1661,
																		"name": "LowGasSafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "4306:14:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$677_$",
																			"typeString": "type(library LowGasSafeMath)"
																		}
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4321:3:19",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 594,
																	"src": "4306:18:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4306:43:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4288:61:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1670,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "4393:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1673,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4409:4:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PairFlash_$1820",
																					"typeString": "contract PairFlash"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PairFlash_$1820",
																					"typeString": "contract PairFlash"
																				}
																			],
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4401:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1671,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4401:7:19",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4401:13:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1675,
																		"name": "profit0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1660,
																		"src": "4416:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1667,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "4366:14:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4381:11:19",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1384,
																	"src": "4366:26:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4366:58:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1677,
															"nodeType": "ExpressionStatement",
															"src": "4366:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1679,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "4443:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1682,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4459:4:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PairFlash_$1820",
																					"typeString": "contract PairFlash"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PairFlash_$1820",
																					"typeString": "contract PairFlash"
																				}
																			],
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4451:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1680,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4451:7:19",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4451:13:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1684,
																			"name": "decoded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "4466:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																				"typeString": "struct PairFlash.FlashCallbackData memory"
																			}
																		},
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4474:5:19",
																		"memberName": "payer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1748,
																		"src": "4466:13:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1686,
																		"name": "profit0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1660,
																		"src": "4481:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1678,
																	"name": "pay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4439:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4439:50:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1688,
															"nodeType": "ExpressionStatement",
															"src": "4439:50:19"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "amountOut1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "4515:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1692,
														"name": "amount1Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "4528:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4515:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "4511:256:19",
												"trueBody": {
													"id": 1724,
													"nodeType": "Block",
													"src": "4541:226:19",
													"statements": [
														{
															"assignments": [
																1695
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1695,
																	"mutability": "mutable",
																	"name": "profit1",
																	"nameLocation": "4564:7:19",
																	"nodeType": "VariableDeclaration",
																	"scope": 1724,
																	"src": "4556:15:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1694,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4556:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1701,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "amountOut1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "4593:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1699,
																		"name": "amount1Owed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "4605:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1696,
																		"name": "LowGasSafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "4574:14:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$677_$",
																			"typeString": "type(library LowGasSafeMath)"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4589:3:19",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 594,
																	"src": "4574:18:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4574:43:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4556:61:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1705,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "4659:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1708,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4675:4:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PairFlash_$1820",
																					"typeString": "contract PairFlash"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PairFlash_$1820",
																					"typeString": "contract PairFlash"
																				}
																			],
																			"id": 1707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4667:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1706,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4667:7:19",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4667:13:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1710,
																		"name": "profit1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "4682:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1702,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "4632:14:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1411_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4647:11:19",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1384,
																	"src": "4632:26:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4632:58:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1712,
															"nodeType": "ExpressionStatement",
															"src": "4632:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1714,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "4709:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1717,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4725:4:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PairFlash_$1820",
																					"typeString": "contract PairFlash"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PairFlash_$1820",
																					"typeString": "contract PairFlash"
																				}
																			],
																			"id": 1716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4717:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1715,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4717:7:19",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:13:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1719,
																			"name": "decoded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "4732:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																				"typeString": "struct PairFlash.FlashCallbackData memory"
																			}
																		},
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4740:5:19",
																		"memberName": "payer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1748,
																		"src": "4732:13:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1721,
																		"name": "profit1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "4747:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1713,
																	"name": "pay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4705:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4705:50:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1723,
															"nodeType": "ExpressionStatement",
															"src": "4705:50:19"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "1219:391:19",
										"text": "@param fee0 The fee from calling flash for token0\n @param fee1 The fee from calling flash for token1\n @param data The data needed in the callback passed as FlashCallbackData from `initFlash`\n @notice implements the callback called from flash\n @dev fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed"
									},
									"functionSelector": "e9cbafb0",
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3FlashCallback",
									"nameLocation": "1625:22:19",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1466,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1740:8:19"
									},
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "fee0",
												"nameLocation": "1666:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "1658:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "fee1",
												"nameLocation": "1689:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "1681:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1719:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "1704:19:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1704:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:83:19"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1749:0:19"
									},
									"scope": 1820,
									"src": "1616:3158:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "PairFlash.FlashParams",
									"id": 1742,
									"members": [
										{
											"constant": false,
											"id": 1729,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "4986:6:19",
											"nodeType": "VariableDeclaration",
											"scope": 1742,
											"src": "4978:14:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1728,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4978:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1731,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "5011:6:19",
											"nodeType": "VariableDeclaration",
											"scope": 1742,
											"src": "5003:14:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1730,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5003:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1733,
											"mutability": "mutable",
											"name": "fee1",
											"nameLocation": "5035:4:19",
											"nodeType": "VariableDeclaration",
											"scope": 1742,
											"src": "5028:11:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1732,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5028:6:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1735,
											"mutability": "mutable",
											"name": "amount0",
											"nameLocation": "5058:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 1742,
											"src": "5050:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1734,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5050:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1737,
											"mutability": "mutable",
											"name": "amount1",
											"nameLocation": "5084:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 1742,
											"src": "5076:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1736,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5076:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1739,
											"mutability": "mutable",
											"name": "fee2",
											"nameLocation": "5109:4:19",
											"nodeType": "VariableDeclaration",
											"scope": 1742,
											"src": "5102:11:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1738,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5102:6:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1741,
											"mutability": "mutable",
											"name": "fee3",
											"nameLocation": "5131:4:19",
											"nodeType": "VariableDeclaration",
											"scope": 1742,
											"src": "5124:11:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1740,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5124:6:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashParams",
									"nameLocation": "4955:11:19",
									"nodeType": "StructDefinition",
									"scope": 1820,
									"src": "4948:195:19",
									"visibility": "public"
								},
								{
									"canonicalName": "PairFlash.FlashCallbackData",
									"id": 1756,
									"members": [
										{
											"constant": false,
											"id": 1744,
											"mutability": "mutable",
											"name": "amount0",
											"nameLocation": "5295:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 1756,
											"src": "5287:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1743,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5287:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1746,
											"mutability": "mutable",
											"name": "amount1",
											"nameLocation": "5321:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 1756,
											"src": "5313:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1745,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5313:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1748,
											"mutability": "mutable",
											"name": "payer",
											"nameLocation": "5347:5:19",
											"nodeType": "VariableDeclaration",
											"scope": 1756,
											"src": "5339:13:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1747,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5339:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1751,
											"mutability": "mutable",
											"name": "poolKey",
											"nameLocation": "5383:7:19",
											"nodeType": "VariableDeclaration",
											"scope": 1756,
											"src": "5363:27:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolKey_$1152_storage_ptr",
												"typeString": "struct PoolAddress.PoolKey"
											},
											"typeName": {
												"id": 1750,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1749,
													"name": "PoolAddress.PoolKey",
													"nameLocations": [
														"5363:11:19",
														"5375:7:19"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1152,
													"src": "5363:19:19"
												},
												"referencedDeclaration": 1152,
												"src": "5363:19:19",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1152_storage_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1753,
											"mutability": "mutable",
											"name": "poolFee2",
											"nameLocation": "5408:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 1756,
											"src": "5401:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1752,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5401:6:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1755,
											"mutability": "mutable",
											"name": "poolFee3",
											"nameLocation": "5434:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 1756,
											"src": "5427:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1754,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5427:6:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashCallbackData",
									"nameLocation": "5258:17:19",
									"nodeType": "StructDefinition",
									"scope": 1820,
									"src": "5251:199:19",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "5707:983:19",
										"statements": [
											{
												"assignments": [
													1767
												],
												"declarations": [
													{
														"constant": false,
														"id": 1767,
														"mutability": "mutable",
														"name": "poolKey",
														"nameLocation": "5745:7:19",
														"nodeType": "VariableDeclaration",
														"scope": 1818,
														"src": "5718:34:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
															"typeString": "struct PoolAddress.PoolKey"
														},
														"typeName": {
															"id": 1766,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1765,
																"name": "PoolAddress.PoolKey",
																"nameLocations": [
																	"5718:11:19",
																	"5730:7:19"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1152,
																"src": "5718:19:19"
															},
															"referencedDeclaration": 1152,
															"src": "5718:19:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$1152_storage_ptr",
																"typeString": "struct PoolAddress.PoolKey"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1777,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1770,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "5797:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
																	"typeString": "struct PairFlash.FlashParams memory"
																}
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5804:6:19",
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1729,
															"src": "5797:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1772,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "5820:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
																	"typeString": "struct PairFlash.FlashParams memory"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5827:6:19",
															"memberName": "token1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1731,
															"src": "5820:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1774,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "5840:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
																	"typeString": "struct PairFlash.FlashParams memory"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5847:4:19",
															"memberName": "fee1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1733,
															"src": "5840:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 1768,
															"name": "PoolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "5768:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1240_$",
																"typeString": "type(library PoolAddress)"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5780:7:19",
														"memberName": "PoolKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1152,
														"src": "5768:19:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$1152_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"5789:6:19",
														"5812:6:19",
														"5835:3:19"
													],
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "5768:85:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5718:135:19"
											},
											{
												"assignments": [
													1780
												],
												"declarations": [
													{
														"constant": false,
														"id": 1780,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5879:4:19",
														"nodeType": "VariableDeclaration",
														"scope": 1818,
														"src": "5864:19:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1779,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1778,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"5864:14:19"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 99,
																"src": "5864:14:19"
															},
															"referencedDeclaration": 99,
															"src": "5864:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1784,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "5928:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1785,
																	"name": "poolKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1767,
																	"src": "5937:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																],
																"expression": {
																	"id": 1782,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "5901:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1240_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5913:14:19",
																"memberName": "computeAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1239,
																"src": "5901:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$1152_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5901:44:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1781,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "5886:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$99_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:60:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5864:82:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1794,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6252:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PairFlash_$1820",
																		"typeString": "contract PairFlash"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PairFlash_$1820",
																		"typeString": "contract PairFlash"
																	}
																],
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6244:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1792,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6244:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6244:13:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1796,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "6272:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
																	"typeString": "struct PairFlash.FlashParams memory"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6279:7:19",
															"memberName": "amount0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1735,
															"src": "6272:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1798,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "6301:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
																	"typeString": "struct PairFlash.FlashParams memory"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6308:7:19",
															"memberName": "amount1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1737,
															"src": "6301:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1803,
																				"name": "params",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "6409:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
																					"typeString": "struct PairFlash.FlashParams memory"
																				}
																			},
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6416:7:19",
																			"memberName": "amount0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1735,
																			"src": "6409:14:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1805,
																				"name": "params",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "6455:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
																					"typeString": "struct PairFlash.FlashParams memory"
																				}
																			},
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6462:7:19",
																			"memberName": "amount1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1737,
																			"src": "6455:14:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1807,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6499:3:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6503:6:19",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6499:10:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1809,
																			"name": "poolKey",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "6541:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																				"typeString": "struct PoolAddress.PoolKey memory"
																			}
																		},
																		{
																			"expression": {
																				"id": 1810,
																				"name": "params",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "6581:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
																					"typeString": "struct PairFlash.FlashParams memory"
																				}
																			},
																			"id": 1811,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6588:4:19",
																			"memberName": "fee2",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1739,
																			"src": "6581:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		{
																			"expression": {
																				"id": 1812,
																				"name": "params",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "6625:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
																					"typeString": "struct PairFlash.FlashParams memory"
																				}
																			},
																			"id": 1813,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6632:4:19",
																			"memberName": "fee3",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1741,
																			"src": "6625:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_struct$_PoolKey_$1152_memory_ptr",
																				"typeString": "struct PoolAddress.PoolKey memory"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		],
																		"id": 1802,
																		"name": "FlashCallbackData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1756,
																		"src": "6359:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_FlashCallbackData_$1756_storage_ptr_$",
																			"typeString": "type(struct PairFlash.FlashCallbackData storage pointer)"
																		}
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"6400:7:19",
																		"6446:7:19",
																		"6492:5:19",
																		"6532:7:19",
																		"6571:8:19",
																		"6615:8:19"
																	],
																	"names": [
																		"amount0",
																		"amount1",
																		"payer",
																		"poolKey",
																		"poolFee2",
																		"poolFee3"
																	],
																	"nodeType": "FunctionCall",
																	"src": "6359:297:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																		"typeString": "struct PairFlash.FlashCallbackData memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_FlashCallbackData_$1756_memory_ptr",
																		"typeString": "struct PairFlash.FlashCallbackData memory"
																	}
																],
																"expression": {
																	"id": 1800,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6330:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6334:6:19",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "6330:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6330:341:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1789,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "6219:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6224:5:19",
														"memberName": "flash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 216,
														"src": "6219:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:463:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1817,
												"nodeType": "ExpressionStatement",
												"src": "6219:463:19"
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "5458:188:19",
										"text": "@param params The parameters necessary for flash and the callback, passed in as FlashParams\n @notice Calls the pools flash function with data needed in `uniswapV3FlashCallback`"
									},
									"functionSelector": "2384463b",
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initFlash",
									"nameLocation": "5661:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5690:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "5671:25:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FlashParams_$1742_memory_ptr",
													"typeString": "struct PairFlash.FlashParams"
												},
												"typeName": {
													"id": 1759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1758,
														"name": "FlashParams",
														"nameLocations": [
															"5671:11:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "5671:11:19"
													},
													"referencedDeclaration": 1742,
													"src": "5671:11:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FlashParams_$1742_storage_ptr",
														"typeString": "struct PairFlash.FlashParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5670:27:19"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5707:0:19"
									},
									"scope": 1820,
									"src": "5652:1038:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1821,
							"src": "797:5896:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "48:6647:19"
				},
				"id": 19
			}
		}
	}
}