{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract ISwapRouter",
						"name": "_swapRouter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_factory",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_WETH9",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "WETH9",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "factory",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint24",
								"name": "fee1",
								"type": "uint24"
							},
							{
								"internalType": "uint256",
								"name": "amount0",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1",
								"type": "uint256"
							},
							{
								"internalType": "uint24",
								"name": "fee2",
								"type": "uint24"
							},
							{
								"internalType": "uint24",
								"name": "fee3",
								"type": "uint24"
							}
						],
						"internalType": "struct PairFlash.FlashParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "initFlash",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "refundETH",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swapRouter",
				"outputs": [
					{
						"internalType": "contract ISwapRouter",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountMinimum",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					}
				],
				"name": "sweepToken",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "fee0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "fee1",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "uniswapV3FlashCallback",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountMinimum",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					}
				],
				"name": "unwrapWETH9",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"initFlash((address,address,uint24,uint256,uint256,uint24,uint24))": {
					"params": {
						"params": "The parameters necessary for flash and the callback, passed in as FlashParams"
					}
				},
				"refundETH()": {
					"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
				},
				"sweepToken(address,uint256,address)": {
					"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
					"params": {
						"amountMinimum": "The minimum amount of token required for a transfer",
						"recipient": "The destination address of the token",
						"token": "The contract address of the token which will be transferred to `recipient`"
					}
				},
				"uniswapV3FlashCallback(uint256,uint256,bytes)": {
					"details": "fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed",
					"params": {
						"data": "The data needed in the callback passed as FlashCallbackData from `initFlash`",
						"fee0": "The fee from calling flash for token0",
						"fee1": "The fee from calling flash for token1"
					}
				},
				"unwrapWETH9(uint256,address)": {
					"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
					"params": {
						"amountMinimum": "The minimum amount of WETH9 to unwrap",
						"recipient": "The address receiving ETH"
					}
				}
			},
			"title": "Flash contract implementation",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"initFlash((address,address,uint24,uint256,uint256,uint24,uint24))": {
					"notice": "Calls the pools flash function with data needed in `uniswapV3FlashCallback`"
				},
				"refundETH()": {
					"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
				},
				"sweepToken(address,uint256,address)": {
					"notice": "Transfers the full amount of a token held by this contract to recipient"
				},
				"uniswapV3FlashCallback(uint256,uint256,bytes)": {
					"notice": "implements the callback called from flash"
				},
				"unwrapWETH9(uint256,address)": {
					"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
				}
			},
			"notice": "An example contract using the Uniswap V3 flash function",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/PremaidV3.sol": "PairFlash"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511",
			"license": "MIT",
			"urls": [
				"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d",
				"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
			"keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
				"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol": {
			"keccak256": "0x151ba1777392771025f0fca946c95fbc16ec4b5eff05e1f236115b99bd574de2",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://738a50c25d9d26ca3fabb1865bf6a0cdd8d7a2eec9dbfbd1fc000c81fb8e2b5e",
				"dweb:/ipfs/QmQjgCiLhrq5eLJgQcVHV24MRHyf6YdVzrGH8Ms7LnSSRA"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
			"keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
				"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
			"keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
				"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
			"keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
				"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
			"keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
				"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
			"keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
				"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
			"keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
				"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
			"keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
				"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
			]
		},
		"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
			"keccak256": "0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37",
				"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp"
			]
		},
		"@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
			"keccak256": "0x969099de81e122fa24a6f60e8dad7eb76f12e3bc15b9f45d4360e7185df8a94f",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://68b174f33a501774a059c0d93f2e827bacce086d4b17c5c06c01e9eda3af89f8",
				"dweb:/ipfs/QmQHAGmzjSDnSAxfXv1Xs5TAhhsqFGNNTHJgGc6k6wa8ff"
			]
		},
		"@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol": {
			"keccak256": "0x46be79543feb5e84b0fd9513337d35e99be6a3e844424682d4587ed0d6db82bc",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://9c84201759bb7e261584162ab73b4b392f3f5f6c40dc8599c53c9ce5f1be60ef",
				"dweb:/ipfs/QmWY6mJHZ9sLHwrFUL6tQSr2F6wEGLxkJBMV4wPi6pgT9L"
			]
		},
		"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
			"keccak256": "0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f",
				"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127"
			]
		},
		"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
			"keccak256": "0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407",
				"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp"
			]
		},
		"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
			"keccak256": "0x9c14be08df9786383ce137d45f2b92d5bfea14cc98d24b7dd4a802b29be12e1a",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://d1bb0b0590412b68030d3e47a3b46b56bdb83dcc9e349ad029de64f58e8593d4",
				"dweb:/ipfs/Qme9yxt9ihCxbLBACGAL7WWmzF1huNpm4opNXREZS3H43k"
			]
		},
		"@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol": {
			"keccak256": "0xd525429de4363e28607dae2e5803ac1708405a3043bceef00c8e09ecf9b39800",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://424bc3668d08303cf9c5fd7b29bc05884328abb50394d62a2b658727457599a1",
				"dweb:/ipfs/QmciZR4eXqrCNhHWeZjtJrmCHfsz5FooiYjQV67RvDQidA"
			]
		},
		"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
			"keccak256": "0xe685c3d70b97e25e063930cf3ebc969c0e9ceff2fa2753b07469c156dd770d25",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://82c6562653dac6294174e78493c6292978d56dd81f0395ee1fdd5c2bda9c0ce1",
				"dweb:/ipfs/QmaYu9Wy3mdn9HWxGpyjSjVxGDB4i9DG2hQ6rUummM3q7e"
			]
		},
		"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
			"keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
				"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
			]
		},
		"contracts/PremaidV3.sol": {
			"keccak256": "0x20e94b3244a8635f7ec91953c31793bbfb888623537a68b5b19e22308b4b83de",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://a4b7d20e1cf3a88776e617596d432504918ba2aa0ce1b3692b925a3089d242e5",
				"dweb:/ipfs/Qmeu6A7Bhm6zXJfkJ5J42sqJeBFX9pUpkRL2dVKpmsR3sS"
			]
		}
	},
	"version": 1
}