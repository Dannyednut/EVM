{
	"id": "a3bc53cab6558e19b8b360244210af00",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/swap.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.8.20;\r\npragma abicoder v2;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/SafeERC20.sol';\r\nimport './interfaces/IUniswapV2Pair.sol';\r\nimport './interfaces/IWETH.sol';\r\nimport './Reserves.sol';\r\n\r\n\r\ncontract Swap {\r\n    using SafeERC20 for IERC20;\r\n\r\n    function swap(address swap_pool, address token_in, uint256 amount_in) external {\r\n       IUniswapV2Pair pool = IUniswapV2Pair(swap_pool);\r\n       address token0 = pool.token0();\r\n       address token1 = pool.token1();\r\n       (uint256 a, uint256 b) = getReservesV2(swap_pool);\r\n       require((token_in == token0) || (token_in == token1), 'No token in pair');\r\n       bool isbaseToken = token_in == token0 ? true : false;\r\n\r\n       IERC20(token_in).safeTransfer(swap_pool, amount_in);\r\n\r\n       (uint256 amount0Out, uint256 amount1Out) =\r\n            isbaseToken ? (uint256(0), getAmountOut(amount_in, a, b)) : (getAmountOut(amount_in, b, a), uint256(0));\r\n\r\n        IUniswapV2Pair(swap_pool).swap(amount0Out, amount1Out, address(this), new bytes(0));\r\n\r\n    }\r\n\r\n    function getAmountIn(\r\n        uint256 amountOut,\r\n        uint256 reserveIn,\r\n        uint256 reserveOut\r\n    ) internal pure returns (uint256 amountIn) {\r\n        require(amountOut > 0, 'UniswapV2Library: INSUFFICIENT_OUTPUT_AMOUNT');\r\n        require(reserveIn > 0 && reserveOut > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY');\r\n        uint256 numerator = reserveIn * amountOut * 1000; // Replace .mul() with *\r\n        uint256 denominator = (reserveOut - amountOut) * 997; // Replace .sub() with -\r\n        amountIn = (numerator / denominator) + 1;\r\n    }\r\n\r\n    // copy from UniswapV2Library\r\n    // given an input amount of an asset and pair reserves, returns the maximum output amount of the other asset\r\n    function getAmountOut(\r\n        uint256 amountIn,\r\n        uint256 reserveIn,\r\n        uint256 reserveOut\r\n    ) internal pure returns (uint256 amountOut) {\r\n        require(amountIn > 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT');\r\n        require(reserveIn > 0 && reserveOut > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY');\r\n        uint256 amountInWithFee = amountIn * 997; // Replace .mul() with *\r\n        uint256 numerator = amountInWithFee * reserveOut; // Replace .mul() with *\r\n        uint256 denominator = reserveIn * 1000 + amountInWithFee; // Replace .add() with +\r\n        amountOut = numerator / denominator;\r\n    }\r\n\r\n    function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){\r\n        IUniswapV2Pair pool = IUniswapV2Pair(pair);\r\n        address token0 = pool.token0();\r\n        address token1 = pool.token1();\r\n        reserve0 = IERC20(token0).balanceOf(pair);\r\n        reserve1 = IERC20(token1).balanceOf(pair);\r\n    }\r\n}"
			},
			"contracts/Reserves.sol": {
				"content": "// SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\npragma abicoder v2;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\r\nimport '@openzeppelin/contracts/access/Ownable.sol';\r\n\r\nimport './interfaces/IUniswapV2Pair.sol';\r\n\r\ncontract Reserves{\r\n\r\n\r\n    function reserves0(address pair) external view returns ( uint256 reserve) {\r\n        IUniswapV3Pool pool = IUniswapV3Pool(pair);\r\n        address token0 = pool.token0();\r\n        reserve = IERC20(token0).balanceOf(pair);\r\n    }\r\n    \r\n    function reserves1(address pair) external view returns ( uint256 reserve) {\r\n        IUniswapV3Pool pool = IUniswapV3Pool(pair);\r\n        address token1 = pool.token1();\r\n        reserve = IERC20(token1).balanceOf(pair);\r\n    }\r\n\r\n    function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){\r\n        IUniswapV3Pool pool = IUniswapV3Pool(pair);\r\n        address token0 = pool.token0();\r\n        address token1 = pool.token1();\r\n        reserve0 = IERC20(token0).balanceOf(pair);\r\n        reserve1 = IERC20(token1).balanceOf(pair);\r\n    }\r\n\r\n    function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){\r\n        IUniswapV2Pair pool = IUniswapV2Pair(pair);\r\n        address token0 = pool.token0();\r\n        address token1 = pool.token1();\r\n        reserve0 = IERC20(token0).balanceOf(pair);\r\n        reserve1 = IERC20(token1).balanceOf(pair);\r\n    }\r\n}"
			},
			"contracts/interfaces/IWETH.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.20;\r\n\r\ninterface IWETH {\r\n    function deposit() external payable;\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function withdraw(uint) external;\r\n}"
			},
			"contracts/interfaces/IUniswapV2Pair.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.20;\r\n\r\ninterface IUniswapV2Pair {\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes calldata data) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../ERC20/IERC20.sol\";\nimport {IERC1363} from \"../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity >=0.7.6;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.7.6;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xaa1c14b0163f67ef49aa7320ec391cacb1b914c9983916948488c2743e9cce46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c65ee59999b69eea344ec2edd7167a272d05570f9747c57b5815f75a46f717df\",\"dweb:/ipfs/QmVd5gxvhRPoRkUNAtfAZdfhmzB9hiD4CFNEWyWGF6ZPxD\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":701:9393  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":701:9393  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220434b9dfcda0f625ac72f2eb1f5a128e797553f1ea43f0255cb464a146c0769b364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220434b9dfcda0f625ac72f2eb1f5a128e797553f1ea43f0255cb464a146c0769b364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x4B SWAP14 0xFC 0xDA 0xF PUSH3 0x5AC72F 0x2E 0xB1 CREATE2 LOG1 0x28 0xE7 SWAP8 SSTORE EXTCODEHASH 0x1E LOG4 EXTCODEHASH MUL SSTORE 0xCB CHAINID BLOBBASEFEE EQ PUSH13 0x769B364736F6C634300081A00 CALLER ",
							"sourceMap": "701:8692:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220434b9dfcda0f625ac72f2eb1f5a128e797553f1ea43f0255cb464a146c0769b364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x4B SWAP14 0xFC 0xDA 0xF PUSH3 0x5AC72F 0x2E 0xB1 CREATE2 LOG1 0x28 0xE7 SWAP8 SSTORE EXTCODEHASH 0x1E LOG4 EXTCODEHASH MUL SSTORE 0xCB CHAINID BLOBBASEFEE EQ PUSH13 0x769B364736F6C634300081A00 CALLER ",
							"sourceMap": "701:8692:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 9393,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220434b9dfcda0f625ac72f2eb1f5a128e797553f1ea43f0255cb464a146c0769b364736f6c634300081a0033",
									".code": [
										{
											"begin": 701,
											"end": 9393,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 9393,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 9393,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 701,
											"end": 9393,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 9393,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 9393,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 701,
											"end": 9393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 9393,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 701,
											"end": 9393,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/Reserves.sol",
								"contracts/interfaces/IUniswapV2Pair.sol",
								"contracts/interfaces/IWETH.sol",
								"contracts/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x117e90c697941bac25f767374b16c0005717a2fc3d3e6faf29dc5880937b0fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://757f9773ad21794799283971a8fd7d3f5051eb1dfe450223a4ff19281ba8f6f1\",\"dweb:/ipfs/QmayxKBheEurmUVGh6uvc33CF8rqYQQbF4GweudknX9waZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/Reserves.sol": {
				"Reserves": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "getReservesV2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "getReservesV3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "reserves0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "reserves1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Reserves.sol\":314:1507  contract Reserves{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Reserves.sol\":314:1507  contract Reserves{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1fdd03cb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7232688e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb49bbce5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xec0a63d8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Reserves.sol\":342:569  function reserves0(address pair) external view returns ( uint256 reserve) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":816:1156  function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":581:808  function reserves1(address pair) external view returns ( uint256 reserve) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":1164:1504  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":342:569  function reserves0(address pair) external view returns ( uint256 reserve) {... */\n    tag_10:\n        /* \"contracts/Reserves.sol\":399:414  uint256 reserve */\n      0x00\n        /* \"contracts/Reserves.sol\":427:446  IUniswapV3Pool pool */\n      dup1\n        /* \"contracts/Reserves.sol\":464:468  pair */\n      dup3\n        /* \"contracts/Reserves.sol\":427:469  IUniswapV3Pool pool = IUniswapV3Pool(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":480:494  address token0 */\n      0x00\n        /* \"contracts/Reserves.sol\":497:501  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":497:508  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/Reserves.sol\":497:510  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/Reserves.sol\":480:510  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":538:544  token0 */\n      dup1\n        /* \"contracts/Reserves.sol\":531:555  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":556:560  pair */\n      dup6\n        /* \"contracts/Reserves.sol\":531:561  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/Reserves.sol\":521:561  reserve = IERC20(token0).balanceOf(pair) */\n      swap3\n      pop\n        /* \"contracts/Reserves.sol\":416:569  {... */\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":342:569  function reserves0(address pair) external view returns ( uint256 reserve) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Reserves.sol\":816:1156  function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_15:\n        /* \"contracts/Reserves.sol\":874:890  uint256 reserve0 */\n      0x00\n        /* \"contracts/Reserves.sol\":892:908  uint256 reserve1 */\n      dup1\n        /* \"contracts/Reserves.sol\":920:939  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/Reserves.sol\":957:961  pair */\n      dup4\n        /* \"contracts/Reserves.sol\":920:962  IUniswapV3Pool pool = IUniswapV3Pool(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":973:987  address token0 */\n      0x00\n        /* \"contracts/Reserves.sol\":990:994  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":990:1001  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/Reserves.sol\":990:1003  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_40:\n        /* \"contracts/Reserves.sol\":973:1003  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1014:1028  address token1 */\n      0x00\n        /* \"contracts/Reserves.sol\":1031:1035  pool */\n      dup3\n        /* \"contracts/Reserves.sol\":1031:1042  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/Reserves.sol\":1031:1044  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"contracts/Reserves.sol\":1014:1044  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1073:1079  token0 */\n      dup2\n        /* \"contracts/Reserves.sol\":1066:1090  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1091:1095  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1066:1096  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"contracts/Reserves.sol\":1055:1096  reserve0 = IERC20(token0).balanceOf(pair) */\n      swap5\n      pop\n        /* \"contracts/Reserves.sol\":1125:1131  token1 */\n      dup1\n        /* \"contracts/Reserves.sol\":1118:1142  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1143:1147  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1118:1148  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_51:\n        /* \"contracts/Reserves.sol\":1107:1148  reserve1 = IERC20(token1).balanceOf(pair) */\n      swap4\n      pop\n        /* \"contracts/Reserves.sol\":909:1156  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":816:1156  function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Reserves.sol\":581:808  function reserves1(address pair) external view returns ( uint256 reserve) {... */\n    tag_20:\n        /* \"contracts/Reserves.sol\":638:653  uint256 reserve */\n      0x00\n        /* \"contracts/Reserves.sol\":666:685  IUniswapV3Pool pool */\n      dup1\n        /* \"contracts/Reserves.sol\":703:707  pair */\n      dup3\n        /* \"contracts/Reserves.sol\":666:708  IUniswapV3Pool pool = IUniswapV3Pool(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":719:733  address token1 */\n      0x00\n        /* \"contracts/Reserves.sol\":736:740  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":736:747  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/Reserves.sol\":736:749  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_55:\n        /* \"contracts/Reserves.sol\":719:749  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":777:783  token1 */\n      dup1\n        /* \"contracts/Reserves.sol\":770:794  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":795:799  pair */\n      dup6\n        /* \"contracts/Reserves.sol\":770:800  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"contracts/Reserves.sol\":760:800  reserve = IERC20(token1).balanceOf(pair) */\n      swap3\n      pop\n        /* \"contracts/Reserves.sol\":655:808  {... */\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":581:808  function reserves1(address pair) external view returns ( uint256 reserve) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Reserves.sol\":1164:1504  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_24:\n        /* \"contracts/Reserves.sol\":1222:1238  uint256 reserve0 */\n      0x00\n        /* \"contracts/Reserves.sol\":1240:1256  uint256 reserve1 */\n      dup1\n        /* \"contracts/Reserves.sol\":1268:1287  IUniswapV2Pair pool */\n      0x00\n        /* \"contracts/Reserves.sol\":1305:1309  pair */\n      dup4\n        /* \"contracts/Reserves.sol\":1268:1310  IUniswapV2Pair pool = IUniswapV2Pair(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1321:1335  address token0 */\n      0x00\n        /* \"contracts/Reserves.sol\":1338:1342  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":1338:1349  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/Reserves.sol\":1338:1351  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_63:\n        /* \"contracts/Reserves.sol\":1321:1351  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1362:1376  address token1 */\n      0x00\n        /* \"contracts/Reserves.sol\":1379:1383  pool */\n      dup3\n        /* \"contracts/Reserves.sol\":1379:1390  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/Reserves.sol\":1379:1392  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_66:\n        /* \"contracts/Reserves.sol\":1362:1392  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1421:1427  token0 */\n      dup2\n        /* \"contracts/Reserves.sol\":1414:1438  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1439:1443  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1414:1444  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_67:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_70:\n        /* \"contracts/Reserves.sol\":1403:1444  reserve0 = IERC20(token0).balanceOf(pair) */\n      swap5\n      pop\n        /* \"contracts/Reserves.sol\":1473:1479  token1 */\n      dup1\n        /* \"contracts/Reserves.sol\":1466:1490  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1491:1495  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1466:1496  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_74:\n        /* \"contracts/Reserves.sol\":1455:1496  reserve1 = IERC20(token1).balanceOf(pair) */\n      swap4\n      pop\n        /* \"contracts/Reserves.sol\":1257:1504  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":1164:1504  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_76:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_78:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_79:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_94\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_78\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_80:\n        /* \"#utility.yul\":641:665   */\n      tag_96\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_79\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_97:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_81:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_99\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_80\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_9:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_102\n      tag_76\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":917:1036   */\n    tag_101:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_103\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_81\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_82:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_83:\n        /* \"#utility.yul\":1346:1370   */\n      tag_106\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_82\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_12:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_108\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_83\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1943   */\n    tag_17:\n        /* \"#utility.yul\":1732:1736   */\n      0x00\n        /* \"#utility.yul\":1770:1772   */\n      0x40\n        /* \"#utility.yul\":1759:1768   */\n      dup3\n        /* \"#utility.yul\":1755:1773   */\n      add\n        /* \"#utility.yul\":1747:1773   */\n      swap1\n      pop\n        /* \"#utility.yul\":1783:1854   */\n      tag_110\n        /* \"#utility.yul\":1851:1852   */\n      0x00\n        /* \"#utility.yul\":1840:1849   */\n      dup4\n        /* \"#utility.yul\":1836:1853   */\n      add\n        /* \"#utility.yul\":1827:1833   */\n      dup6\n        /* \"#utility.yul\":1783:1854   */\n      tag_83\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1864:1936   */\n      tag_111\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup4\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1908:1914   */\n      dup5\n        /* \"#utility.yul\":1864:1936   */\n      tag_83\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1611:1943   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2092   */\n    tag_84:\n        /* \"#utility.yul\":2006:2011   */\n      0x00\n        /* \"#utility.yul\":2037:2043   */\n      dup2\n        /* \"#utility.yul\":2031:2044   */\n      mload\n        /* \"#utility.yul\":2022:2044   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2086   */\n      tag_113\n        /* \"#utility.yul\":2080:2085   */\n      dup2\n        /* \"#utility.yul\":2053:2086   */\n      tag_80\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1949:2092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2098:2449   */\n    tag_30:\n        /* \"#utility.yul\":2168:2174   */\n      0x00\n        /* \"#utility.yul\":2217:2219   */\n      0x20\n        /* \"#utility.yul\":2205:2214   */\n      dup3\n        /* \"#utility.yul\":2196:2203   */\n      dup5\n        /* \"#utility.yul\":2192:2215   */\n      sub\n        /* \"#utility.yul\":2188:2220   */\n      slt\n        /* \"#utility.yul\":2185:2304   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":2223:2302   */\n      tag_116\n      tag_76\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2185:2304   */\n    tag_115:\n        /* \"#utility.yul\":2343:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2432   */\n      tag_117\n        /* \"#utility.yul\":2424:2431   */\n      dup5\n        /* \"#utility.yul\":2415:2421   */\n      dup3\n        /* \"#utility.yul\":2404:2413   */\n      dup6\n        /* \"#utility.yul\":2400:2422   */\n      add\n        /* \"#utility.yul\":2368:2432   */\n      tag_84\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2358:2432   */\n      swap2\n      pop\n        /* \"#utility.yul\":2314:2442   */\n      pop\n        /* \"#utility.yul\":2098:2449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2455:2573   */\n    tag_85:\n        /* \"#utility.yul\":2542:2566   */\n      tag_119\n        /* \"#utility.yul\":2560:2565   */\n      dup2\n        /* \"#utility.yul\":2542:2566   */\n      tag_79\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2537:2540   */\n      dup3\n        /* \"#utility.yul\":2530:2567   */\n      mstore\n        /* \"#utility.yul\":2455:2573   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2579:2801   */\n    tag_32:\n        /* \"#utility.yul\":2672:2676   */\n      0x00\n        /* \"#utility.yul\":2710:2712   */\n      0x20\n        /* \"#utility.yul\":2699:2708   */\n      dup3\n        /* \"#utility.yul\":2695:2713   */\n      add\n        /* \"#utility.yul\":2687:2713   */\n      swap1\n      pop\n        /* \"#utility.yul\":2723:2794   */\n      tag_121\n        /* \"#utility.yul\":2791:2792   */\n      0x00\n        /* \"#utility.yul\":2780:2789   */\n      dup4\n        /* \"#utility.yul\":2776:2793   */\n      add\n        /* \"#utility.yul\":2767:2773   */\n      dup5\n        /* \"#utility.yul\":2723:2794   */\n      tag_85\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2579:2801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2807:2929   */\n    tag_86:\n        /* \"#utility.yul\":2880:2904   */\n      tag_123\n        /* \"#utility.yul\":2898:2903   */\n      dup2\n        /* \"#utility.yul\":2880:2904   */\n      tag_82\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2873:2878   */\n      dup2\n        /* \"#utility.yul\":2870:2905   */\n      eq\n        /* \"#utility.yul\":2860:2923   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2919:2920   */\n      0x00\n        /* \"#utility.yul\":2916:2917   */\n      dup1\n        /* \"#utility.yul\":2909:2921   */\n      revert\n        /* \"#utility.yul\":2860:2923   */\n    tag_124:\n        /* \"#utility.yul\":2807:2929   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2935:3078   */\n    tag_87:\n        /* \"#utility.yul\":2992:2997   */\n      0x00\n        /* \"#utility.yul\":3023:3029   */\n      dup2\n        /* \"#utility.yul\":3017:3030   */\n      mload\n        /* \"#utility.yul\":3008:3030   */\n      swap1\n      pop\n        /* \"#utility.yul\":3039:3072   */\n      tag_126\n        /* \"#utility.yul\":3066:3071   */\n      dup2\n        /* \"#utility.yul\":3039:3072   */\n      tag_86\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2935:3078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3084:3435   */\n    tag_36:\n        /* \"#utility.yul\":3154:3160   */\n      0x00\n        /* \"#utility.yul\":3203:3205   */\n      0x20\n        /* \"#utility.yul\":3191:3200   */\n      dup3\n        /* \"#utility.yul\":3182:3189   */\n      dup5\n        /* \"#utility.yul\":3178:3201   */\n      sub\n        /* \"#utility.yul\":3174:3206   */\n      slt\n        /* \"#utility.yul\":3171:3290   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":3209:3288   */\n      tag_129\n      tag_76\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3171:3290   */\n    tag_128:\n        /* \"#utility.yul\":3329:3330   */\n      0x00\n        /* \"#utility.yul\":3354:3418   */\n      tag_130\n        /* \"#utility.yul\":3410:3417   */\n      dup5\n        /* \"#utility.yul\":3401:3407   */\n      dup3\n        /* \"#utility.yul\":3390:3399   */\n      dup6\n        /* \"#utility.yul\":3386:3408   */\n      add\n        /* \"#utility.yul\":3354:3418   */\n      tag_87\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3344:3418   */\n      swap2\n      pop\n        /* \"#utility.yul\":3300:3428   */\n      pop\n        /* \"#utility.yul\":3084:3435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220aee140891aea2acb9f6c68d9078b5beb4e45a34b8fc9fd789fab7830a49d01c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506108938061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631fdd03cb1461004e5780637232688e1461007e578063b49bbce5146100af578063ec0a63d8146100df575b5f80fd5b6100686004803603810190610063919061071e565b610110565b6040516100759190610761565b60405180910390f35b6100986004803603810190610093919061071e565b610206565b6040516100a692919061077a565b60405180910390f35b6100c960048036038101906100c4919061071e565b6103e8565b6040516100d69190610761565b60405180910390f35b6100f960048036038101906100f4919061071e565b6104de565b60405161010792919061077a565b60405180910390f35b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561015f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061018391906107b5565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016101be91906107ef565b602060405180830381865afa1580156101d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101fd9190610832565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610256573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027a91906107b5565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ea91906107b5565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161032591906107ef565b602060405180830381865afa158015610340573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103649190610832565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161039f91906107ef565b602060405180830381865afa1580156103ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103de9190610832565b9350505050915091565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610437573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045b91906107b5565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161049691906107ef565b602060405180830381865afa1580156104b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d59190610832565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055291906107b5565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c291906107b5565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016105fd91906107ef565b602060405180830381865afa158015610618573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063c9190610832565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161067791906107ef565b602060405180830381865afa158015610692573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b69190610832565b9350505050915091565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106ed826106c4565b9050919050565b6106fd816106e3565b8114610707575f80fd5b50565b5f81359050610718816106f4565b92915050565b5f60208284031215610733576107326106c0565b5b5f6107408482850161070a565b91505092915050565b5f819050919050565b61075b81610749565b82525050565b5f6020820190506107745f830184610752565b92915050565b5f60408201905061078d5f830185610752565b61079a6020830184610752565b9392505050565b5f815190506107af816106f4565b92915050565b5f602082840312156107ca576107c96106c0565b5b5f6107d7848285016107a1565b91505092915050565b6107e9816106e3565b82525050565b5f6020820190506108025f8301846107e0565b92915050565b61081181610749565b811461081b575f80fd5b50565b5f8151905061082c81610808565b92915050565b5f60208284031215610847576108466106c0565b5b5f6108548482850161081e565b9150509291505056fea2646970667358221220aee140891aea2acb9f6c68d9078b5beb4e45a34b8fc9fd789fab7830a49d01c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x893 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FDD03CB EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7232688E EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xB49BBCE5 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xEC0A63D8 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP3 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP3 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x618 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6ED DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FD DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x707 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x740 DUP5 DUP3 DUP6 ADD PUSH2 0x70A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75B DUP2 PUSH2 0x749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x774 PUSH0 DUP4 ADD DUP5 PUSH2 0x752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x78D PUSH0 DUP4 ADD DUP6 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x79A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x752 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7AF DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CA JUMPI PUSH2 0x7C9 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D7 DUP5 DUP3 DUP6 ADD PUSH2 0x7A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x802 PUSH0 DUP4 ADD DUP5 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x749 JUMP JUMPDEST DUP2 EQ PUSH2 0x81B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x82C DUP2 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x847 JUMPI PUSH2 0x846 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x854 DUP5 DUP3 DUP6 ADD PUSH2 0x81E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xE1 BLOCKHASH DUP10 BYTE 0xEA 0x2A 0xCB SWAP16 PUSH13 0x68D9078B5BEB4E45A34B8FC9FD PUSH25 0x9FAB7830A49D01C364736F6C634300081A0033000000000000 ",
							"sourceMap": "314:1193:15:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getReservesV2_1369": {
									"entryPoint": 1246,
									"id": 1369,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getReservesV3_1322": {
									"entryPoint": 518,
									"id": 1322,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserves0_1245": {
									"entryPoint": 272,
									"id": 1245,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@reserves1_1275": {
									"entryPoint": 1000,
									"id": 1275,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3438:19",
										"nodeType": "YulBlock",
										"src": "0:3438:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "379:81:19",
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nativeSrc": "389:65:19",
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:19",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nativeSrc": "400:54:19",
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:19",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:19",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nativeSrc": "511:51:19",
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nativeSrc": "521:35:19",
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nativeSrc": "532:24:19",
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:19",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:19",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nativeSrc": "611:79:19",
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:19",
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:19",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:19",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nativeSrc": "670:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nativeSrc": "670:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nativeSrc": "641:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nativeSrc": "631:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nativeSrc": "624:43:19",
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nativeSrc": "621:63:19",
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:19",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nativeSrc": "748:87:19",
													"nodeType": "YulBlock",
													"src": "748:87:19",
													"statements": [
														{
															"nativeSrc": "758:29:19",
															"nodeType": "YulAssignment",
															"src": "758:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:19"
																},
																"nativeSrc": "767:20:19",
																"nodeType": "YulFunctionCall",
																"src": "767:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:19"
																},
																"nativeSrc": "796:33:19",
																"nodeType": "YulFunctionCall",
																"src": "796:33:19"
															},
															"nativeSrc": "796:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:19",
														"nodeType": "YulTypedName",
														"src": "726:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:19",
														"nodeType": "YulTypedName",
														"src": "734:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:19",
														"nodeType": "YulTypedName",
														"src": "742:5:19",
														"type": ""
													}
												],
												"src": "696:139:19"
											},
											{
												"body": {
													"nativeSrc": "907:263:19",
													"nodeType": "YulBlock",
													"src": "907:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:19",
																"nodeType": "YulBlock",
																"src": "953:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:19"
																			},
																			"nativeSrc": "955:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:19"
																		},
																		"nativeSrc": "955:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:19"
																		},
																		"nativeSrc": "924:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:19",
																		"nodeType": "YulLiteral",
																		"src": "949:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:19"
																},
																"nativeSrc": "920:32:19",
																"nodeType": "YulFunctionCall",
																"src": "920:32:19"
															},
															"nativeSrc": "917:119:19",
															"nodeType": "YulIf",
															"src": "917:119:19"
														},
														{
															"nativeSrc": "1046:117:19",
															"nodeType": "YulBlock",
															"src": "1046:117:19",
															"statements": [
																{
																	"nativeSrc": "1061:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:19",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:19"
																				},
																				"nativeSrc": "1121:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:19"
																		},
																		"nativeSrc": "1100:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:19",
														"nodeType": "YulTypedName",
														"src": "877:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:19",
														"nodeType": "YulTypedName",
														"src": "888:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:19",
														"nodeType": "YulTypedName",
														"src": "900:6:19",
														"type": ""
													}
												],
												"src": "841:329:19"
											},
											{
												"body": {
													"nativeSrc": "1221:32:19",
													"nodeType": "YulBlock",
													"src": "1221:32:19",
													"statements": [
														{
															"nativeSrc": "1231:16:19",
															"nodeType": "YulAssignment",
															"src": "1231:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:19",
																"nodeType": "YulIdentifier",
																"src": "1242:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:19",
														"nodeType": "YulTypedName",
														"src": "1203:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:19",
														"nodeType": "YulTypedName",
														"src": "1213:7:19",
														"type": ""
													}
												],
												"src": "1176:77:19"
											},
											{
												"body": {
													"nativeSrc": "1324:53:19",
													"nodeType": "YulBlock",
													"src": "1324:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:19"
																		},
																		"nativeSrc": "1346:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:19"
																},
																"nativeSrc": "1334:37:19",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:19"
															},
															"nativeSrc": "1334:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:19",
														"nodeType": "YulTypedName",
														"src": "1312:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:19",
														"nodeType": "YulTypedName",
														"src": "1319:3:19",
														"type": ""
													}
												],
												"src": "1259:118:19"
											},
											{
												"body": {
													"nativeSrc": "1481:124:19",
													"nodeType": "YulBlock",
													"src": "1481:124:19",
													"statements": [
														{
															"nativeSrc": "1491:26:19",
															"nodeType": "YulAssignment",
															"src": "1491:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:19"
																},
																"nativeSrc": "1499:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:19"
																		},
																		"nativeSrc": "1580:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:19"
																},
																"nativeSrc": "1527:71:19",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:19"
															},
															"nativeSrc": "1527:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:19",
														"nodeType": "YulTypedName",
														"src": "1453:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:19",
														"nodeType": "YulTypedName",
														"src": "1465:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:19",
														"nodeType": "YulTypedName",
														"src": "1476:4:19",
														"type": ""
													}
												],
												"src": "1383:222:19"
											},
											{
												"body": {
													"nativeSrc": "1737:206:19",
													"nodeType": "YulBlock",
													"src": "1737:206:19",
													"statements": [
														{
															"nativeSrc": "1747:26:19",
															"nodeType": "YulAssignment",
															"src": "1747:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1759:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1759:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1770:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1770:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1755:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1755:3:19"
																},
																"nativeSrc": "1755:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1755:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1747:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1747:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1827:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1827:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1840:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1840:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1851:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1851:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1836:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1836:3:19"
																		},
																		"nativeSrc": "1836:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1836:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1783:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "1783:43:19"
																},
																"nativeSrc": "1783:71:19",
																"nodeType": "YulFunctionCall",
																"src": "1783:71:19"
															},
															"nativeSrc": "1783:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "1783:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1908:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1908:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1921:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1921:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1932:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1932:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1917:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1917:3:19"
																		},
																		"nativeSrc": "1917:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1917:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1864:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "1864:43:19"
																},
																"nativeSrc": "1864:72:19",
																"nodeType": "YulFunctionCall",
																"src": "1864:72:19"
															},
															"nativeSrc": "1864:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "1864:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1611:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1701:9:19",
														"nodeType": "YulTypedName",
														"src": "1701:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1713:6:19",
														"nodeType": "YulTypedName",
														"src": "1713:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1721:6:19",
														"nodeType": "YulTypedName",
														"src": "1721:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1732:4:19",
														"nodeType": "YulTypedName",
														"src": "1732:4:19",
														"type": ""
													}
												],
												"src": "1611:332:19"
											},
											{
												"body": {
													"nativeSrc": "2012:80:19",
													"nodeType": "YulBlock",
													"src": "2012:80:19",
													"statements": [
														{
															"nativeSrc": "2022:22:19",
															"nodeType": "YulAssignment",
															"src": "2022:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2037:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2037:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2031:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2031:5:19"
																},
																"nativeSrc": "2031:13:19",
																"nodeType": "YulFunctionCall",
																"src": "2031:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2022:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2022:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2080:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2080:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2053:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "2053:26:19"
																},
																"nativeSrc": "2053:33:19",
																"nodeType": "YulFunctionCall",
																"src": "2053:33:19"
															},
															"nativeSrc": "2053:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "2053:33:19"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1949:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1990:6:19",
														"nodeType": "YulTypedName",
														"src": "1990:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1998:3:19",
														"nodeType": "YulTypedName",
														"src": "1998:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2006:5:19",
														"nodeType": "YulTypedName",
														"src": "2006:5:19",
														"type": ""
													}
												],
												"src": "1949:143:19"
											},
											{
												"body": {
													"nativeSrc": "2175:274:19",
													"nodeType": "YulBlock",
													"src": "2175:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2221:83:19",
																"nodeType": "YulBlock",
																"src": "2221:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2223:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "2223:77:19"
																			},
																			"nativeSrc": "2223:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2223:79:19"
																		},
																		"nativeSrc": "2223:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2196:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2196:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2205:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2205:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2192:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2192:3:19"
																		},
																		"nativeSrc": "2192:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2192:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2217:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2217:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2188:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2188:3:19"
																},
																"nativeSrc": "2188:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2188:32:19"
															},
															"nativeSrc": "2185:119:19",
															"nodeType": "YulIf",
															"src": "2185:119:19"
														},
														{
															"nativeSrc": "2314:128:19",
															"nodeType": "YulBlock",
															"src": "2314:128:19",
															"statements": [
																{
																	"nativeSrc": "2329:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2329:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2343:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2343:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2333:6:19",
																			"nodeType": "YulTypedName",
																			"src": "2333:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2358:74:19",
																	"nodeType": "YulAssignment",
																	"src": "2358:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2404:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "2404:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2415:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2415:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2400:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2400:3:19"
																				},
																				"nativeSrc": "2400:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2400:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2424:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2424:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2368:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "2368:31:19"
																		},
																		"nativeSrc": "2368:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2368:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2358:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "2358:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "2098:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2145:9:19",
														"nodeType": "YulTypedName",
														"src": "2145:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2156:7:19",
														"nodeType": "YulTypedName",
														"src": "2156:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2168:6:19",
														"nodeType": "YulTypedName",
														"src": "2168:6:19",
														"type": ""
													}
												],
												"src": "2098:351:19"
											},
											{
												"body": {
													"nativeSrc": "2520:53:19",
													"nodeType": "YulBlock",
													"src": "2520:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2537:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2537:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2560:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2560:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2542:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "2542:17:19"
																		},
																		"nativeSrc": "2542:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2542:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2530:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:19"
																},
																"nativeSrc": "2530:37:19",
																"nodeType": "YulFunctionCall",
																"src": "2530:37:19"
															},
															"nativeSrc": "2530:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "2530:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2455:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2508:5:19",
														"nodeType": "YulTypedName",
														"src": "2508:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2515:3:19",
														"nodeType": "YulTypedName",
														"src": "2515:3:19",
														"type": ""
													}
												],
												"src": "2455:118:19"
											},
											{
												"body": {
													"nativeSrc": "2677:124:19",
													"nodeType": "YulBlock",
													"src": "2677:124:19",
													"statements": [
														{
															"nativeSrc": "2687:26:19",
															"nodeType": "YulAssignment",
															"src": "2687:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2699:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2699:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2710:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2695:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:19"
																},
																"nativeSrc": "2695:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2695:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2687:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2687:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2767:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2767:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2780:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2780:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2791:1:19",
																				"nodeType": "YulLiteral",
																				"src": "2791:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2776:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2776:3:19"
																		},
																		"nativeSrc": "2776:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2776:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2723:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "2723:43:19"
																},
																"nativeSrc": "2723:71:19",
																"nodeType": "YulFunctionCall",
																"src": "2723:71:19"
															},
															"nativeSrc": "2723:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "2723:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2579:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2649:9:19",
														"nodeType": "YulTypedName",
														"src": "2649:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2661:6:19",
														"nodeType": "YulTypedName",
														"src": "2661:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2672:4:19",
														"nodeType": "YulTypedName",
														"src": "2672:4:19",
														"type": ""
													}
												],
												"src": "2579:222:19"
											},
											{
												"body": {
													"nativeSrc": "2850:79:19",
													"nodeType": "YulBlock",
													"src": "2850:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2907:16:19",
																"nodeType": "YulBlock",
																"src": "2907:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2919:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2919:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2909:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2909:6:19"
																			},
																			"nativeSrc": "2909:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2909:12:19"
																		},
																		"nativeSrc": "2909:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2909:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2873:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2873:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2898:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2898:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2880:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "2880:17:19"
																				},
																				"nativeSrc": "2880:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2880:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2870:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "2870:2:19"
																		},
																		"nativeSrc": "2870:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2870:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2863:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:19"
																},
																"nativeSrc": "2863:43:19",
																"nodeType": "YulFunctionCall",
																"src": "2863:43:19"
															},
															"nativeSrc": "2860:63:19",
															"nodeType": "YulIf",
															"src": "2860:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2807:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2843:5:19",
														"nodeType": "YulTypedName",
														"src": "2843:5:19",
														"type": ""
													}
												],
												"src": "2807:122:19"
											},
											{
												"body": {
													"nativeSrc": "2998:80:19",
													"nodeType": "YulBlock",
													"src": "2998:80:19",
													"statements": [
														{
															"nativeSrc": "3008:22:19",
															"nodeType": "YulAssignment",
															"src": "3008:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3023:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3017:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3017:5:19"
																},
																"nativeSrc": "3017:13:19",
																"nodeType": "YulFunctionCall",
																"src": "3017:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3008:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3008:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3066:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3066:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3039:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "3039:26:19"
																},
																"nativeSrc": "3039:33:19",
																"nodeType": "YulFunctionCall",
																"src": "3039:33:19"
															},
															"nativeSrc": "3039:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "3039:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2935:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2976:6:19",
														"nodeType": "YulTypedName",
														"src": "2976:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2984:3:19",
														"nodeType": "YulTypedName",
														"src": "2984:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2992:5:19",
														"nodeType": "YulTypedName",
														"src": "2992:5:19",
														"type": ""
													}
												],
												"src": "2935:143:19"
											},
											{
												"body": {
													"nativeSrc": "3161:274:19",
													"nodeType": "YulBlock",
													"src": "3161:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3207:83:19",
																"nodeType": "YulBlock",
																"src": "3207:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3209:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3209:77:19"
																			},
																			"nativeSrc": "3209:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3209:79:19"
																		},
																		"nativeSrc": "3209:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3209:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3182:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3182:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3191:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3178:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3178:3:19"
																		},
																		"nativeSrc": "3178:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3178:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3203:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3203:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3174:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3174:3:19"
																},
																"nativeSrc": "3174:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3174:32:19"
															},
															"nativeSrc": "3171:119:19",
															"nodeType": "YulIf",
															"src": "3171:119:19"
														},
														{
															"nativeSrc": "3300:128:19",
															"nodeType": "YulBlock",
															"src": "3300:128:19",
															"statements": [
																{
																	"nativeSrc": "3315:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3315:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3329:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3329:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3319:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3319:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3344:74:19",
																	"nodeType": "YulAssignment",
																	"src": "3344:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3390:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3401:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3401:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:19"
																				},
																				"nativeSrc": "3386:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3410:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3354:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "3354:31:19"
																		},
																		"nativeSrc": "3354:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3354:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3344:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3344:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3084:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3131:9:19",
														"nodeType": "YulTypedName",
														"src": "3131:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3142:7:19",
														"nodeType": "YulTypedName",
														"src": "3142:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3154:6:19",
														"nodeType": "YulTypedName",
														"src": "3154:6:19",
														"type": ""
													}
												],
												"src": "3084:351:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631fdd03cb1461004e5780637232688e1461007e578063b49bbce5146100af578063ec0a63d8146100df575b5f80fd5b6100686004803603810190610063919061071e565b610110565b6040516100759190610761565b60405180910390f35b6100986004803603810190610093919061071e565b610206565b6040516100a692919061077a565b60405180910390f35b6100c960048036038101906100c4919061071e565b6103e8565b6040516100d69190610761565b60405180910390f35b6100f960048036038101906100f4919061071e565b6104de565b60405161010792919061077a565b60405180910390f35b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561015f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061018391906107b5565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016101be91906107ef565b602060405180830381865afa1580156101d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101fd9190610832565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610256573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027a91906107b5565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ea91906107b5565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161032591906107ef565b602060405180830381865afa158015610340573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103649190610832565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161039f91906107ef565b602060405180830381865afa1580156103ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103de9190610832565b9350505050915091565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610437573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045b91906107b5565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161049691906107ef565b602060405180830381865afa1580156104b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d59190610832565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055291906107b5565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c291906107b5565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016105fd91906107ef565b602060405180830381865afa158015610618573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063c9190610832565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161067791906107ef565b602060405180830381865afa158015610692573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b69190610832565b9350505050915091565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106ed826106c4565b9050919050565b6106fd816106e3565b8114610707575f80fd5b50565b5f81359050610718816106f4565b92915050565b5f60208284031215610733576107326106c0565b5b5f6107408482850161070a565b91505092915050565b5f819050919050565b61075b81610749565b82525050565b5f6020820190506107745f830184610752565b92915050565b5f60408201905061078d5f830185610752565b61079a6020830184610752565b9392505050565b5f815190506107af816106f4565b92915050565b5f602082840312156107ca576107c96106c0565b5b5f6107d7848285016107a1565b91505092915050565b6107e9816106e3565b82525050565b5f6020820190506108025f8301846107e0565b92915050565b61081181610749565b811461081b575f80fd5b50565b5f8151905061082c81610808565b92915050565b5f60208284031215610847576108466106c0565b5b5f6108548482850161081e565b9150509291505056fea2646970667358221220aee140891aea2acb9f6c68d9078b5beb4e45a34b8fc9fd789fab7830a49d01c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FDD03CB EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7232688E EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xB49BBCE5 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xEC0A63D8 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP3 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP3 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x618 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6ED DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FD DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x707 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x740 DUP5 DUP3 DUP6 ADD PUSH2 0x70A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75B DUP2 PUSH2 0x749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x774 PUSH0 DUP4 ADD DUP5 PUSH2 0x752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x78D PUSH0 DUP4 ADD DUP6 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x79A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x752 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7AF DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CA JUMPI PUSH2 0x7C9 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D7 DUP5 DUP3 DUP6 ADD PUSH2 0x7A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x802 PUSH0 DUP4 ADD DUP5 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x749 JUMP JUMPDEST DUP2 EQ PUSH2 0x81B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x82C DUP2 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x847 JUMPI PUSH2 0x846 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x854 DUP5 DUP3 DUP6 ADD PUSH2 0x81E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xE1 BLOCKHASH DUP10 BYTE 0xEA 0x2A 0xCB SWAP16 PUSH13 0x68D9078B5BEB4E45A34B8FC9FD PUSH25 0x9FAB7830A49D01C364736F6C634300081A0033000000000000 ",
							"sourceMap": "314:1193:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;342:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;816:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;581:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1164:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;342:227;399:15;427:19;464:4;427:42;;480:14;497:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;480:30;;538:6;531:24;;;556:4;531:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;521:40;;416:153;;342:227;;;:::o;816:340::-;874:16;892;920:19;957:4;920:42;;973:14;990:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;973:30;;1014:14;1031:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1014:30;;1073:6;1066:24;;;1091:4;1066:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1055:41;;1125:6;1118:24;;;1143:4;1118:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1107:41;;909:247;;;816:340;;;:::o;581:227::-;638:15;666:19;703:4;666:42;;719:14;736:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:30;;777:6;770:24;;;795:4;770:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;760:40;;655:153;;581:227;;;:::o;1164:340::-;1222:16;1240;1268:19;1305:4;1268:42;;1321:14;1338:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1321:30;;1362:14;1379:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1362:30;;1421:6;1414:24;;;1439:4;1414:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1403:41;;1473:6;1466:24;;;1491:4;1466:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1455:41;;1257:247;;;1164:340;;;:::o;88:117:19:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:332::-;1732:4;1770:2;1759:9;1755:18;1747:26;;1783:71;1851:1;1840:9;1836:17;1827:6;1783:71;:::i;:::-;1864:72;1932:2;1921:9;1917:18;1908:6;1864:72;:::i;:::-;1611:332;;;;;:::o;1949:143::-;2006:5;2037:6;2031:13;2022:22;;2053:33;2080:5;2053:33;:::i;:::-;1949:143;;;;:::o;2098:351::-;2168:6;2217:2;2205:9;2196:7;2192:23;2188:32;2185:119;;;2223:79;;:::i;:::-;2185:119;2343:1;2368:64;2424:7;2415:6;2404:9;2400:22;2368:64;:::i;:::-;2358:74;;2314:128;2098:351;;;;:::o;2455:118::-;2542:24;2560:5;2542:24;:::i;:::-;2537:3;2530:37;2455:118;;:::o;2579:222::-;2672:4;2710:2;2699:9;2695:18;2687:26;;2723:71;2791:1;2780:9;2776:17;2767:6;2723:71;:::i;:::-;2579:222;;;;:::o;2807:122::-;2880:24;2898:5;2880:24;:::i;:::-;2873:5;2870:35;2860:63;;2919:1;2916;2909:12;2860:63;2807:122;:::o;2935:143::-;2992:5;3023:6;3017:13;3008:22;;3039:33;3066:5;3039:33;:::i;:::-;2935:143;;;;:::o;3084:351::-;3154:6;3203:2;3191:9;3182:7;3178:23;3174:32;3171:119;;;3209:79;;:::i;:::-;3171:119;3329:1;3354:64;3410:7;3401:6;3390:9;3386:22;3354:64;:::i;:::-;3344:74;;3300:128;3084:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "439000",
								"executionCost": "472",
								"totalCost": "439472"
							},
							"external": {
								"getReservesV2(address)": "infinite",
								"getReservesV3(address)": "infinite",
								"reserves0(address)": "infinite",
								"reserves1(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aee140891aea2acb9f6c68d9078b5beb4e45a34b8fc9fd789fab7830a49d01c364736f6c634300081a0033",
									".code": [
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "1FDD03CB"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "7232688E"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "B49BBCE5"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "EC0A63D8"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 399,
											"end": 414,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 464,
											"end": 468,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 427,
											"end": 469,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 469,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 480,
											"end": 494,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 501,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 497,
											"end": 508,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 508,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 497,
											"end": 508,
											"name": "PUSH",
											"source": 15,
											"value": "DFE1681"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 497,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 510,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 480,
											"end": 510,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 480,
											"end": 510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 531,
											"end": 555,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 555,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 531,
											"end": 555,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 556,
											"end": 560,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 531,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 531,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 521,
											"end": 561,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 521,
											"end": 561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 416,
											"end": 569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 416,
											"end": 569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 874,
											"end": 890,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 908,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 961,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 920,
											"end": 962,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 920,
											"end": 962,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 973,
											"end": 987,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 994,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "PUSH",
											"source": 15,
											"value": "DFE1681"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 990,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1028,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "PUSH",
											"source": 15,
											"value": "D21220A7"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 1031,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 1091,
											"end": 1095,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 1066,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1066,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 1096,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1055,
											"end": 1096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 1118,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1118,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1107,
											"end": 1148,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1107,
											"end": 1148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 909,
											"end": 1156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 909,
											"end": 1156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 909,
											"end": 1156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 638,
											"end": 653,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 685,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 703,
											"end": 707,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 666,
											"end": 708,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 666,
											"end": 708,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 719,
											"end": 733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 740,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 736,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 747,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 736,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "D21220A7"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 736,
											"end": 749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 736,
											"end": 749,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 719,
											"end": 749,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 719,
											"end": 749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 794,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 795,
											"end": 799,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 770,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 770,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 800,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 760,
											"end": 800,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 760,
											"end": 800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 655,
											"end": 808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 655,
											"end": 808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1222,
											"end": 1238,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1256,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1287,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1309,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1310,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1335,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "PUSH",
											"source": 15,
											"value": "DFE1681"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 1338,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 1376,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "PUSH",
											"source": 15,
											"value": "D21220A7"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 1379,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1438,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1438,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1438,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 1439,
											"end": 1443,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 1414,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1414,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1473,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 1491,
											"end": 1495,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 1466,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1466,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1455,
											"end": 1496,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1455,
											"end": 1496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1257,
											"end": 1504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1257,
											"end": 1504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1257,
											"end": 1504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 19,
											"value": "78"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 19,
											"value": "79"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "78"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "79"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 19,
											"value": "81"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "81"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 19,
											"value": "82"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 19,
											"value": "83"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "82"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "83"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "tag",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1772,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "110"
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "83"
										},
										{
											"begin": 1783,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "tag",
											"source": 19,
											"value": "110"
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "83"
										},
										{
											"begin": 1864,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "tag",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "tag",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2022,
											"end": 2044,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2022,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 2080,
											"end": 2085,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2053,
											"end": 2086,
											"name": "tag",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 2053,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1949,
											"end": 2092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "tag",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2214,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2196,
											"end": 2203,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2192,
											"end": 2215,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2188,
											"end": 2220,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2223,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 2223,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 2223,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2223,
											"end": 2302,
											"name": "tag",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 2223,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "tag",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2343,
											"end": 2344,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 2424,
											"end": 2431,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2415,
											"end": 2421,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2368,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 2368,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2368,
											"end": 2432,
											"name": "tag",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 2368,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2358,
											"end": 2432,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2358,
											"end": 2432,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2314,
											"end": 2442,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2098,
											"end": 2449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2455,
											"end": 2573,
											"name": "tag",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 2455,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2542,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 2560,
											"end": 2565,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2542,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "79"
										},
										{
											"begin": 2542,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2542,
											"end": 2566,
											"name": "tag",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 2542,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2530,
											"end": 2567,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2455,
											"end": 2573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2455,
											"end": 2573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2455,
											"end": 2573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "tag",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2695,
											"end": 2713,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2687,
											"end": 2713,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2687,
											"end": 2713,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2776,
											"end": 2793,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "tag",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2579,
											"end": 2801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2807,
											"end": 2929,
											"name": "tag",
											"source": 19,
											"value": "86"
										},
										{
											"begin": 2807,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2880,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 2898,
											"end": 2903,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2880,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "82"
										},
										{
											"begin": 2880,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2880,
											"end": 2904,
											"name": "tag",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 2880,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2870,
											"end": 2905,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "124"
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2919,
											"end": 2920,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2917,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2921,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "tag",
											"source": 19,
											"value": "124"
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2807,
											"end": 2929,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2807,
											"end": 2929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "tag",
											"source": 19,
											"value": "87"
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2992,
											"end": 2997,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3008,
											"end": 3030,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3008,
											"end": 3030,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3039,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3039,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "86"
										},
										{
											"begin": 3039,
											"end": 3072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3039,
											"end": 3072,
											"name": "tag",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 3039,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2935,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "tag",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3200,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3182,
											"end": 3189,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3178,
											"end": 3201,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3174,
											"end": 3206,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3209,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 3209,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 3209,
											"end": 3288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3209,
											"end": 3288,
											"name": "tag",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 3209,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "tag",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3386,
											"end": 3408,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "87"
										},
										{
											"begin": 3354,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "tag",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3344,
											"end": 3418,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3344,
											"end": 3418,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3300,
											"end": 3428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/Reserves.sol",
								"contracts/interfaces/IUniswapV2Pair.sol",
								"contracts/interfaces/IWETH.sol",
								"contracts/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getReservesV2(address)": "ec0a63d8",
							"getReservesV3(address)": "7232688e",
							"reserves0(address)": "1fdd03cb",
							"reserves1(address)": "b49bbce5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"getReservesV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"getReservesV3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"reserves0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"reserves1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Reserves.sol\":\"Reserves\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xaa1c14b0163f67ef49aa7320ec391cacb1b914c9983916948488c2743e9cce46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c65ee59999b69eea344ec2edd7167a272d05570f9747c57b5815f75a46f717df\",\"dweb:/ipfs/QmVd5gxvhRPoRkUNAtfAZdfhmzB9hiD4CFNEWyWGF6ZPxD\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/Reserves.sol\":{\"keccak256\":\"0x002d93c540e66750ef72037cfe2ee678d1c94d5f3689f2daefaebb323c7eb5de\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://d331ae61a42d9ed0db68b0b47556b137c97fc47578e65d1b3fa329702b4187e7\",\"dweb:/ipfs/QmYcytMq6g8HdZDfnLfXHnxpfyvy52x6sHLRMh2NweJXoc\"]},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x6593d3e0444a03aabacb705c16faa5a6e345513f0a6c6a8f159c5e214bb7b385\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4e13b8a298f34db5a1ffcb0e34c517798ff7e23328bc41553281de74d798062d\",\"dweb:/ipfs/QmRPBtk5wnauyJXBDE7SQSMbV1zcDR2ZoM7iBumfZTee76\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x6593d3e0444a03aabacb705c16faa5a6e345513f0a6c6a8f159c5e214bb7b385\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4e13b8a298f34db5a1ffcb0e34c517798ff7e23328bc41553281de74d798062d\",\"dweb:/ipfs/QmRPBtk5wnauyJXBDE7SQSMbV1zcDR2ZoM7iBumfZTee76\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x69b0a5695f78a2d120ee770c924eeb75db0f8bedc7f191d79576891eea29432e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://9eaf27325a8dad0a613426352c6142ffb55c49f23266e31a87f6e90afa49944d\",\"dweb:/ipfs/QmXFkgcUXERGcJmxwF1abBt4fZyw3zKEaU7XeGPLuDpNKQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/swap.sol": {
				"Swap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "getReservesV2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "swap_pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token_in",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_in",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/swap.sol\":263:2791  contract Swap {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/swap.sol\":263:2791  contract Swap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xdf791e50\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xec0a63d8\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/swap.sol\":319:1079  function swap(address swap_pool, address token_in, uint256 amount_in) external {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/swap.sol\":2448:2788  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap3\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/swap.sol\":319:1079  function swap(address swap_pool, address token_in, uint256 amount_in) external {... */\n    tag_8:\n        /* \"contracts/swap.sol\":408:427  IUniswapV2Pair pool */\n      0x00\n        /* \"contracts/swap.sol\":445:454  swap_pool */\n      dup4\n        /* \"contracts/swap.sol\":408:455  IUniswapV2Pair pool = IUniswapV2Pair(swap_pool) */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":465:479  address token0 */\n      0x00\n        /* \"contracts/swap.sol\":482:486  pool */\n      dup2\n        /* \"contracts/swap.sol\":482:493  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/swap.sol\":482:495  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"contracts/swap.sol\":465:495  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":505:519  address token1 */\n      0x00\n        /* \"contracts/swap.sol\":522:526  pool */\n      dup3\n        /* \"contracts/swap.sol\":522:533  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/swap.sol\":522:535  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_22:\n        /* \"contracts/swap.sol\":505:535  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":546:555  uint256 a */\n      0x00\n        /* \"contracts/swap.sol\":557:566  uint256 b */\n      dup1\n        /* \"contracts/swap.sol\":570:594  getReservesV2(swap_pool) */\n      tag_23\n        /* \"contracts/swap.sol\":584:593  swap_pool */\n      dup9\n        /* \"contracts/swap.sol\":570:583  getReservesV2 */\n      tag_12\n        /* \"contracts/swap.sol\":570:594  getReservesV2(swap_pool) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/swap.sol\":545:594  (uint256 a, uint256 b) = getReservesV2(swap_pool) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/swap.sol\":625:631  token0 */\n      dup4\n        /* \"contracts/swap.sol\":613:631  token_in == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":613:621  token_in */\n      dup8\n        /* \"contracts/swap.sol\":613:631  token_in == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/swap.sol\":612:656  (token_in == token0) || (token_in == token1) */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"contracts/swap.sol\":649:655  token1 */\n      dup3\n        /* \"contracts/swap.sol\":637:655  token_in == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":637:645  token_in */\n      dup8\n        /* \"contracts/swap.sol\":637:655  token_in == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/swap.sol\":612:656  (token_in == token0) || (token_in == token1) */\n    tag_24:\n        /* \"contracts/swap.sol\":604:677  require((token_in == token0) || (token_in == token1), 'No token in pair') */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/swap.sol\":687:703  bool isbaseToken */\n      0x00\n        /* \"contracts/swap.sol\":718:724  token0 */\n      dup5\n        /* \"contracts/swap.sol\":706:724  token_in == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":706:714  token_in */\n      dup9\n        /* \"contracts/swap.sol\":706:724  token_in == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/swap.sol\":706:739  token_in == token0 ? true : false */\n      tag_28\n      jumpi\n        /* \"contracts/swap.sol\":734:739  false */\n      0x00\n        /* \"contracts/swap.sol\":706:739  token_in == token0 ? true : false */\n      jump(tag_29)\n    tag_28:\n        /* \"contracts/swap.sol\":727:731  true */\n      0x01\n        /* \"contracts/swap.sol\":706:739  token_in == token0 ? true : false */\n    tag_29:\n        /* \"contracts/swap.sol\":687:739  bool isbaseToken = token_in == token0 ? true : false */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":751:802  IERC20(token_in).safeTransfer(swap_pool, amount_in) */\n      tag_30\n        /* \"contracts/swap.sol\":781:790  swap_pool */\n      dup10\n        /* \"contracts/swap.sol\":792:801  amount_in */\n      dup9\n        /* \"contracts/swap.sol\":758:766  token_in */\n      dup11\n        /* \"contracts/swap.sol\":751:780  IERC20(token_in).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_31\n      swap1\n        /* \"contracts/swap.sol\":751:802  IERC20(token_in).safeTransfer(swap_pool, amount_in) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_30:\n        /* \"contracts/swap.sol\":815:833  uint256 amount0Out */\n      0x00\n        /* \"contracts/swap.sol\":835:853  uint256 amount1Out */\n      dup1\n        /* \"contracts/swap.sol\":870:881  isbaseToken */\n      dup3\n        /* \"contracts/swap.sol\":870:973  isbaseToken ? (uint256(0), getAmountOut(amount_in, a, b)) : (getAmountOut(amount_in, b, a), uint256(0)) */\n      tag_32\n      jumpi\n        /* \"contracts/swap.sol\":931:960  getAmountOut(amount_in, b, a) */\n      tag_33\n        /* \"contracts/swap.sol\":944:953  amount_in */\n      dup10\n        /* \"contracts/swap.sol\":955:956  b */\n      dup6\n        /* \"contracts/swap.sol\":958:959  a */\n      dup8\n        /* \"contracts/swap.sol\":931:943  getAmountOut */\n      tag_34\n        /* \"contracts/swap.sol\":931:960  getAmountOut(amount_in, b, a) */\n      jump\t// in\n    tag_33:\n        /* \"contracts/swap.sol\":970:971  0 */\n      0x00\n        /* \"contracts/swap.sol\":870:973  isbaseToken ? (uint256(0), getAmountOut(amount_in, a, b)) : (getAmountOut(amount_in, b, a), uint256(0)) */\n      jump(tag_35)\n    tag_32:\n        /* \"contracts/swap.sol\":893:894  0 */\n      0x00\n        /* \"contracts/swap.sol\":897:926  getAmountOut(amount_in, a, b) */\n      tag_36\n        /* \"contracts/swap.sol\":910:919  amount_in */\n      dup11\n        /* \"contracts/swap.sol\":921:922  a */\n      dup8\n        /* \"contracts/swap.sol\":924:925  b */\n      dup8\n        /* \"contracts/swap.sol\":897:909  getAmountOut */\n      tag_34\n        /* \"contracts/swap.sol\":897:926  getAmountOut(amount_in, a, b) */\n      jump\t// in\n    tag_36:\n        /* \"contracts/swap.sol\":870:973  isbaseToken ? (uint256(0), getAmountOut(amount_in, a, b)) : (getAmountOut(amount_in, b, a), uint256(0)) */\n    tag_35:\n        /* \"contracts/swap.sol\":814:973  (uint256 amount0Out, uint256 amount1Out) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/swap.sol\":1001:1010  swap_pool */\n      dup11\n        /* \"contracts/swap.sol\":986:1016  IUniswapV2Pair(swap_pool).swap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x022c0d9f\n        /* \"contracts/swap.sol\":1017:1027  amount0Out */\n      dup4\n        /* \"contracts/swap.sol\":1029:1039  amount1Out */\n      dup4\n        /* \"contracts/swap.sol\":1049:1053  this */\n      address\n        /* \"contracts/swap.sol\":1066:1067  0 */\n      0x00\n        /* \"contracts/swap.sol\":1056:1068  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n    tag_37:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_40:\n      pop\n        /* \"contracts/swap.sol\":986:1069  IUniswapV2Pair(swap_pool).swap(amount0Out, amount1Out, address(this), new bytes(0)) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/swap.sol\":398:1079  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/swap.sol\":319:1079  function swap(address swap_pool, address token_in, uint256 amount_in) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/swap.sol\":2448:2788  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_12:\n        /* \"contracts/swap.sol\":2506:2522  uint256 reserve0 */\n      0x00\n        /* \"contracts/swap.sol\":2524:2540  uint256 reserve1 */\n      dup1\n        /* \"contracts/swap.sol\":2552:2571  IUniswapV2Pair pool */\n      0x00\n        /* \"contracts/swap.sol\":2589:2593  pair */\n      dup4\n        /* \"contracts/swap.sol\":2552:2594  IUniswapV2Pair pool = IUniswapV2Pair(pair) */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":2605:2619  address token0 */\n      0x00\n        /* \"contracts/swap.sol\":2622:2626  pool */\n      dup2\n        /* \"contracts/swap.sol\":2622:2633  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/swap.sol\":2622:2635  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_49:\n        /* \"contracts/swap.sol\":2605:2635  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":2646:2660  address token1 */\n      0x00\n        /* \"contracts/swap.sol\":2663:2667  pool */\n      dup3\n        /* \"contracts/swap.sol\":2663:2674  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/swap.sol\":2663:2676  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_52:\n        /* \"contracts/swap.sol\":2646:2676  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":2705:2711  token0 */\n      dup2\n        /* \"contracts/swap.sol\":2698:2722  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/swap.sol\":2723:2727  pair */\n      dup8\n        /* \"contracts/swap.sol\":2698:2728  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"contracts/swap.sol\":2687:2728  reserve0 = IERC20(token0).balanceOf(pair) */\n      swap5\n      pop\n        /* \"contracts/swap.sol\":2757:2763  token1 */\n      dup1\n        /* \"contracts/swap.sol\":2750:2774  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/swap.sol\":2775:2779  pair */\n      dup8\n        /* \"contracts/swap.sol\":2750:2780  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_62:\n        /* \"contracts/swap.sol\":2739:2780  reserve1 = IERC20(token1).balanceOf(pair) */\n      swap4\n      pop\n        /* \"contracts/swap.sol\":2541:2788  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/swap.sol\":2448:2788  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1222:1382  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1304:1375  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1324:1329  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1346:1351  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1346:1360  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1363:1365  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1367:1372  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1331:1374  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1304:1323  _callOptionalReturn */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1304:1375  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1222:1382  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/swap.sol\":1805:2440  function getAmountOut(... */\n    tag_34:\n        /* \"contracts/swap.sol\":1941:1958  uint256 amountOut */\n      0x00\n        /* \"contracts/swap.sol\":1990:1991  0 */\n      dup1\n        /* \"contracts/swap.sol\":1979:1987  amountIn */\n      dup5\n        /* \"contracts/swap.sol\":1979:1991  amountIn > 0 */\n      gt\n        /* \"contracts/swap.sol\":1971:2039  require(amountIn > 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT') */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/swap.sol\":2070:2071  0 */\n      0x00\n        /* \"contracts/swap.sol\":2058:2067  reserveIn */\n      dup4\n        /* \"contracts/swap.sol\":2058:2071  reserveIn > 0 */\n      gt\n        /* \"contracts/swap.sol\":2058:2089  reserveIn > 0 && reserveOut > 0 */\n      dup1\n      iszero\n      tag_72\n      jumpi\n      pop\n        /* \"contracts/swap.sol\":2088:2089  0 */\n      0x00\n        /* \"contracts/swap.sol\":2075:2085  reserveOut */\n      dup3\n        /* \"contracts/swap.sol\":2075:2089  reserveOut > 0 */\n      gt\n        /* \"contracts/swap.sol\":2058:2089  reserveIn > 0 && reserveOut > 0 */\n    tag_72:\n        /* \"contracts/swap.sol\":2050:2134  require(reserveIn > 0 && reserveOut > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY') */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"contracts/swap.sol\":2145:2168  uint256 amountInWithFee */\n      0x00\n        /* \"contracts/swap.sol\":2182:2185  997 */\n      0x03e5\n        /* \"contracts/swap.sol\":2171:2179  amountIn */\n      dup6\n        /* \"contracts/swap.sol\":2171:2185  amountIn * 997 */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/swap.sol\":2145:2185  uint256 amountInWithFee = amountIn * 997 */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":2221:2238  uint256 numerator */\n      0x00\n        /* \"contracts/swap.sol\":2259:2269  reserveOut */\n      dup4\n        /* \"contracts/swap.sol\":2241:2256  amountInWithFee */\n      dup3\n        /* \"contracts/swap.sol\":2241:2269  amountInWithFee * reserveOut */\n      tag_78\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_78:\n        /* \"contracts/swap.sol\":2221:2269  uint256 numerator = amountInWithFee * reserveOut */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":2305:2324  uint256 denominator */\n      0x00\n        /* \"contracts/swap.sol\":2346:2361  amountInWithFee */\n      dup3\n        /* \"contracts/swap.sol\":2339:2343  1000 */\n      0x03e8\n        /* \"contracts/swap.sol\":2327:2336  reserveIn */\n      dup8\n        /* \"contracts/swap.sol\":2327:2343  reserveIn * 1000 */\n      tag_79\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_79:\n        /* \"contracts/swap.sol\":2327:2361  reserveIn * 1000 + amountInWithFee */\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"contracts/swap.sol\":2305:2361  uint256 denominator = reserveIn * 1000 + amountInWithFee */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":2421:2432  denominator */\n      dup1\n        /* \"contracts/swap.sol\":2409:2418  numerator */\n      dup3\n        /* \"contracts/swap.sol\":2409:2432  numerator / denominator */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/swap.sol\":2397:2432  amountOut = numerator / denominator */\n      swap4\n      pop\n        /* \"contracts/swap.sol\":1960:2440  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/swap.sol\":1805:2440  function getAmountOut(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7689:8409  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7769:7787  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7797:7816  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7935:7939  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7932:7933  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7925:7929  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7919:7930  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7912:7916  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7906:7910  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7902:7917  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7899:7900  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7892:7897  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7885:7890  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7880:7940  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7992:7999  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7982:8158  if iszero(success) {... */\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8036:8040  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8030:8041  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8081:8097  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8078:8079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8073:8076  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8058:8098  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8127:8143  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8122:8125  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8115:8144  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7982:8158  if iszero(success) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8185:8201  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8171:8201  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8235:8236  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8229:8237  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8214:8237  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7851:8247  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8275:8276  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8261:8271  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8261:8276  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8261:8329  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_86\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8328:8329  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8313:8324  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8313:8329  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8261:8329  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_87)\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8309:8310  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8287:8292  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8279:8305  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8279:8310  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8261:8329  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8257:8403  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8385:8390  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8352:8392  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":8257:8403  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7759:8409  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":7689:8409  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_91:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_93:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_94:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_124\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_93\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_95:\n        /* \"#utility.yul\":641:665   */\n      tag_126\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_94\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_127:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_96:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_129\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_95\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_97:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_98:\n        /* \"#utility.yul\":997:1021   */\n      tag_132\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_97\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_133:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_99:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_135\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_98\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1816   */\n    tag_7:\n        /* \"#utility.yul\":1274:1280   */\n      0x00\n        /* \"#utility.yul\":1282:1288   */\n      dup1\n        /* \"#utility.yul\":1290:1296   */\n      0x00\n        /* \"#utility.yul\":1339:1341   */\n      0x60\n        /* \"#utility.yul\":1327:1336   */\n      dup5\n        /* \"#utility.yul\":1318:1325   */\n      dup7\n        /* \"#utility.yul\":1314:1337   */\n      sub\n        /* \"#utility.yul\":1310:1342   */\n      slt\n        /* \"#utility.yul\":1307:1426   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":1345:1424   */\n      tag_138\n      tag_91\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1307:1426   */\n    tag_137:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_139\n        /* \"#utility.yul\":1535:1542   */\n      dup7\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup8\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_96\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1480:1543   */\n      swap4\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_140\n        /* \"#utility.yul\":1663:1670   */\n      dup7\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup8\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_96\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1608:1671   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_141\n        /* \"#utility.yul\":1791:1798   */\n      dup7\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup8\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_99\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1736:1799   */\n      swap2\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1197:1816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1822:2151   */\n    tag_11:\n        /* \"#utility.yul\":1881:1887   */\n      0x00\n        /* \"#utility.yul\":1930:1932   */\n      0x20\n        /* \"#utility.yul\":1918:1927   */\n      dup3\n        /* \"#utility.yul\":1909:1916   */\n      dup5\n        /* \"#utility.yul\":1905:1928   */\n      sub\n        /* \"#utility.yul\":1901:1933   */\n      slt\n        /* \"#utility.yul\":1898:2017   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1936:2015   */\n      tag_144\n      tag_91\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1898:2017   */\n    tag_143:\n        /* \"#utility.yul\":2056:2057   */\n      0x00\n        /* \"#utility.yul\":2081:2134   */\n      tag_145\n        /* \"#utility.yul\":2126:2133   */\n      dup5\n        /* \"#utility.yul\":2117:2123   */\n      dup3\n        /* \"#utility.yul\":2106:2115   */\n      dup6\n        /* \"#utility.yul\":2102:2124   */\n      add\n        /* \"#utility.yul\":2081:2134   */\n      tag_96\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2071:2134   */\n      swap2\n      pop\n        /* \"#utility.yul\":2027:2144   */\n      pop\n        /* \"#utility.yul\":1822:2151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2275   */\n    tag_100:\n        /* \"#utility.yul\":2244:2268   */\n      tag_147\n        /* \"#utility.yul\":2262:2267   */\n      dup2\n        /* \"#utility.yul\":2244:2268   */\n      tag_97\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2239:2242   */\n      dup3\n        /* \"#utility.yul\":2232:2269   */\n      mstore\n        /* \"#utility.yul\":2157:2275   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2281:2613   */\n    tag_14:\n        /* \"#utility.yul\":2402:2406   */\n      0x00\n        /* \"#utility.yul\":2440:2442   */\n      0x40\n        /* \"#utility.yul\":2429:2438   */\n      dup3\n        /* \"#utility.yul\":2425:2443   */\n      add\n        /* \"#utility.yul\":2417:2443   */\n      swap1\n      pop\n        /* \"#utility.yul\":2453:2524   */\n      tag_149\n        /* \"#utility.yul\":2521:2522   */\n      0x00\n        /* \"#utility.yul\":2510:2519   */\n      dup4\n        /* \"#utility.yul\":2506:2523   */\n      add\n        /* \"#utility.yul\":2497:2503   */\n      dup6\n        /* \"#utility.yul\":2453:2524   */\n      tag_100\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2534:2606   */\n      tag_150\n        /* \"#utility.yul\":2602:2604   */\n      0x20\n        /* \"#utility.yul\":2591:2600   */\n      dup4\n        /* \"#utility.yul\":2587:2605   */\n      add\n        /* \"#utility.yul\":2578:2584   */\n      dup5\n        /* \"#utility.yul\":2534:2606   */\n      tag_100\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2281:2613   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2619:2762   */\n    tag_101:\n        /* \"#utility.yul\":2676:2681   */\n      0x00\n        /* \"#utility.yul\":2707:2713   */\n      dup2\n        /* \"#utility.yul\":2701:2714   */\n      mload\n        /* \"#utility.yul\":2692:2714   */\n      swap1\n      pop\n        /* \"#utility.yul\":2723:2756   */\n      tag_152\n        /* \"#utility.yul\":2750:2755   */\n      dup2\n        /* \"#utility.yul\":2723:2756   */\n      tag_95\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2619:2762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2768:3119   */\n    tag_19:\n        /* \"#utility.yul\":2838:2844   */\n      0x00\n        /* \"#utility.yul\":2887:2889   */\n      0x20\n        /* \"#utility.yul\":2875:2884   */\n      dup3\n        /* \"#utility.yul\":2866:2873   */\n      dup5\n        /* \"#utility.yul\":2862:2885   */\n      sub\n        /* \"#utility.yul\":2858:2890   */\n      slt\n        /* \"#utility.yul\":2855:2974   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2893:2972   */\n      tag_155\n      tag_91\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2855:2974   */\n    tag_154:\n        /* \"#utility.yul\":3013:3014   */\n      0x00\n        /* \"#utility.yul\":3038:3102   */\n      tag_156\n        /* \"#utility.yul\":3094:3101   */\n      dup5\n        /* \"#utility.yul\":3085:3091   */\n      dup3\n        /* \"#utility.yul\":3074:3083   */\n      dup6\n        /* \"#utility.yul\":3070:3092   */\n      add\n        /* \"#utility.yul\":3038:3102   */\n      tag_101\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3028:3102   */\n      swap2\n      pop\n        /* \"#utility.yul\":2984:3112   */\n      pop\n        /* \"#utility.yul\":2768:3119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3125:3294   */\n    tag_102:\n        /* \"#utility.yul\":3209:3220   */\n      0x00\n        /* \"#utility.yul\":3243:3249   */\n      dup3\n        /* \"#utility.yul\":3238:3241   */\n      dup3\n        /* \"#utility.yul\":3231:3250   */\n      mstore\n        /* \"#utility.yul\":3283:3287   */\n      0x20\n        /* \"#utility.yul\":3278:3281   */\n      dup3\n        /* \"#utility.yul\":3274:3288   */\n      add\n        /* \"#utility.yul\":3259:3288   */\n      swap1\n      pop\n        /* \"#utility.yul\":3125:3294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3300:3466   */\n    tag_103:\n        /* \"#utility.yul\":3440:3458   */\n      0x4e6f20746f6b656e20696e207061697200000000000000000000000000000000\n        /* \"#utility.yul\":3436:3437   */\n      0x00\n        /* \"#utility.yul\":3428:3434   */\n      dup3\n        /* \"#utility.yul\":3424:3438   */\n      add\n        /* \"#utility.yul\":3417:3459   */\n      mstore\n        /* \"#utility.yul\":3300:3466   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3472:3838   */\n    tag_104:\n        /* \"#utility.yul\":3614:3617   */\n      0x00\n        /* \"#utility.yul\":3635:3702   */\n      tag_160\n        /* \"#utility.yul\":3699:3701   */\n      0x10\n        /* \"#utility.yul\":3694:3697   */\n      dup4\n        /* \"#utility.yul\":3635:3702   */\n      tag_102\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3628:3702   */\n      swap2\n      pop\n        /* \"#utility.yul\":3711:3804   */\n      tag_161\n        /* \"#utility.yul\":3800:3803   */\n      dup3\n        /* \"#utility.yul\":3711:3804   */\n      tag_103\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3829:3831   */\n      0x20\n        /* \"#utility.yul\":3824:3827   */\n      dup3\n        /* \"#utility.yul\":3820:3832   */\n      add\n        /* \"#utility.yul\":3813:3832   */\n      swap1\n      pop\n        /* \"#utility.yul\":3472:3838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3844:4263   */\n    tag_27:\n        /* \"#utility.yul\":4010:4014   */\n      0x00\n        /* \"#utility.yul\":4048:4050   */\n      0x20\n        /* \"#utility.yul\":4037:4046   */\n      dup3\n        /* \"#utility.yul\":4033:4051   */\n      add\n        /* \"#utility.yul\":4025:4051   */\n      swap1\n      pop\n        /* \"#utility.yul\":4097:4106   */\n      dup2\n        /* \"#utility.yul\":4091:4095   */\n      dup2\n        /* \"#utility.yul\":4087:4107   */\n      sub\n        /* \"#utility.yul\":4083:4084   */\n      0x00\n        /* \"#utility.yul\":4072:4081   */\n      dup4\n        /* \"#utility.yul\":4068:4085   */\n      add\n        /* \"#utility.yul\":4061:4108   */\n      mstore\n        /* \"#utility.yul\":4125:4256   */\n      tag_163\n        /* \"#utility.yul\":4251:4255   */\n      dup2\n        /* \"#utility.yul\":4125:4256   */\n      tag_104\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4117:4256   */\n      swap1\n      pop\n        /* \"#utility.yul\":3844:4263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4269:4449   */\n    tag_39:\n        /* \"#utility.yul\":4317:4394   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4314:4315   */\n      0x00\n        /* \"#utility.yul\":4307:4395   */\n      mstore\n        /* \"#utility.yul\":4414:4418   */\n      0x41\n        /* \"#utility.yul\":4411:4412   */\n      0x04\n        /* \"#utility.yul\":4404:4419   */\n      mstore\n        /* \"#utility.yul\":4438:4442   */\n      0x24\n        /* \"#utility.yul\":4435:4436   */\n      0x00\n        /* \"#utility.yul\":4428:4443   */\n      revert\n        /* \"#utility.yul\":4455:4573   */\n    tag_105:\n        /* \"#utility.yul\":4542:4566   */\n      tag_166\n        /* \"#utility.yul\":4560:4565   */\n      dup2\n        /* \"#utility.yul\":4542:4566   */\n      tag_94\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4537:4540   */\n      dup3\n        /* \"#utility.yul\":4530:4567   */\n      mstore\n        /* \"#utility.yul\":4455:4573   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4579:4677   */\n    tag_106:\n        /* \"#utility.yul\":4630:4636   */\n      0x00\n        /* \"#utility.yul\":4664:4669   */\n      dup2\n        /* \"#utility.yul\":4658:4670   */\n      mload\n        /* \"#utility.yul\":4648:4670   */\n      swap1\n      pop\n        /* \"#utility.yul\":4579:4677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4683:4851   */\n    tag_107:\n        /* \"#utility.yul\":4766:4777   */\n      0x00\n        /* \"#utility.yul\":4800:4806   */\n      dup3\n        /* \"#utility.yul\":4795:4798   */\n      dup3\n        /* \"#utility.yul\":4788:4807   */\n      mstore\n        /* \"#utility.yul\":4840:4844   */\n      0x20\n        /* \"#utility.yul\":4835:4838   */\n      dup3\n        /* \"#utility.yul\":4831:4845   */\n      add\n        /* \"#utility.yul\":4816:4845   */\n      swap1\n      pop\n        /* \"#utility.yul\":4683:4851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4857:4996   */\n    tag_108:\n        /* \"#utility.yul\":4946:4952   */\n      dup3\n        /* \"#utility.yul\":4941:4944   */\n      dup2\n        /* \"#utility.yul\":4936:4939   */\n      dup4\n        /* \"#utility.yul\":4930:4953   */\n      mcopy\n        /* \"#utility.yul\":4987:4988   */\n      0x00\n        /* \"#utility.yul\":4978:4984   */\n      dup4\n        /* \"#utility.yul\":4973:4976   */\n      dup4\n        /* \"#utility.yul\":4969:4985   */\n      add\n        /* \"#utility.yul\":4962:4989   */\n      mstore\n        /* \"#utility.yul\":4857:4996   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5002:5104   */\n    tag_109:\n        /* \"#utility.yul\":5043:5049   */\n      0x00\n        /* \"#utility.yul\":5094:5096   */\n      0x1f\n        /* \"#utility.yul\":5090:5097   */\n      not\n        /* \"#utility.yul\":5085:5087   */\n      0x1f\n        /* \"#utility.yul\":5078:5083   */\n      dup4\n        /* \"#utility.yul\":5074:5088   */\n      add\n        /* \"#utility.yul\":5070:5098   */\n      and\n        /* \"#utility.yul\":5060:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5002:5104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5110:5483   */\n    tag_110:\n        /* \"#utility.yul\":5196:5199   */\n      0x00\n        /* \"#utility.yul\":5224:5262   */\n      tag_172\n        /* \"#utility.yul\":5256:5261   */\n      dup3\n        /* \"#utility.yul\":5224:5262   */\n      tag_106\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5278:5348   */\n      tag_173\n        /* \"#utility.yul\":5341:5347   */\n      dup2\n        /* \"#utility.yul\":5336:5339   */\n      dup6\n        /* \"#utility.yul\":5278:5348   */\n      tag_107\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5271:5348   */\n      swap4\n      pop\n        /* \"#utility.yul\":5357:5422   */\n      tag_174\n        /* \"#utility.yul\":5415:5421   */\n      dup2\n        /* \"#utility.yul\":5410:5413   */\n      dup6\n        /* \"#utility.yul\":5403:5407   */\n      0x20\n        /* \"#utility.yul\":5396:5401   */\n      dup7\n        /* \"#utility.yul\":5392:5408   */\n      add\n        /* \"#utility.yul\":5357:5422   */\n      tag_108\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5447:5476   */\n      tag_175\n        /* \"#utility.yul\":5469:5475   */\n      dup2\n        /* \"#utility.yul\":5447:5476   */\n      tag_109\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5442:5445   */\n      dup5\n        /* \"#utility.yul\":5438:5477   */\n      add\n        /* \"#utility.yul\":5431:5477   */\n      swap2\n      pop\n        /* \"#utility.yul\":5200:5483   */\n      pop\n        /* \"#utility.yul\":5110:5483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5489:6129   */\n    tag_42:\n        /* \"#utility.yul\":5684:5688   */\n      0x00\n        /* \"#utility.yul\":5722:5725   */\n      0x80\n        /* \"#utility.yul\":5711:5720   */\n      dup3\n        /* \"#utility.yul\":5707:5726   */\n      add\n        /* \"#utility.yul\":5699:5726   */\n      swap1\n      pop\n        /* \"#utility.yul\":5736:5807   */\n      tag_177\n        /* \"#utility.yul\":5804:5805   */\n      0x00\n        /* \"#utility.yul\":5793:5802   */\n      dup4\n        /* \"#utility.yul\":5789:5806   */\n      add\n        /* \"#utility.yul\":5780:5786   */\n      dup8\n        /* \"#utility.yul\":5736:5807   */\n      tag_100\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5817:5889   */\n      tag_178\n        /* \"#utility.yul\":5885:5887   */\n      0x20\n        /* \"#utility.yul\":5874:5883   */\n      dup4\n        /* \"#utility.yul\":5870:5888   */\n      add\n        /* \"#utility.yul\":5861:5867   */\n      dup7\n        /* \"#utility.yul\":5817:5889   */\n      tag_100\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5899:5971   */\n      tag_179\n        /* \"#utility.yul\":5967:5969   */\n      0x40\n        /* \"#utility.yul\":5956:5965   */\n      dup4\n        /* \"#utility.yul\":5952:5970   */\n      add\n        /* \"#utility.yul\":5943:5949   */\n      dup6\n        /* \"#utility.yul\":5899:5971   */\n      tag_105\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6018:6027   */\n      dup2\n        /* \"#utility.yul\":6012:6016   */\n      dup2\n        /* \"#utility.yul\":6008:6028   */\n      sub\n        /* \"#utility.yul\":6003:6005   */\n      0x60\n        /* \"#utility.yul\":5992:6001   */\n      dup4\n        /* \"#utility.yul\":5988:6006   */\n      add\n        /* \"#utility.yul\":5981:6029   */\n      mstore\n        /* \"#utility.yul\":6046:6122   */\n      tag_180\n        /* \"#utility.yul\":6117:6121   */\n      dup2\n        /* \"#utility.yul\":6108:6114   */\n      dup5\n        /* \"#utility.yul\":6046:6122   */\n      tag_110\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6038:6122   */\n      swap1\n      pop\n        /* \"#utility.yul\":5489:6129   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6135:6357   */\n    tag_54:\n        /* \"#utility.yul\":6228:6232   */\n      0x00\n        /* \"#utility.yul\":6266:6268   */\n      0x20\n        /* \"#utility.yul\":6255:6264   */\n      dup3\n        /* \"#utility.yul\":6251:6269   */\n      add\n        /* \"#utility.yul\":6243:6269   */\n      swap1\n      pop\n        /* \"#utility.yul\":6279:6350   */\n      tag_182\n        /* \"#utility.yul\":6347:6348   */\n      0x00\n        /* \"#utility.yul\":6336:6345   */\n      dup4\n        /* \"#utility.yul\":6332:6349   */\n      add\n        /* \"#utility.yul\":6323:6329   */\n      dup5\n        /* \"#utility.yul\":6279:6350   */\n      tag_105\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6135:6357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6363:6506   */\n    tag_111:\n        /* \"#utility.yul\":6420:6425   */\n      0x00\n        /* \"#utility.yul\":6451:6457   */\n      dup2\n        /* \"#utility.yul\":6445:6458   */\n      mload\n        /* \"#utility.yul\":6436:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6467:6500   */\n      tag_184\n        /* \"#utility.yul\":6494:6499   */\n      dup2\n        /* \"#utility.yul\":6467:6500   */\n      tag_98\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6363:6506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6512:6863   */\n    tag_58:\n        /* \"#utility.yul\":6582:6588   */\n      0x00\n        /* \"#utility.yul\":6631:6633   */\n      0x20\n        /* \"#utility.yul\":6619:6628   */\n      dup3\n        /* \"#utility.yul\":6610:6617   */\n      dup5\n        /* \"#utility.yul\":6606:6629   */\n      sub\n        /* \"#utility.yul\":6602:6634   */\n      slt\n        /* \"#utility.yul\":6599:6718   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":6637:6716   */\n      tag_187\n      tag_91\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6599:6718   */\n    tag_186:\n        /* \"#utility.yul\":6757:6758   */\n      0x00\n        /* \"#utility.yul\":6782:6846   */\n      tag_188\n        /* \"#utility.yul\":6838:6845   */\n      dup5\n        /* \"#utility.yul\":6829:6835   */\n      dup3\n        /* \"#utility.yul\":6818:6827   */\n      dup6\n        /* \"#utility.yul\":6814:6836   */\n      add\n        /* \"#utility.yul\":6782:6846   */\n      tag_111\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6772:6846   */\n      swap2\n      pop\n        /* \"#utility.yul\":6728:6856   */\n      pop\n        /* \"#utility.yul\":6512:6863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6869:7201   */\n    tag_66:\n        /* \"#utility.yul\":6990:6994   */\n      0x00\n        /* \"#utility.yul\":7028:7030   */\n      0x40\n        /* \"#utility.yul\":7017:7026   */\n      dup3\n        /* \"#utility.yul\":7013:7031   */\n      add\n        /* \"#utility.yul\":7005:7031   */\n      swap1\n      pop\n        /* \"#utility.yul\":7041:7112   */\n      tag_190\n        /* \"#utility.yul\":7109:7110   */\n      0x00\n        /* \"#utility.yul\":7098:7107   */\n      dup4\n        /* \"#utility.yul\":7094:7111   */\n      add\n        /* \"#utility.yul\":7085:7091   */\n      dup6\n        /* \"#utility.yul\":7041:7112   */\n      tag_105\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7122:7194   */\n      tag_191\n        /* \"#utility.yul\":7190:7192   */\n      0x20\n        /* \"#utility.yul\":7179:7188   */\n      dup4\n        /* \"#utility.yul\":7175:7193   */\n      add\n        /* \"#utility.yul\":7166:7172   */\n      dup5\n        /* \"#utility.yul\":7122:7194   */\n      tag_100\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6869:7201   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7207:7437   */\n    tag_112:\n        /* \"#utility.yul\":7347:7381   */\n      0x556e697377617056324c6962726172793a20494e53554646494349454e545f49\n        /* \"#utility.yul\":7343:7344   */\n      0x00\n        /* \"#utility.yul\":7335:7341   */\n      dup3\n        /* \"#utility.yul\":7331:7345   */\n      add\n        /* \"#utility.yul\":7324:7382   */\n      mstore\n        /* \"#utility.yul\":7416:7429   */\n      0x4e5055545f414d4f554e54000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7411:7413   */\n      0x20\n        /* \"#utility.yul\":7403:7409   */\n      dup3\n        /* \"#utility.yul\":7399:7414   */\n      add\n        /* \"#utility.yul\":7392:7430   */\n      mstore\n        /* \"#utility.yul\":7207:7437   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7443:7809   */\n    tag_113:\n        /* \"#utility.yul\":7585:7588   */\n      0x00\n        /* \"#utility.yul\":7606:7673   */\n      tag_194\n        /* \"#utility.yul\":7670:7672   */\n      0x2b\n        /* \"#utility.yul\":7665:7668   */\n      dup4\n        /* \"#utility.yul\":7606:7673   */\n      tag_102\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7599:7673   */\n      swap2\n      pop\n        /* \"#utility.yul\":7682:7775   */\n      tag_195\n        /* \"#utility.yul\":7771:7774   */\n      dup3\n        /* \"#utility.yul\":7682:7775   */\n      tag_112\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7800:7802   */\n      0x40\n        /* \"#utility.yul\":7795:7798   */\n      dup3\n        /* \"#utility.yul\":7791:7803   */\n      add\n        /* \"#utility.yul\":7784:7803   */\n      swap1\n      pop\n        /* \"#utility.yul\":7443:7809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7815:8234   */\n    tag_71:\n        /* \"#utility.yul\":7981:7985   */\n      0x00\n        /* \"#utility.yul\":8019:8021   */\n      0x20\n        /* \"#utility.yul\":8008:8017   */\n      dup3\n        /* \"#utility.yul\":8004:8022   */\n      add\n        /* \"#utility.yul\":7996:8022   */\n      swap1\n      pop\n        /* \"#utility.yul\":8068:8077   */\n      dup2\n        /* \"#utility.yul\":8062:8066   */\n      dup2\n        /* \"#utility.yul\":8058:8078   */\n      sub\n        /* \"#utility.yul\":8054:8055   */\n      0x00\n        /* \"#utility.yul\":8043:8052   */\n      dup4\n        /* \"#utility.yul\":8039:8056   */\n      add\n        /* \"#utility.yul\":8032:8079   */\n      mstore\n        /* \"#utility.yul\":8096:8227   */\n      tag_197\n        /* \"#utility.yul\":8222:8226   */\n      dup2\n        /* \"#utility.yul\":8096:8227   */\n      tag_113\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":8088:8227   */\n      swap1\n      pop\n        /* \"#utility.yul\":7815:8234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8240:8467   */\n    tag_114:\n        /* \"#utility.yul\":8380:8414   */\n      0x556e697377617056324c6962726172793a20494e53554646494349454e545f4c\n        /* \"#utility.yul\":8376:8377   */\n      0x00\n        /* \"#utility.yul\":8368:8374   */\n      dup3\n        /* \"#utility.yul\":8364:8378   */\n      add\n        /* \"#utility.yul\":8357:8415   */\n      mstore\n        /* \"#utility.yul\":8449:8459   */\n      0x4951554944495459000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8444:8446   */\n      0x20\n        /* \"#utility.yul\":8436:8442   */\n      dup3\n        /* \"#utility.yul\":8432:8447   */\n      add\n        /* \"#utility.yul\":8425:8460   */\n      mstore\n        /* \"#utility.yul\":8240:8467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8473:8839   */\n    tag_115:\n        /* \"#utility.yul\":8615:8618   */\n      0x00\n        /* \"#utility.yul\":8636:8703   */\n      tag_200\n        /* \"#utility.yul\":8700:8702   */\n      0x28\n        /* \"#utility.yul\":8695:8698   */\n      dup4\n        /* \"#utility.yul\":8636:8703   */\n      tag_102\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8629:8703   */\n      swap2\n      pop\n        /* \"#utility.yul\":8712:8805   */\n      tag_201\n        /* \"#utility.yul\":8801:8804   */\n      dup3\n        /* \"#utility.yul\":8712:8805   */\n      tag_114\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":8830:8832   */\n      0x40\n        /* \"#utility.yul\":8825:8828   */\n      dup3\n        /* \"#utility.yul\":8821:8833   */\n      add\n        /* \"#utility.yul\":8814:8833   */\n      swap1\n      pop\n        /* \"#utility.yul\":8473:8839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8845:9264   */\n    tag_75:\n        /* \"#utility.yul\":9011:9015   */\n      0x00\n        /* \"#utility.yul\":9049:9051   */\n      0x20\n        /* \"#utility.yul\":9038:9047   */\n      dup3\n        /* \"#utility.yul\":9034:9052   */\n      add\n        /* \"#utility.yul\":9026:9052   */\n      swap1\n      pop\n        /* \"#utility.yul\":9098:9107   */\n      dup2\n        /* \"#utility.yul\":9092:9096   */\n      dup2\n        /* \"#utility.yul\":9088:9108   */\n      sub\n        /* \"#utility.yul\":9084:9085   */\n      0x00\n        /* \"#utility.yul\":9073:9082   */\n      dup4\n        /* \"#utility.yul\":9069:9086   */\n      add\n        /* \"#utility.yul\":9062:9109   */\n      mstore\n        /* \"#utility.yul\":9126:9257   */\n      tag_203\n        /* \"#utility.yul\":9252:9256   */\n      dup2\n        /* \"#utility.yul\":9126:9257   */\n      tag_115\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9118:9257   */\n      swap1\n      pop\n        /* \"#utility.yul\":8845:9264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9270:9450   */\n    tag_116:\n        /* \"#utility.yul\":9318:9395   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9315:9316   */\n      0x00\n        /* \"#utility.yul\":9308:9396   */\n      mstore\n        /* \"#utility.yul\":9415:9419   */\n      0x11\n        /* \"#utility.yul\":9412:9413   */\n      0x04\n        /* \"#utility.yul\":9405:9420   */\n      mstore\n        /* \"#utility.yul\":9439:9443   */\n      0x24\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9429:9444   */\n      revert\n        /* \"#utility.yul\":9456:9866   */\n    tag_77:\n        /* \"#utility.yul\":9496:9503   */\n      0x00\n        /* \"#utility.yul\":9519:9539   */\n      tag_206\n        /* \"#utility.yul\":9537:9538   */\n      dup3\n        /* \"#utility.yul\":9519:9539   */\n      tag_97\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9514:9539   */\n      swap2\n      pop\n        /* \"#utility.yul\":9553:9573   */\n      tag_207\n        /* \"#utility.yul\":9571:9572   */\n      dup4\n        /* \"#utility.yul\":9553:9573   */\n      tag_97\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":9548:9573   */\n      swap3\n      pop\n        /* \"#utility.yul\":9608:9609   */\n      dup3\n        /* \"#utility.yul\":9605:9606   */\n      dup3\n        /* \"#utility.yul\":9601:9610   */\n      mul\n        /* \"#utility.yul\":9630:9660   */\n      tag_208\n        /* \"#utility.yul\":9648:9659   */\n      dup2\n        /* \"#utility.yul\":9630:9660   */\n      tag_97\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":9619:9660   */\n      swap2\n      pop\n        /* \"#utility.yul\":9809:9810   */\n      dup3\n        /* \"#utility.yul\":9800:9807   */\n      dup3\n        /* \"#utility.yul\":9796:9811   */\n      div\n        /* \"#utility.yul\":9793:9794   */\n      dup5\n        /* \"#utility.yul\":9790:9812   */\n      eq\n        /* \"#utility.yul\":9770:9771   */\n      dup4\n        /* \"#utility.yul\":9763:9772   */\n      iszero\n        /* \"#utility.yul\":9743:9826   */\n      or\n        /* \"#utility.yul\":9720:9859   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":9839:9857   */\n      tag_210\n      tag_116\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":9720:9859   */\n    tag_209:\n        /* \"#utility.yul\":9504:9866   */\n      pop\n        /* \"#utility.yul\":9456:9866   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9872:10063   */\n    tag_81:\n        /* \"#utility.yul\":9912:9915   */\n      0x00\n        /* \"#utility.yul\":9931:9951   */\n      tag_212\n        /* \"#utility.yul\":9949:9950   */\n      dup3\n        /* \"#utility.yul\":9931:9951   */\n      tag_97\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":9926:9951   */\n      swap2\n      pop\n        /* \"#utility.yul\":9965:9985   */\n      tag_213\n        /* \"#utility.yul\":9983:9984   */\n      dup4\n        /* \"#utility.yul\":9965:9985   */\n      tag_97\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":9960:9985   */\n      swap3\n      pop\n        /* \"#utility.yul\":10008:10009   */\n      dup3\n        /* \"#utility.yul\":10005:10006   */\n      dup3\n        /* \"#utility.yul\":10001:10010   */\n      add\n        /* \"#utility.yul\":9994:10010   */\n      swap1\n      pop\n        /* \"#utility.yul\":10029:10032   */\n      dup1\n        /* \"#utility.yul\":10026:10027   */\n      dup3\n        /* \"#utility.yul\":10023:10033   */\n      gt\n        /* \"#utility.yul\":10020:10056   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":10036:10054   */\n      tag_215\n      tag_116\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":10020:10056   */\n    tag_214:\n        /* \"#utility.yul\":9872:10063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10069:10249   */\n    tag_117:\n        /* \"#utility.yul\":10117:10194   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10114:10115   */\n      0x00\n        /* \"#utility.yul\":10107:10195   */\n      mstore\n        /* \"#utility.yul\":10214:10218   */\n      0x12\n        /* \"#utility.yul\":10211:10212   */\n      0x04\n        /* \"#utility.yul\":10204:10219   */\n      mstore\n        /* \"#utility.yul\":10238:10242   */\n      0x24\n        /* \"#utility.yul\":10235:10236   */\n      0x00\n        /* \"#utility.yul\":10228:10243   */\n      revert\n        /* \"#utility.yul\":10255:10440   */\n    tag_83:\n        /* \"#utility.yul\":10295:10296   */\n      0x00\n        /* \"#utility.yul\":10312:10332   */\n      tag_218\n        /* \"#utility.yul\":10330:10331   */\n      dup3\n        /* \"#utility.yul\":10312:10332   */\n      tag_97\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":10307:10332   */\n      swap2\n      pop\n        /* \"#utility.yul\":10346:10366   */\n      tag_219\n        /* \"#utility.yul\":10364:10365   */\n      dup4\n        /* \"#utility.yul\":10346:10366   */\n      tag_97\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":10341:10366   */\n      swap3\n      pop\n        /* \"#utility.yul\":10385:10386   */\n      dup3\n        /* \"#utility.yul\":10375:10410   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":10390:10408   */\n      tag_221\n      tag_117\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":10375:10410   */\n    tag_220:\n        /* \"#utility.yul\":10432:10433   */\n      dup3\n        /* \"#utility.yul\":10429:10430   */\n      dup3\n        /* \"#utility.yul\":10425:10434   */\n      div\n        /* \"#utility.yul\":10420:10434   */\n      swap1\n      pop\n        /* \"#utility.yul\":10255:10440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f9a8ac423a8e1dc8c8bf623710f10524c972c9adab17cc6f577ff7f9e8044e5064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50610d128061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063df791e5014610038578063ec0a63d814610054575b5f80fd5b610052600480360381019061004d91906107e5565b610085565b005b61006e60048036038101906100699190610835565b610374565b60405161007c92919061086f565b60405180910390f35b5f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100f791906108aa565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610143573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061016791906108aa565b90505f8061017488610374565b915091508373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614806101dd57508273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16145b61021c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102139061092f565b60405180910390fd5b5f8473ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610256575f610259565b60015b905061028689888a73ffffffffffffffffffffffffffffffffffffffff166105569092919063ffffffff16565b5f808261029e576102988985876105d5565b5f6102ab565b5f6102aa8a87876105d5565b5b915091508a73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f8383305f67ffffffffffffffff8111156102e8576102e761094d565b5b6040519080825280601f01601f19166020018201604052801561031a5781602001600182028036833780820191505090505b506040518563ffffffff1660e01b815260040161033a94939291906109f9565b5f604051808303815f87803b158015610351575f80fd5b505af1158015610363573d5f803e3d5ffd5b505050505050505050505050505050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e891906108aa565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610434573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045891906108aa565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016104939190610a43565b602060405180830381865afa1580156104ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d29190610a70565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161050d9190610a43565b602060405180830381865afa158015610528573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054c9190610a70565b9350505050915091565b6105d0838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610589929190610a9b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106b9565b505050565b5f808411610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610b32565b60405180910390fd5b5f8311801561062657505f82115b610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90610bc0565b60405180910390fd5b5f6103e5856106749190610c0b565b90505f83826106839190610c0b565b90505f826103e8876106959190610c0b565b61069f9190610c4c565b905080826106ad9190610cac565b93505050509392505050565b5f8060205f8451602086015f885af1806106d8576040513d5f823e3d81fd5b3d92505f519150505f82146106f157600181141561070c565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561074e57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016107459190610a43565b60405180910390fd5b50505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61078182610758565b9050919050565b61079181610777565b811461079b575f80fd5b50565b5f813590506107ac81610788565b92915050565b5f819050919050565b6107c4816107b2565b81146107ce575f80fd5b50565b5f813590506107df816107bb565b92915050565b5f805f606084860312156107fc576107fb610754565b5b5f6108098682870161079e565b935050602061081a8682870161079e565b925050604061082b868287016107d1565b9150509250925092565b5f6020828403121561084a57610849610754565b5b5f6108578482850161079e565b91505092915050565b610869816107b2565b82525050565b5f6040820190506108825f830185610860565b61088f6020830184610860565b9392505050565b5f815190506108a481610788565b92915050565b5f602082840312156108bf576108be610754565b5b5f6108cc84828501610896565b91505092915050565b5f82825260208201905092915050565b7f4e6f20746f6b656e20696e2070616972000000000000000000000000000000005f82015250565b5f6109196010836108d5565b9150610924826108e5565b602082019050919050565b5f6020820190508181035f8301526109468161090d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61098381610777565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6109cb82610989565b6109d58185610993565b93506109e58185602086016109a3565b6109ee816109b1565b840191505092915050565b5f608082019050610a0c5f830187610860565b610a196020830186610860565b610a26604083018561097a565b8181036060830152610a3881846109c1565b905095945050505050565b5f602082019050610a565f83018461097a565b92915050565b5f81519050610a6a816107bb565b92915050565b5f60208284031215610a8557610a84610754565b5b5f610a9284828501610a5c565b91505092915050565b5f604082019050610aae5f83018561097a565b610abb6020830184610860565b9392505050565b7f556e697377617056324c6962726172793a20494e53554646494349454e545f495f8201527f4e5055545f414d4f554e54000000000000000000000000000000000000000000602082015250565b5f610b1c602b836108d5565b9150610b2782610ac2565b604082019050919050565b5f6020820190508181035f830152610b4981610b10565b9050919050565b7f556e697377617056324c6962726172793a20494e53554646494349454e545f4c5f8201527f4951554944495459000000000000000000000000000000000000000000000000602082015250565b5f610baa6028836108d5565b9150610bb582610b50565b604082019050919050565b5f6020820190508181035f830152610bd781610b9e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c15826107b2565b9150610c20836107b2565b9250828202610c2e816107b2565b91508282048414831517610c4557610c44610bde565b5b5092915050565b5f610c56826107b2565b9150610c61836107b2565b9250828201905080821115610c7957610c78610bde565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610cb6826107b2565b9150610cc1836107b2565b925082610cd157610cd0610c7f565b5b82820490509291505056fea2646970667358221220f9a8ac423a8e1dc8c8bf623710f10524c972c9adab17cc6f577ff7f9e8044e5064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD12 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xEC0A63D8 EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP3 SWAP2 SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x143 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x174 DUP9 PUSH2 0x374 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1DD JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x256 JUMPI PUSH0 PUSH2 0x259 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x286 DUP10 DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x556 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH2 0x29E JUMPI PUSH2 0x298 DUP10 DUP6 DUP8 PUSH2 0x5D5 JUMP JUMPDEST PUSH0 PUSH2 0x2AB JUMP JUMPDEST PUSH0 PUSH2 0x2AA DUP11 DUP8 DUP8 PUSH2 0x5D5 JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP2 POP DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x22C0D9F DUP4 DUP4 ADDRESS PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E8 JUMPI PUSH2 0x2E7 PUSH2 0x94D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x31A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x363 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x434 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x528 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54C SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x5D0 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x589 SWAP3 SWAP2 SWAP1 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 GT PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x626 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP6 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x683 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 DUP8 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x69F SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0xCAC JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x6F1 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x70C JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x74E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x781 DUP3 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x777 JUMP JUMPDEST DUP2 EQ PUSH2 0x79B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7AC DUP2 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C4 DUP2 PUSH2 0x7B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7DF DUP2 PUSH2 0x7BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7FB PUSH2 0x754 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x809 DUP7 DUP3 DUP8 ADD PUSH2 0x79E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x81A DUP7 DUP3 DUP8 ADD PUSH2 0x79E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x82B DUP7 DUP3 DUP8 ADD PUSH2 0x7D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84A JUMPI PUSH2 0x849 PUSH2 0x754 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x857 DUP5 DUP3 DUP6 ADD PUSH2 0x79E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x869 DUP2 PUSH2 0x7B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x882 PUSH0 DUP4 ADD DUP6 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x88F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x860 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8A4 DUP2 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8BF JUMPI PUSH2 0x8BE PUSH2 0x754 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8CC DUP5 DUP3 DUP6 ADD PUSH2 0x896 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E20696E207061697200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x919 PUSH1 0x10 DUP4 PUSH2 0x8D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x924 DUP3 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x946 DUP2 PUSH2 0x90D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x983 DUP2 PUSH2 0x777 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9CB DUP3 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x9D5 DUP2 DUP6 PUSH2 0x993 JUMP JUMPDEST SWAP4 POP PUSH2 0x9E5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0x9EE DUP2 PUSH2 0x9B1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xA0C PUSH0 DUP4 ADD DUP8 PUSH2 0x860 JUMP JUMPDEST PUSH2 0xA19 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x860 JUMP JUMPDEST PUSH2 0xA26 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x97A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xA38 DUP2 DUP5 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA56 PUSH0 DUP4 ADD DUP5 PUSH2 0x97A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA6A DUP2 PUSH2 0x7BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x754 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA92 DUP5 DUP3 DUP6 ADD PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAAE PUSH0 DUP4 ADD DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH2 0xABB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x860 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x556E697377617056324C6962726172793A20494E53554646494349454E545F49 PUSH0 DUP3 ADD MSTORE PUSH32 0x4E5055545F414D4F554E54000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB1C PUSH1 0x2B DUP4 PUSH2 0x8D5 JUMP JUMPDEST SWAP2 POP PUSH2 0xB27 DUP3 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB49 DUP2 PUSH2 0xB10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E697377617056324C6962726172793A20494E53554646494349454E545F4C PUSH0 DUP3 ADD MSTORE PUSH32 0x4951554944495459000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBAA PUSH1 0x28 DUP4 PUSH2 0x8D5 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB5 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBD7 DUP2 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC15 DUP3 PUSH2 0x7B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC20 DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC2E DUP2 PUSH2 0x7B2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC45 JUMPI PUSH2 0xC44 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC56 DUP3 PUSH2 0x7B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC61 DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC79 JUMPI PUSH2 0xC78 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCB6 DUP3 PUSH2 0x7B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC1 DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCD1 JUMPI PUSH2 0xCD0 PUSH2 0xC7F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xA8 0xAC TIMESTAMP GASPRICE DUP15 SAR 0xC8 0xC8 0xBF PUSH3 0x3710F1 SDIV 0x24 0xC9 PUSH19 0xC9ADAB17CC6F577FF7F9E8044E5064736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "263:2528:18:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_682": {
									"entryPoint": 1721,
									"id": 682,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getAmountOut_1669": {
									"entryPoint": 1493,
									"id": 1669,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getReservesV2_1716": {
									"entryPoint": 884,
									"id": 1716,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@safeTransfer_360": {
									"entryPoint": 1366,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swap_1557": {
									"entryPoint": 133,
									"id": 1557,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8": {
									"entryPoint": 2896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10443:19",
										"nodeType": "YulBlock",
										"src": "0:10443:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "379:81:19",
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nativeSrc": "389:65:19",
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:19",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nativeSrc": "400:54:19",
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:19",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:19",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nativeSrc": "511:51:19",
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nativeSrc": "521:35:19",
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nativeSrc": "532:24:19",
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:19",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:19",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nativeSrc": "611:79:19",
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:19",
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:19",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:19",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nativeSrc": "670:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nativeSrc": "670:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nativeSrc": "641:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nativeSrc": "631:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nativeSrc": "624:43:19",
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nativeSrc": "621:63:19",
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:19",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nativeSrc": "748:87:19",
													"nodeType": "YulBlock",
													"src": "748:87:19",
													"statements": [
														{
															"nativeSrc": "758:29:19",
															"nodeType": "YulAssignment",
															"src": "758:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:19"
																},
																"nativeSrc": "767:20:19",
																"nodeType": "YulFunctionCall",
																"src": "767:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:19"
																},
																"nativeSrc": "796:33:19",
																"nodeType": "YulFunctionCall",
																"src": "796:33:19"
															},
															"nativeSrc": "796:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:19",
														"nodeType": "YulTypedName",
														"src": "726:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:19",
														"nodeType": "YulTypedName",
														"src": "734:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:19",
														"nodeType": "YulTypedName",
														"src": "742:5:19",
														"type": ""
													}
												],
												"src": "696:139:19"
											},
											{
												"body": {
													"nativeSrc": "886:32:19",
													"nodeType": "YulBlock",
													"src": "886:32:19",
													"statements": [
														{
															"nativeSrc": "896:16:19",
															"nodeType": "YulAssignment",
															"src": "896:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:19",
																"nodeType": "YulIdentifier",
																"src": "907:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:19",
														"nodeType": "YulTypedName",
														"src": "868:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:19",
														"nodeType": "YulTypedName",
														"src": "878:7:19",
														"type": ""
													}
												],
												"src": "841:77:19"
											},
											{
												"body": {
													"nativeSrc": "967:79:19",
													"nodeType": "YulBlock",
													"src": "967:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:19",
																"nodeType": "YulBlock",
																"src": "1024:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:19"
																			},
																			"nativeSrc": "1026:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:19"
																		},
																		"nativeSrc": "1026:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:19"
																				},
																				"nativeSrc": "997:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:19"
																		},
																		"nativeSrc": "987:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:19"
																},
																"nativeSrc": "980:43:19",
																"nodeType": "YulFunctionCall",
																"src": "980:43:19"
															},
															"nativeSrc": "977:63:19",
															"nodeType": "YulIf",
															"src": "977:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:19",
														"nodeType": "YulTypedName",
														"src": "960:5:19",
														"type": ""
													}
												],
												"src": "924:122:19"
											},
											{
												"body": {
													"nativeSrc": "1104:87:19",
													"nodeType": "YulBlock",
													"src": "1104:87:19",
													"statements": [
														{
															"nativeSrc": "1114:29:19",
															"nodeType": "YulAssignment",
															"src": "1114:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:19"
																},
																"nativeSrc": "1123:20:19",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:19"
																},
																"nativeSrc": "1152:33:19",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:19"
															},
															"nativeSrc": "1152:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:19",
														"nodeType": "YulTypedName",
														"src": "1082:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:19",
														"nodeType": "YulTypedName",
														"src": "1090:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:19",
														"nodeType": "YulTypedName",
														"src": "1098:5:19",
														"type": ""
													}
												],
												"src": "1052:139:19"
											},
											{
												"body": {
													"nativeSrc": "1297:519:19",
													"nodeType": "YulBlock",
													"src": "1297:519:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1343:83:19",
																"nodeType": "YulBlock",
																"src": "1343:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1345:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "1345:77:19"
																			},
																			"nativeSrc": "1345:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1345:79:19"
																		},
																		"nativeSrc": "1345:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1318:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1318:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1327:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1314:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:19"
																		},
																		"nativeSrc": "1314:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1314:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1339:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1310:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:19"
																},
																"nativeSrc": "1310:32:19",
																"nodeType": "YulFunctionCall",
																"src": "1310:32:19"
															},
															"nativeSrc": "1307:119:19",
															"nodeType": "YulIf",
															"src": "1307:119:19"
														},
														{
															"nativeSrc": "1436:117:19",
															"nodeType": "YulBlock",
															"src": "1436:117:19",
															"statements": [
																{
																	"nativeSrc": "1451:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1465:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1455:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1480:63:19",
																	"nodeType": "YulAssignment",
																	"src": "1480:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1515:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1526:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1511:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:19"
																				},
																				"nativeSrc": "1511:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1535:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1490:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:19"
																		},
																		"nativeSrc": "1490:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1480:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1563:118:19",
															"nodeType": "YulBlock",
															"src": "1563:118:19",
															"statements": [
																{
																	"nativeSrc": "1578:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1592:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1582:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1608:63:19",
																	"nodeType": "YulAssignment",
																	"src": "1608:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1643:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1654:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1639:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:19"
																				},
																				"nativeSrc": "1639:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1663:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1618:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:19"
																		},
																		"nativeSrc": "1618:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1608:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1691:118:19",
															"nodeType": "YulBlock",
															"src": "1691:118:19",
															"statements": [
																{
																	"nativeSrc": "1706:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1720:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1710:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1736:63:19",
																	"nodeType": "YulAssignment",
																	"src": "1736:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1771:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1782:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1767:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:19"
																				},
																				"nativeSrc": "1767:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1791:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1746:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:19"
																		},
																		"nativeSrc": "1746:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1736:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1197:619:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1251:9:19",
														"nodeType": "YulTypedName",
														"src": "1251:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1262:7:19",
														"nodeType": "YulTypedName",
														"src": "1262:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1274:6:19",
														"nodeType": "YulTypedName",
														"src": "1274:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1282:6:19",
														"nodeType": "YulTypedName",
														"src": "1282:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1290:6:19",
														"nodeType": "YulTypedName",
														"src": "1290:6:19",
														"type": ""
													}
												],
												"src": "1197:619:19"
											},
											{
												"body": {
													"nativeSrc": "1888:263:19",
													"nodeType": "YulBlock",
													"src": "1888:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1934:83:19",
																"nodeType": "YulBlock",
																"src": "1934:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1936:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "1936:77:19"
																			},
																			"nativeSrc": "1936:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1936:79:19"
																		},
																		"nativeSrc": "1936:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1936:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1909:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1909:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1918:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1918:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1905:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:19"
																		},
																		"nativeSrc": "1905:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1905:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1930:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1930:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1901:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1901:3:19"
																},
																"nativeSrc": "1901:32:19",
																"nodeType": "YulFunctionCall",
																"src": "1901:32:19"
															},
															"nativeSrc": "1898:119:19",
															"nodeType": "YulIf",
															"src": "1898:119:19"
														},
														{
															"nativeSrc": "2027:117:19",
															"nodeType": "YulBlock",
															"src": "2027:117:19",
															"statements": [
																{
																	"nativeSrc": "2042:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2042:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2056:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2056:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2046:6:19",
																			"nodeType": "YulTypedName",
																			"src": "2046:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2071:63:19",
																	"nodeType": "YulAssignment",
																	"src": "2071:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2106:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "2106:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2117:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2117:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2102:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2102:3:19"
																				},
																				"nativeSrc": "2102:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2102:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2126:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2126:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2081:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "2081:20:19"
																		},
																		"nativeSrc": "2081:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2071:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "2071:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1822:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1858:9:19",
														"nodeType": "YulTypedName",
														"src": "1858:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1869:7:19",
														"nodeType": "YulTypedName",
														"src": "1869:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1881:6:19",
														"nodeType": "YulTypedName",
														"src": "1881:6:19",
														"type": ""
													}
												],
												"src": "1822:329:19"
											},
											{
												"body": {
													"nativeSrc": "2222:53:19",
													"nodeType": "YulBlock",
													"src": "2222:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2239:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2239:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2262:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2262:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2244:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "2244:17:19"
																		},
																		"nativeSrc": "2244:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2244:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2232:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:19"
																},
																"nativeSrc": "2232:37:19",
																"nodeType": "YulFunctionCall",
																"src": "2232:37:19"
															},
															"nativeSrc": "2232:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "2232:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2157:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:19",
														"nodeType": "YulTypedName",
														"src": "2210:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2217:3:19",
														"nodeType": "YulTypedName",
														"src": "2217:3:19",
														"type": ""
													}
												],
												"src": "2157:118:19"
											},
											{
												"body": {
													"nativeSrc": "2407:206:19",
													"nodeType": "YulBlock",
													"src": "2407:206:19",
													"statements": [
														{
															"nativeSrc": "2417:26:19",
															"nodeType": "YulAssignment",
															"src": "2417:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2429:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2440:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2440:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2425:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2425:3:19"
																},
																"nativeSrc": "2425:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2425:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2417:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2417:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2497:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2497:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2510:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2510:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2521:1:19",
																				"nodeType": "YulLiteral",
																				"src": "2521:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2506:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:19"
																		},
																		"nativeSrc": "2506:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2453:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "2453:43:19"
																},
																"nativeSrc": "2453:71:19",
																"nodeType": "YulFunctionCall",
																"src": "2453:71:19"
															},
															"nativeSrc": "2453:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "2453:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2578:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2578:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2591:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2591:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2602:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2602:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2587:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2587:3:19"
																		},
																		"nativeSrc": "2587:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2587:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2534:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "2534:43:19"
																},
																"nativeSrc": "2534:72:19",
																"nodeType": "YulFunctionCall",
																"src": "2534:72:19"
															},
															"nativeSrc": "2534:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "2534:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2281:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2371:9:19",
														"nodeType": "YulTypedName",
														"src": "2371:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2383:6:19",
														"nodeType": "YulTypedName",
														"src": "2383:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2391:6:19",
														"nodeType": "YulTypedName",
														"src": "2391:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2402:4:19",
														"nodeType": "YulTypedName",
														"src": "2402:4:19",
														"type": ""
													}
												],
												"src": "2281:332:19"
											},
											{
												"body": {
													"nativeSrc": "2682:80:19",
													"nodeType": "YulBlock",
													"src": "2682:80:19",
													"statements": [
														{
															"nativeSrc": "2692:22:19",
															"nodeType": "YulAssignment",
															"src": "2692:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2707:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2707:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2701:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:19"
																},
																"nativeSrc": "2701:13:19",
																"nodeType": "YulFunctionCall",
																"src": "2701:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2692:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2692:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2750:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2750:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2723:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "2723:26:19"
																},
																"nativeSrc": "2723:33:19",
																"nodeType": "YulFunctionCall",
																"src": "2723:33:19"
															},
															"nativeSrc": "2723:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "2723:33:19"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2619:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2660:6:19",
														"nodeType": "YulTypedName",
														"src": "2660:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2668:3:19",
														"nodeType": "YulTypedName",
														"src": "2668:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2676:5:19",
														"nodeType": "YulTypedName",
														"src": "2676:5:19",
														"type": ""
													}
												],
												"src": "2619:143:19"
											},
											{
												"body": {
													"nativeSrc": "2845:274:19",
													"nodeType": "YulBlock",
													"src": "2845:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2891:83:19",
																"nodeType": "YulBlock",
																"src": "2891:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2893:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "2893:77:19"
																			},
																			"nativeSrc": "2893:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2893:79:19"
																		},
																		"nativeSrc": "2893:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2893:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2866:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2866:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2875:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2875:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2862:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:19"
																		},
																		"nativeSrc": "2862:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2862:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2887:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2858:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:19"
																},
																"nativeSrc": "2858:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2858:32:19"
															},
															"nativeSrc": "2855:119:19",
															"nodeType": "YulIf",
															"src": "2855:119:19"
														},
														{
															"nativeSrc": "2984:128:19",
															"nodeType": "YulBlock",
															"src": "2984:128:19",
															"statements": [
																{
																	"nativeSrc": "2999:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2999:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3013:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3013:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3003:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3003:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3028:74:19",
																	"nodeType": "YulAssignment",
																	"src": "3028:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3074:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3074:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3085:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3085:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3070:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3070:3:19"
																				},
																				"nativeSrc": "3070:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3070:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3094:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3094:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3038:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "3038:31:19"
																		},
																		"nativeSrc": "3038:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3028:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3028:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "2768:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2815:9:19",
														"nodeType": "YulTypedName",
														"src": "2815:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2826:7:19",
														"nodeType": "YulTypedName",
														"src": "2826:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2838:6:19",
														"nodeType": "YulTypedName",
														"src": "2838:6:19",
														"type": ""
													}
												],
												"src": "2768:351:19"
											},
											{
												"body": {
													"nativeSrc": "3221:73:19",
													"nodeType": "YulBlock",
													"src": "3221:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3238:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3238:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3243:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3243:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3231:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:19"
																},
																"nativeSrc": "3231:19:19",
																"nodeType": "YulFunctionCall",
																"src": "3231:19:19"
															},
															"nativeSrc": "3231:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "3231:19:19"
														},
														{
															"nativeSrc": "3259:29:19",
															"nodeType": "YulAssignment",
															"src": "3259:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3278:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3278:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3283:4:19",
																		"nodeType": "YulLiteral",
																		"src": "3283:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3274:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3274:3:19"
																},
																"nativeSrc": "3274:14:19",
																"nodeType": "YulFunctionCall",
																"src": "3274:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3259:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "3259:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3125:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3193:3:19",
														"nodeType": "YulTypedName",
														"src": "3193:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3198:6:19",
														"nodeType": "YulTypedName",
														"src": "3198:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3209:11:19",
														"nodeType": "YulTypedName",
														"src": "3209:11:19",
														"type": ""
													}
												],
												"src": "3125:169:19"
											},
											{
												"body": {
													"nativeSrc": "3406:60:19",
													"nodeType": "YulBlock",
													"src": "3406:60:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3428:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3428:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3436:1:19",
																				"nodeType": "YulLiteral",
																				"src": "3436:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3424:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:19"
																		},
																		"nativeSrc": "3424:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3424:14:19"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e20696e2070616972",
																		"kind": "string",
																		"nativeSrc": "3440:18:19",
																		"nodeType": "YulLiteral",
																		"src": "3440:18:19",
																		"type": "",
																		"value": "No token in pair"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3417:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:19"
																},
																"nativeSrc": "3417:42:19",
																"nodeType": "YulFunctionCall",
																"src": "3417:42:19"
															},
															"nativeSrc": "3417:42:19",
															"nodeType": "YulExpressionStatement",
															"src": "3417:42:19"
														}
													]
												},
												"name": "store_literal_in_memory_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006",
												"nativeSrc": "3300:166:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3398:6:19",
														"nodeType": "YulTypedName",
														"src": "3398:6:19",
														"type": ""
													}
												],
												"src": "3300:166:19"
											},
											{
												"body": {
													"nativeSrc": "3618:220:19",
													"nodeType": "YulBlock",
													"src": "3618:220:19",
													"statements": [
														{
															"nativeSrc": "3628:74:19",
															"nodeType": "YulAssignment",
															"src": "3628:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3694:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3694:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3699:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3699:2:19",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3635:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "3635:58:19"
																},
																"nativeSrc": "3635:67:19",
																"nodeType": "YulFunctionCall",
																"src": "3635:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3628:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3800:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3800:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006",
																	"nativeSrc": "3711:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "3711:88:19"
																},
																"nativeSrc": "3711:93:19",
																"nodeType": "YulFunctionCall",
																"src": "3711:93:19"
															},
															"nativeSrc": "3711:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "3711:93:19"
														},
														{
															"nativeSrc": "3813:19:19",
															"nodeType": "YulAssignment",
															"src": "3813:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3824:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3824:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3829:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3829:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3820:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:19"
																},
																"nativeSrc": "3820:12:19",
																"nodeType": "YulFunctionCall",
																"src": "3820:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3813:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3813:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3472:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3606:3:19",
														"nodeType": "YulTypedName",
														"src": "3606:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3614:3:19",
														"nodeType": "YulTypedName",
														"src": "3614:3:19",
														"type": ""
													}
												],
												"src": "3472:366:19"
											},
											{
												"body": {
													"nativeSrc": "4015:248:19",
													"nodeType": "YulBlock",
													"src": "4015:248:19",
													"statements": [
														{
															"nativeSrc": "4025:26:19",
															"nodeType": "YulAssignment",
															"src": "4025:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4037:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4037:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4048:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4048:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4033:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:19"
																},
																"nativeSrc": "4033:18:19",
																"nodeType": "YulFunctionCall",
																"src": "4033:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4025:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4025:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4072:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4072:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4083:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4083:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4068:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:19"
																		},
																		"nativeSrc": "4068:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4068:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4091:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "4091:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4097:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4097:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4087:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4087:3:19"
																		},
																		"nativeSrc": "4087:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4087:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4061:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4061:6:19"
																},
																"nativeSrc": "4061:47:19",
																"nodeType": "YulFunctionCall",
																"src": "4061:47:19"
															},
															"nativeSrc": "4061:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "4061:47:19"
														},
														{
															"nativeSrc": "4117:139:19",
															"nodeType": "YulAssignment",
															"src": "4117:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4251:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4251:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4125:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "4125:124:19"
																},
																"nativeSrc": "4125:131:19",
																"nodeType": "YulFunctionCall",
																"src": "4125:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4117:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4117:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3844:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3995:9:19",
														"nodeType": "YulTypedName",
														"src": "3995:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4010:4:19",
														"nodeType": "YulTypedName",
														"src": "4010:4:19",
														"type": ""
													}
												],
												"src": "3844:419:19"
											},
											{
												"body": {
													"nativeSrc": "4297:152:19",
													"nodeType": "YulBlock",
													"src": "4297:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4314:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4314:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4317:77:19",
																		"nodeType": "YulLiteral",
																		"src": "4317:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4307:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:19"
																},
																"nativeSrc": "4307:88:19",
																"nodeType": "YulFunctionCall",
																"src": "4307:88:19"
															},
															"nativeSrc": "4307:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "4307:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4411:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4411:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4414:4:19",
																		"nodeType": "YulLiteral",
																		"src": "4414:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4404:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:19"
																},
																"nativeSrc": "4404:15:19",
																"nodeType": "YulFunctionCall",
																"src": "4404:15:19"
															},
															"nativeSrc": "4404:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "4404:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4435:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4435:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4438:4:19",
																		"nodeType": "YulLiteral",
																		"src": "4438:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4428:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4428:6:19"
																},
																"nativeSrc": "4428:15:19",
																"nodeType": "YulFunctionCall",
																"src": "4428:15:19"
															},
															"nativeSrc": "4428:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "4428:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4269:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "4269:180:19"
											},
											{
												"body": {
													"nativeSrc": "4520:53:19",
													"nodeType": "YulBlock",
													"src": "4520:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4537:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4537:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4560:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4560:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4542:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "4542:17:19"
																		},
																		"nativeSrc": "4542:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4542:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4530:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4530:6:19"
																},
																"nativeSrc": "4530:37:19",
																"nodeType": "YulFunctionCall",
																"src": "4530:37:19"
															},
															"nativeSrc": "4530:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "4530:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4455:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4508:5:19",
														"nodeType": "YulTypedName",
														"src": "4508:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4515:3:19",
														"nodeType": "YulTypedName",
														"src": "4515:3:19",
														"type": ""
													}
												],
												"src": "4455:118:19"
											},
											{
												"body": {
													"nativeSrc": "4637:40:19",
													"nodeType": "YulBlock",
													"src": "4637:40:19",
													"statements": [
														{
															"nativeSrc": "4648:22:19",
															"nodeType": "YulAssignment",
															"src": "4648:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4664:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4664:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4658:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4658:5:19"
																},
																"nativeSrc": "4658:12:19",
																"nodeType": "YulFunctionCall",
																"src": "4658:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4648:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4648:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "4579:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4620:5:19",
														"nodeType": "YulTypedName",
														"src": "4620:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4630:6:19",
														"nodeType": "YulTypedName",
														"src": "4630:6:19",
														"type": ""
													}
												],
												"src": "4579:98:19"
											},
											{
												"body": {
													"nativeSrc": "4778:73:19",
													"nodeType": "YulBlock",
													"src": "4778:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4795:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4795:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4800:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4800:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4788:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:19"
																},
																"nativeSrc": "4788:19:19",
																"nodeType": "YulFunctionCall",
																"src": "4788:19:19"
															},
															"nativeSrc": "4788:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "4788:19:19"
														},
														{
															"nativeSrc": "4816:29:19",
															"nodeType": "YulAssignment",
															"src": "4816:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4835:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4835:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4840:4:19",
																		"nodeType": "YulLiteral",
																		"src": "4840:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4831:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4831:3:19"
																},
																"nativeSrc": "4831:14:19",
																"nodeType": "YulFunctionCall",
																"src": "4831:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4816:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "4816:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "4683:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4750:3:19",
														"nodeType": "YulTypedName",
														"src": "4750:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4755:6:19",
														"nodeType": "YulTypedName",
														"src": "4755:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4766:11:19",
														"nodeType": "YulTypedName",
														"src": "4766:11:19",
														"type": ""
													}
												],
												"src": "4683:168:19"
											},
											{
												"body": {
													"nativeSrc": "4919:77:19",
													"nodeType": "YulBlock",
													"src": "4919:77:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4936:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4936:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4941:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4941:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4946:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4946:6:19"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4930:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4930:5:19"
																},
																"nativeSrc": "4930:23:19",
																"nodeType": "YulFunctionCall",
																"src": "4930:23:19"
															},
															"nativeSrc": "4930:23:19",
															"nodeType": "YulExpressionStatement",
															"src": "4930:23:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4973:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4973:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4978:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4978:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4969:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4969:3:19"
																		},
																		"nativeSrc": "4969:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4969:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4987:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4987:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4962:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4962:6:19"
																},
																"nativeSrc": "4962:27:19",
																"nodeType": "YulFunctionCall",
																"src": "4962:27:19"
															},
															"nativeSrc": "4962:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "4962:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4857:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4901:3:19",
														"nodeType": "YulTypedName",
														"src": "4901:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4906:3:19",
														"nodeType": "YulTypedName",
														"src": "4906:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4911:6:19",
														"nodeType": "YulTypedName",
														"src": "4911:6:19",
														"type": ""
													}
												],
												"src": "4857:139:19"
											},
											{
												"body": {
													"nativeSrc": "5050:54:19",
													"nodeType": "YulBlock",
													"src": "5050:54:19",
													"statements": [
														{
															"nativeSrc": "5060:38:19",
															"nodeType": "YulAssignment",
															"src": "5060:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5078:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5078:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5085:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5085:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5074:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5074:3:19"
																		},
																		"nativeSrc": "5074:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5074:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5094:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5094:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5090:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5090:3:19"
																		},
																		"nativeSrc": "5090:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5090:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5070:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5070:3:19"
																},
																"nativeSrc": "5070:28:19",
																"nodeType": "YulFunctionCall",
																"src": "5070:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5060:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5060:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5002:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5033:5:19",
														"nodeType": "YulTypedName",
														"src": "5033:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5043:6:19",
														"nodeType": "YulTypedName",
														"src": "5043:6:19",
														"type": ""
													}
												],
												"src": "5002:102:19"
											},
											{
												"body": {
													"nativeSrc": "5200:283:19",
													"nodeType": "YulBlock",
													"src": "5200:283:19",
													"statements": [
														{
															"nativeSrc": "5210:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "5210:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5256:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "5256:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "5224:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "5224:31:19"
																},
																"nativeSrc": "5224:38:19",
																"nodeType": "YulFunctionCall",
																"src": "5224:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5214:6:19",
																	"nodeType": "YulTypedName",
																	"src": "5214:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5271:77:19",
															"nodeType": "YulAssignment",
															"src": "5271:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5336:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5336:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5341:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5341:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "5278:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "5278:57:19"
																},
																"nativeSrc": "5278:70:19",
																"nodeType": "YulFunctionCall",
																"src": "5278:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5271:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5271:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5396:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5396:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5403:4:19",
																				"nodeType": "YulLiteral",
																				"src": "5403:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5392:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5392:3:19"
																		},
																		"nativeSrc": "5392:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5392:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5410:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5410:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5415:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5415:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5357:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "5357:34:19"
																},
																"nativeSrc": "5357:65:19",
																"nodeType": "YulFunctionCall",
																"src": "5357:65:19"
															},
															"nativeSrc": "5357:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "5357:65:19"
														},
														{
															"nativeSrc": "5431:46:19",
															"nodeType": "YulAssignment",
															"src": "5431:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5442:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5442:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5469:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5469:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5447:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "5447:21:19"
																		},
																		"nativeSrc": "5447:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5438:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5438:3:19"
																},
																"nativeSrc": "5438:39:19",
																"nodeType": "YulFunctionCall",
																"src": "5438:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5431:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5431:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "5110:373:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5181:5:19",
														"nodeType": "YulTypedName",
														"src": "5181:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5188:3:19",
														"nodeType": "YulTypedName",
														"src": "5188:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5196:3:19",
														"nodeType": "YulTypedName",
														"src": "5196:3:19",
														"type": ""
													}
												],
												"src": "5110:373:19"
											},
											{
												"body": {
													"nativeSrc": "5689:440:19",
													"nodeType": "YulBlock",
													"src": "5689:440:19",
													"statements": [
														{
															"nativeSrc": "5699:27:19",
															"nodeType": "YulAssignment",
															"src": "5699:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5711:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5711:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5722:3:19",
																		"nodeType": "YulLiteral",
																		"src": "5722:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5707:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5707:3:19"
																},
																"nativeSrc": "5707:19:19",
																"nodeType": "YulFunctionCall",
																"src": "5707:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5699:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5699:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:19",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:19"
																		},
																		"nativeSrc": "5789:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5736:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:19"
																},
																"nativeSrc": "5736:71:19",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:19"
															},
															"nativeSrc": "5736:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5861:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5861:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5874:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5874:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5885:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5885:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5870:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5870:3:19"
																		},
																		"nativeSrc": "5870:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5870:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5817:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "5817:43:19"
																},
																"nativeSrc": "5817:72:19",
																"nodeType": "YulFunctionCall",
																"src": "5817:72:19"
															},
															"nativeSrc": "5817:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "5817:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5943:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5943:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5956:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5956:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5967:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5967:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5952:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:19"
																		},
																		"nativeSrc": "5952:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5952:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5899:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "5899:43:19"
																},
																"nativeSrc": "5899:72:19",
																"nodeType": "YulFunctionCall",
																"src": "5899:72:19"
															},
															"nativeSrc": "5899:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "5899:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5992:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5992:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6003:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6003:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5988:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5988:3:19"
																		},
																		"nativeSrc": "5988:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5988:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6012:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "6012:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6018:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6018:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6008:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6008:3:19"
																		},
																		"nativeSrc": "6008:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6008:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5981:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5981:6:19"
																},
																"nativeSrc": "5981:48:19",
																"nodeType": "YulFunctionCall",
																"src": "5981:48:19"
															},
															"nativeSrc": "5981:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "5981:48:19"
														},
														{
															"nativeSrc": "6038:84:19",
															"nodeType": "YulAssignment",
															"src": "6038:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6108:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6108:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6117:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "6117:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "6046:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "6046:61:19"
																},
																"nativeSrc": "6046:76:19",
																"nodeType": "YulFunctionCall",
																"src": "6046:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6038:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6038:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "5489:640:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5637:9:19",
														"nodeType": "YulTypedName",
														"src": "5637:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5649:6:19",
														"nodeType": "YulTypedName",
														"src": "5649:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5657:6:19",
														"nodeType": "YulTypedName",
														"src": "5657:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5665:6:19",
														"nodeType": "YulTypedName",
														"src": "5665:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5673:6:19",
														"nodeType": "YulTypedName",
														"src": "5673:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5684:4:19",
														"nodeType": "YulTypedName",
														"src": "5684:4:19",
														"type": ""
													}
												],
												"src": "5489:640:19"
											},
											{
												"body": {
													"nativeSrc": "6233:124:19",
													"nodeType": "YulBlock",
													"src": "6233:124:19",
													"statements": [
														{
															"nativeSrc": "6243:26:19",
															"nodeType": "YulAssignment",
															"src": "6243:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6255:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6255:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6266:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6266:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6251:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6251:3:19"
																},
																"nativeSrc": "6251:18:19",
																"nodeType": "YulFunctionCall",
																"src": "6251:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6243:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6243:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6323:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6323:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6336:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6347:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6347:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6332:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:19"
																		},
																		"nativeSrc": "6332:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6332:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6279:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6279:43:19"
																},
																"nativeSrc": "6279:71:19",
																"nodeType": "YulFunctionCall",
																"src": "6279:71:19"
															},
															"nativeSrc": "6279:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "6279:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6135:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6205:9:19",
														"nodeType": "YulTypedName",
														"src": "6205:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6217:6:19",
														"nodeType": "YulTypedName",
														"src": "6217:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6228:4:19",
														"nodeType": "YulTypedName",
														"src": "6228:4:19",
														"type": ""
													}
												],
												"src": "6135:222:19"
											},
											{
												"body": {
													"nativeSrc": "6426:80:19",
													"nodeType": "YulBlock",
													"src": "6426:80:19",
													"statements": [
														{
															"nativeSrc": "6436:22:19",
															"nodeType": "YulAssignment",
															"src": "6436:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6451:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6451:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6445:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6445:5:19"
																},
																"nativeSrc": "6445:13:19",
																"nodeType": "YulFunctionCall",
																"src": "6445:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6436:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6436:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6494:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6494:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6467:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "6467:26:19"
																},
																"nativeSrc": "6467:33:19",
																"nodeType": "YulFunctionCall",
																"src": "6467:33:19"
															},
															"nativeSrc": "6467:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "6467:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6363:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6404:6:19",
														"nodeType": "YulTypedName",
														"src": "6404:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6412:3:19",
														"nodeType": "YulTypedName",
														"src": "6412:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6420:5:19",
														"nodeType": "YulTypedName",
														"src": "6420:5:19",
														"type": ""
													}
												],
												"src": "6363:143:19"
											},
											{
												"body": {
													"nativeSrc": "6589:274:19",
													"nodeType": "YulBlock",
													"src": "6589:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6635:83:19",
																"nodeType": "YulBlock",
																"src": "6635:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6637:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "6637:77:19"
																			},
																			"nativeSrc": "6637:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6637:79:19"
																		},
																		"nativeSrc": "6637:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6637:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6610:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6610:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6619:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6619:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6606:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6606:3:19"
																		},
																		"nativeSrc": "6606:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6606:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6631:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6631:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6602:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6602:3:19"
																},
																"nativeSrc": "6602:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6602:32:19"
															},
															"nativeSrc": "6599:119:19",
															"nodeType": "YulIf",
															"src": "6599:119:19"
														},
														{
															"nativeSrc": "6728:128:19",
															"nodeType": "YulBlock",
															"src": "6728:128:19",
															"statements": [
																{
																	"nativeSrc": "6743:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6743:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6757:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6757:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6747:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6747:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6772:74:19",
																	"nodeType": "YulAssignment",
																	"src": "6772:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6818:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6818:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6829:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6829:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6814:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6814:3:19"
																				},
																				"nativeSrc": "6814:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6814:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6838:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6838:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "6782:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "6782:31:19"
																		},
																		"nativeSrc": "6782:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6782:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6772:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6772:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6512:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6559:9:19",
														"nodeType": "YulTypedName",
														"src": "6559:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6570:7:19",
														"nodeType": "YulTypedName",
														"src": "6570:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6582:6:19",
														"nodeType": "YulTypedName",
														"src": "6582:6:19",
														"type": ""
													}
												],
												"src": "6512:351:19"
											},
											{
												"body": {
													"nativeSrc": "6995:206:19",
													"nodeType": "YulBlock",
													"src": "6995:206:19",
													"statements": [
														{
															"nativeSrc": "7005:26:19",
															"nodeType": "YulAssignment",
															"src": "7005:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7017:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7017:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7028:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7013:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7013:3:19"
																},
																"nativeSrc": "7013:18:19",
																"nodeType": "YulFunctionCall",
																"src": "7013:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7005:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7005:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7085:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7085:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7098:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7098:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7109:1:19",
																				"nodeType": "YulLiteral",
																				"src": "7109:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7094:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:19"
																		},
																		"nativeSrc": "7094:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7094:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7041:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "7041:43:19"
																},
																"nativeSrc": "7041:71:19",
																"nodeType": "YulFunctionCall",
																"src": "7041:71:19"
															},
															"nativeSrc": "7041:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "7041:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7166:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7166:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7179:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7179:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7190:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7190:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7175:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7175:3:19"
																		},
																		"nativeSrc": "7175:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7175:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7122:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "7122:43:19"
																},
																"nativeSrc": "7122:72:19",
																"nodeType": "YulFunctionCall",
																"src": "7122:72:19"
															},
															"nativeSrc": "7122:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "7122:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6869:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6959:9:19",
														"nodeType": "YulTypedName",
														"src": "6959:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6971:6:19",
														"nodeType": "YulTypedName",
														"src": "6971:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6979:6:19",
														"nodeType": "YulTypedName",
														"src": "6979:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6990:4:19",
														"nodeType": "YulTypedName",
														"src": "6990:4:19",
														"type": ""
													}
												],
												"src": "6869:332:19"
											},
											{
												"body": {
													"nativeSrc": "7313:124:19",
													"nodeType": "YulBlock",
													"src": "7313:124:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7335:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7335:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7343:1:19",
																				"nodeType": "YulLiteral",
																				"src": "7343:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7331:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7331:3:19"
																		},
																		"nativeSrc": "7331:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7331:14:19"
																	},
																	{
																		"hexValue": "556e697377617056324c6962726172793a20494e53554646494349454e545f49",
																		"kind": "string",
																		"nativeSrc": "7347:34:19",
																		"nodeType": "YulLiteral",
																		"src": "7347:34:19",
																		"type": "",
																		"value": "UniswapV2Library: INSUFFICIENT_I"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7324:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7324:6:19"
																},
																"nativeSrc": "7324:58:19",
																"nodeType": "YulFunctionCall",
																"src": "7324:58:19"
															},
															"nativeSrc": "7324:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "7324:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7403:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7403:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7411:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7411:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7399:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7399:3:19"
																		},
																		"nativeSrc": "7399:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7399:15:19"
																	},
																	{
																		"hexValue": "4e5055545f414d4f554e54",
																		"kind": "string",
																		"nativeSrc": "7416:13:19",
																		"nodeType": "YulLiteral",
																		"src": "7416:13:19",
																		"type": "",
																		"value": "NPUT_AMOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7392:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7392:6:19"
																},
																"nativeSrc": "7392:38:19",
																"nodeType": "YulFunctionCall",
																"src": "7392:38:19"
															},
															"nativeSrc": "7392:38:19",
															"nodeType": "YulExpressionStatement",
															"src": "7392:38:19"
														}
													]
												},
												"name": "store_literal_in_memory_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae",
												"nativeSrc": "7207:230:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7305:6:19",
														"nodeType": "YulTypedName",
														"src": "7305:6:19",
														"type": ""
													}
												],
												"src": "7207:230:19"
											},
											{
												"body": {
													"nativeSrc": "7589:220:19",
													"nodeType": "YulBlock",
													"src": "7589:220:19",
													"statements": [
														{
															"nativeSrc": "7599:74:19",
															"nodeType": "YulAssignment",
															"src": "7599:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7665:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7665:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7670:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7670:2:19",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7606:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "7606:58:19"
																},
																"nativeSrc": "7606:67:19",
																"nodeType": "YulFunctionCall",
																"src": "7606:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7599:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7599:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7771:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7771:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae",
																	"nativeSrc": "7682:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "7682:88:19"
																},
																"nativeSrc": "7682:93:19",
																"nodeType": "YulFunctionCall",
																"src": "7682:93:19"
															},
															"nativeSrc": "7682:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "7682:93:19"
														},
														{
															"nativeSrc": "7784:19:19",
															"nodeType": "YulAssignment",
															"src": "7784:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7795:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7795:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7800:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7800:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7791:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7791:3:19"
																},
																"nativeSrc": "7791:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7791:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7784:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7784:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7443:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7577:3:19",
														"nodeType": "YulTypedName",
														"src": "7577:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7585:3:19",
														"nodeType": "YulTypedName",
														"src": "7585:3:19",
														"type": ""
													}
												],
												"src": "7443:366:19"
											},
											{
												"body": {
													"nativeSrc": "7986:248:19",
													"nodeType": "YulBlock",
													"src": "7986:248:19",
													"statements": [
														{
															"nativeSrc": "7996:26:19",
															"nodeType": "YulAssignment",
															"src": "7996:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8008:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "8008:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8019:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8019:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8004:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8004:3:19"
																},
																"nativeSrc": "8004:18:19",
																"nodeType": "YulFunctionCall",
																"src": "8004:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7996:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7996:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8043:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8043:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8054:1:19",
																				"nodeType": "YulLiteral",
																				"src": "8054:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8039:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8039:3:19"
																		},
																		"nativeSrc": "8039:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8039:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8062:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "8062:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8068:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8068:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8058:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8058:3:19"
																		},
																		"nativeSrc": "8058:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8058:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8032:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8032:6:19"
																},
																"nativeSrc": "8032:47:19",
																"nodeType": "YulFunctionCall",
																"src": "8032:47:19"
															},
															"nativeSrc": "8032:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "8032:47:19"
														},
														{
															"nativeSrc": "8088:139:19",
															"nodeType": "YulAssignment",
															"src": "8088:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8222:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "8222:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8096:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "8096:124:19"
																},
																"nativeSrc": "8096:131:19",
																"nodeType": "YulFunctionCall",
																"src": "8096:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8088:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8088:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7815:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7966:9:19",
														"nodeType": "YulTypedName",
														"src": "7966:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7981:4:19",
														"nodeType": "YulTypedName",
														"src": "7981:4:19",
														"type": ""
													}
												],
												"src": "7815:419:19"
											},
											{
												"body": {
													"nativeSrc": "8346:121:19",
													"nodeType": "YulBlock",
													"src": "8346:121:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8368:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8368:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8376:1:19",
																				"nodeType": "YulLiteral",
																				"src": "8376:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8364:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8364:3:19"
																		},
																		"nativeSrc": "8364:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8364:14:19"
																	},
																	{
																		"hexValue": "556e697377617056324c6962726172793a20494e53554646494349454e545f4c",
																		"kind": "string",
																		"nativeSrc": "8380:34:19",
																		"nodeType": "YulLiteral",
																		"src": "8380:34:19",
																		"type": "",
																		"value": "UniswapV2Library: INSUFFICIENT_L"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8357:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8357:6:19"
																},
																"nativeSrc": "8357:58:19",
																"nodeType": "YulFunctionCall",
																"src": "8357:58:19"
															},
															"nativeSrc": "8357:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "8357:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8436:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8436:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8444:2:19",
																				"nodeType": "YulLiteral",
																				"src": "8444:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8432:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:19"
																		},
																		"nativeSrc": "8432:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8432:15:19"
																	},
																	{
																		"hexValue": "4951554944495459",
																		"kind": "string",
																		"nativeSrc": "8449:10:19",
																		"nodeType": "YulLiteral",
																		"src": "8449:10:19",
																		"type": "",
																		"value": "IQUIDITY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8425:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:19"
																},
																"nativeSrc": "8425:35:19",
																"nodeType": "YulFunctionCall",
																"src": "8425:35:19"
															},
															"nativeSrc": "8425:35:19",
															"nodeType": "YulExpressionStatement",
															"src": "8425:35:19"
														}
													]
												},
												"name": "store_literal_in_memory_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8",
												"nativeSrc": "8240:227:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8338:6:19",
														"nodeType": "YulTypedName",
														"src": "8338:6:19",
														"type": ""
													}
												],
												"src": "8240:227:19"
											},
											{
												"body": {
													"nativeSrc": "8619:220:19",
													"nodeType": "YulBlock",
													"src": "8619:220:19",
													"statements": [
														{
															"nativeSrc": "8629:74:19",
															"nodeType": "YulAssignment",
															"src": "8629:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8695:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8695:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8700:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8700:2:19",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8636:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "8636:58:19"
																},
																"nativeSrc": "8636:67:19",
																"nodeType": "YulFunctionCall",
																"src": "8636:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8629:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8629:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8801:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8801:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8",
																	"nativeSrc": "8712:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "8712:88:19"
																},
																"nativeSrc": "8712:93:19",
																"nodeType": "YulFunctionCall",
																"src": "8712:93:19"
															},
															"nativeSrc": "8712:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "8712:93:19"
														},
														{
															"nativeSrc": "8814:19:19",
															"nodeType": "YulAssignment",
															"src": "8814:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8825:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8825:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8830:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8830:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8821:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8821:3:19"
																},
																"nativeSrc": "8821:12:19",
																"nodeType": "YulFunctionCall",
																"src": "8821:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8814:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8814:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8473:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8607:3:19",
														"nodeType": "YulTypedName",
														"src": "8607:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8615:3:19",
														"nodeType": "YulTypedName",
														"src": "8615:3:19",
														"type": ""
													}
												],
												"src": "8473:366:19"
											},
											{
												"body": {
													"nativeSrc": "9016:248:19",
													"nodeType": "YulBlock",
													"src": "9016:248:19",
													"statements": [
														{
															"nativeSrc": "9026:26:19",
															"nodeType": "YulAssignment",
															"src": "9026:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9038:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9038:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9049:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9049:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9034:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:19"
																},
																"nativeSrc": "9034:18:19",
																"nodeType": "YulFunctionCall",
																"src": "9034:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9026:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9026:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9073:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9073:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9084:1:19",
																				"nodeType": "YulLiteral",
																				"src": "9084:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9069:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9069:3:19"
																		},
																		"nativeSrc": "9069:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9069:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9092:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "9092:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9098:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9098:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9088:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9088:3:19"
																		},
																		"nativeSrc": "9088:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9088:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9062:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9062:6:19"
																},
																"nativeSrc": "9062:47:19",
																"nodeType": "YulFunctionCall",
																"src": "9062:47:19"
															},
															"nativeSrc": "9062:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "9062:47:19"
														},
														{
															"nativeSrc": "9118:139:19",
															"nodeType": "YulAssignment",
															"src": "9118:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9252:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "9252:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9126:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "9126:124:19"
																},
																"nativeSrc": "9126:131:19",
																"nodeType": "YulFunctionCall",
																"src": "9126:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9118:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9118:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8845:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8996:9:19",
														"nodeType": "YulTypedName",
														"src": "8996:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9011:4:19",
														"nodeType": "YulTypedName",
														"src": "9011:4:19",
														"type": ""
													}
												],
												"src": "8845:419:19"
											},
											{
												"body": {
													"nativeSrc": "9298:152:19",
													"nodeType": "YulBlock",
													"src": "9298:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9315:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9315:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9318:77:19",
																		"nodeType": "YulLiteral",
																		"src": "9318:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9308:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9308:6:19"
																},
																"nativeSrc": "9308:88:19",
																"nodeType": "YulFunctionCall",
																"src": "9308:88:19"
															},
															"nativeSrc": "9308:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "9308:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9412:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9412:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9415:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9415:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9405:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9405:6:19"
																},
																"nativeSrc": "9405:15:19",
																"nodeType": "YulFunctionCall",
																"src": "9405:15:19"
															},
															"nativeSrc": "9405:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "9405:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9436:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9436:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9439:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9439:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9429:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9429:6:19"
																},
																"nativeSrc": "9429:15:19",
																"nodeType": "YulFunctionCall",
																"src": "9429:15:19"
															},
															"nativeSrc": "9429:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "9429:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9270:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "9270:180:19"
											},
											{
												"body": {
													"nativeSrc": "9504:362:19",
													"nodeType": "YulBlock",
													"src": "9504:362:19",
													"statements": [
														{
															"nativeSrc": "9514:25:19",
															"nodeType": "YulAssignment",
															"src": "9514:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9537:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9537:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9519:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "9519:17:19"
																},
																"nativeSrc": "9519:20:19",
																"nodeType": "YulFunctionCall",
																"src": "9519:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9514:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "9514:1:19"
																}
															]
														},
														{
															"nativeSrc": "9548:25:19",
															"nodeType": "YulAssignment",
															"src": "9548:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9571:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9571:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9553:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "9553:17:19"
																},
																"nativeSrc": "9553:20:19",
																"nodeType": "YulFunctionCall",
																"src": "9553:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9548:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "9548:1:19"
																}
															]
														},
														{
															"nativeSrc": "9582:28:19",
															"nodeType": "YulVariableDeclaration",
															"src": "9582:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9605:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9605:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9608:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9608:1:19"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9601:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9601:3:19"
																},
																"nativeSrc": "9601:9:19",
																"nodeType": "YulFunctionCall",
																"src": "9601:9:19"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9586:11:19",
																	"nodeType": "YulTypedName",
																	"src": "9586:11:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9619:41:19",
															"nodeType": "YulAssignment",
															"src": "9619:41:19",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9648:11:19",
																		"nodeType": "YulIdentifier",
																		"src": "9648:11:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9630:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "9630:17:19"
																},
																"nativeSrc": "9630:30:19",
																"nodeType": "YulFunctionCall",
																"src": "9630:30:19"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9619:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "9619:7:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9837:22:19",
																"nodeType": "YulBlock",
																"src": "9837:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9839:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "9839:16:19"
																			},
																			"nativeSrc": "9839:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9839:18:19"
																		},
																		"nativeSrc": "9839:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9839:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9770:1:19",
																						"nodeType": "YulIdentifier",
																						"src": "9770:1:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9763:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "9763:6:19"
																				},
																				"nativeSrc": "9763:9:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9763:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9793:1:19",
																						"nodeType": "YulIdentifier",
																						"src": "9793:1:19"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9800:7:19",
																								"nodeType": "YulIdentifier",
																								"src": "9800:7:19"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9809:1:19",
																								"nodeType": "YulIdentifier",
																								"src": "9809:1:19"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9796:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "9796:3:19"
																						},
																						"nativeSrc": "9796:15:19",
																						"nodeType": "YulFunctionCall",
																						"src": "9796:15:19"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9790:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "9790:2:19"
																				},
																				"nativeSrc": "9790:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9790:22:19"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9743:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "9743:2:19"
																		},
																		"nativeSrc": "9743:83:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9743:83:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9723:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9723:6:19"
																},
																"nativeSrc": "9723:113:19",
																"nodeType": "YulFunctionCall",
																"src": "9723:113:19"
															},
															"nativeSrc": "9720:139:19",
															"nodeType": "YulIf",
															"src": "9720:139:19"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9456:410:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9487:1:19",
														"nodeType": "YulTypedName",
														"src": "9487:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9490:1:19",
														"nodeType": "YulTypedName",
														"src": "9490:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9496:7:19",
														"nodeType": "YulTypedName",
														"src": "9496:7:19",
														"type": ""
													}
												],
												"src": "9456:410:19"
											},
											{
												"body": {
													"nativeSrc": "9916:147:19",
													"nodeType": "YulBlock",
													"src": "9916:147:19",
													"statements": [
														{
															"nativeSrc": "9926:25:19",
															"nodeType": "YulAssignment",
															"src": "9926:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9949:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9949:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9931:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "9931:17:19"
																},
																"nativeSrc": "9931:20:19",
																"nodeType": "YulFunctionCall",
																"src": "9931:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9926:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "9926:1:19"
																}
															]
														},
														{
															"nativeSrc": "9960:25:19",
															"nodeType": "YulAssignment",
															"src": "9960:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9983:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9983:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9965:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "9965:17:19"
																},
																"nativeSrc": "9965:20:19",
																"nodeType": "YulFunctionCall",
																"src": "9965:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9960:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "9960:1:19"
																}
															]
														},
														{
															"nativeSrc": "9994:16:19",
															"nodeType": "YulAssignment",
															"src": "9994:16:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10005:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10005:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10008:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10008:1:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10001:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10001:3:19"
																},
																"nativeSrc": "10001:9:19",
																"nodeType": "YulFunctionCall",
																"src": "10001:9:19"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9994:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9994:3:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10034:22:19",
																"nodeType": "YulBlock",
																"src": "10034:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10036:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10036:16:19"
																			},
																			"nativeSrc": "10036:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10036:18:19"
																		},
																		"nativeSrc": "10036:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10036:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10026:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10026:1:19"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10029:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10029:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10023:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10023:2:19"
																},
																"nativeSrc": "10023:10:19",
																"nodeType": "YulFunctionCall",
																"src": "10023:10:19"
															},
															"nativeSrc": "10020:36:19",
															"nodeType": "YulIf",
															"src": "10020:36:19"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9872:191:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9903:1:19",
														"nodeType": "YulTypedName",
														"src": "9903:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9906:1:19",
														"nodeType": "YulTypedName",
														"src": "9906:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9912:3:19",
														"nodeType": "YulTypedName",
														"src": "9912:3:19",
														"type": ""
													}
												],
												"src": "9872:191:19"
											},
											{
												"body": {
													"nativeSrc": "10097:152:19",
													"nodeType": "YulBlock",
													"src": "10097:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10114:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10114:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10117:77:19",
																		"nodeType": "YulLiteral",
																		"src": "10117:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10107:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10107:6:19"
																},
																"nativeSrc": "10107:88:19",
																"nodeType": "YulFunctionCall",
																"src": "10107:88:19"
															},
															"nativeSrc": "10107:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "10107:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10211:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10211:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10214:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10214:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10204:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10204:6:19"
																},
																"nativeSrc": "10204:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10204:15:19"
															},
															"nativeSrc": "10204:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10204:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10235:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10235:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10238:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10238:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10228:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10228:6:19"
																},
																"nativeSrc": "10228:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10228:15:19"
															},
															"nativeSrc": "10228:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10228:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10069:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "10069:180:19"
											},
											{
												"body": {
													"nativeSrc": "10297:143:19",
													"nodeType": "YulBlock",
													"src": "10297:143:19",
													"statements": [
														{
															"nativeSrc": "10307:25:19",
															"nodeType": "YulAssignment",
															"src": "10307:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10330:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10330:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10312:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "10312:17:19"
																},
																"nativeSrc": "10312:20:19",
																"nodeType": "YulFunctionCall",
																"src": "10312:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10307:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "10307:1:19"
																}
															]
														},
														{
															"nativeSrc": "10341:25:19",
															"nodeType": "YulAssignment",
															"src": "10341:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10364:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10364:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10346:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "10346:17:19"
																},
																"nativeSrc": "10346:20:19",
																"nodeType": "YulFunctionCall",
																"src": "10346:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10341:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "10341:1:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10388:22:19",
																"nodeType": "YulBlock",
																"src": "10388:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10390:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10390:16:19"
																			},
																			"nativeSrc": "10390:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10390:18:19"
																		},
																		"nativeSrc": "10390:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10390:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10385:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10385:1:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10378:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10378:6:19"
																},
																"nativeSrc": "10378:9:19",
																"nodeType": "YulFunctionCall",
																"src": "10378:9:19"
															},
															"nativeSrc": "10375:35:19",
															"nodeType": "YulIf",
															"src": "10375:35:19"
														},
														{
															"nativeSrc": "10420:14:19",
															"nodeType": "YulAssignment",
															"src": "10420:14:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10429:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10429:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10432:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10432:1:19"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10425:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10425:3:19"
																},
																"nativeSrc": "10425:9:19",
																"nodeType": "YulFunctionCall",
																"src": "10425:9:19"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10420:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "10420:1:19"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10255:185:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10286:1:19",
														"nodeType": "YulTypedName",
														"src": "10286:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10289:1:19",
														"nodeType": "YulTypedName",
														"src": "10289:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10295:1:19",
														"nodeType": "YulTypedName",
														"src": "10295:1:19",
														"type": ""
													}
												],
												"src": "10255:185:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006(memPtr) {\n\n        mstore(add(memPtr, 0), \"No token in pair\")\n\n    }\n\n    function abi_encode_t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae(memPtr) {\n\n        mstore(add(memPtr, 0), \"UniswapV2Library: INSUFFICIENT_I\")\n\n        mstore(add(memPtr, 32), \"NPUT_AMOUNT\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8(memPtr) {\n\n        mstore(add(memPtr, 0), \"UniswapV2Library: INSUFFICIENT_L\")\n\n        mstore(add(memPtr, 32), \"IQUIDITY\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063df791e5014610038578063ec0a63d814610054575b5f80fd5b610052600480360381019061004d91906107e5565b610085565b005b61006e60048036038101906100699190610835565b610374565b60405161007c92919061086f565b60405180910390f35b5f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100f791906108aa565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610143573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061016791906108aa565b90505f8061017488610374565b915091508373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614806101dd57508273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16145b61021c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102139061092f565b60405180910390fd5b5f8473ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610256575f610259565b60015b905061028689888a73ffffffffffffffffffffffffffffffffffffffff166105569092919063ffffffff16565b5f808261029e576102988985876105d5565b5f6102ab565b5f6102aa8a87876105d5565b5b915091508a73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f8383305f67ffffffffffffffff8111156102e8576102e761094d565b5b6040519080825280601f01601f19166020018201604052801561031a5781602001600182028036833780820191505090505b506040518563ffffffff1660e01b815260040161033a94939291906109f9565b5f604051808303815f87803b158015610351575f80fd5b505af1158015610363573d5f803e3d5ffd5b505050505050505050505050505050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e891906108aa565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610434573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045891906108aa565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016104939190610a43565b602060405180830381865afa1580156104ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d29190610a70565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161050d9190610a43565b602060405180830381865afa158015610528573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054c9190610a70565b9350505050915091565b6105d0838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610589929190610a9b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106b9565b505050565b5f808411610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610b32565b60405180910390fd5b5f8311801561062657505f82115b610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90610bc0565b60405180910390fd5b5f6103e5856106749190610c0b565b90505f83826106839190610c0b565b90505f826103e8876106959190610c0b565b61069f9190610c4c565b905080826106ad9190610cac565b93505050509392505050565b5f8060205f8451602086015f885af1806106d8576040513d5f823e3d81fd5b3d92505f519150505f82146106f157600181141561070c565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561074e57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016107459190610a43565b60405180910390fd5b50505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61078182610758565b9050919050565b61079181610777565b811461079b575f80fd5b50565b5f813590506107ac81610788565b92915050565b5f819050919050565b6107c4816107b2565b81146107ce575f80fd5b50565b5f813590506107df816107bb565b92915050565b5f805f606084860312156107fc576107fb610754565b5b5f6108098682870161079e565b935050602061081a8682870161079e565b925050604061082b868287016107d1565b9150509250925092565b5f6020828403121561084a57610849610754565b5b5f6108578482850161079e565b91505092915050565b610869816107b2565b82525050565b5f6040820190506108825f830185610860565b61088f6020830184610860565b9392505050565b5f815190506108a481610788565b92915050565b5f602082840312156108bf576108be610754565b5b5f6108cc84828501610896565b91505092915050565b5f82825260208201905092915050565b7f4e6f20746f6b656e20696e2070616972000000000000000000000000000000005f82015250565b5f6109196010836108d5565b9150610924826108e5565b602082019050919050565b5f6020820190508181035f8301526109468161090d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61098381610777565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6109cb82610989565b6109d58185610993565b93506109e58185602086016109a3565b6109ee816109b1565b840191505092915050565b5f608082019050610a0c5f830187610860565b610a196020830186610860565b610a26604083018561097a565b8181036060830152610a3881846109c1565b905095945050505050565b5f602082019050610a565f83018461097a565b92915050565b5f81519050610a6a816107bb565b92915050565b5f60208284031215610a8557610a84610754565b5b5f610a9284828501610a5c565b91505092915050565b5f604082019050610aae5f83018561097a565b610abb6020830184610860565b9392505050565b7f556e697377617056324c6962726172793a20494e53554646494349454e545f495f8201527f4e5055545f414d4f554e54000000000000000000000000000000000000000000602082015250565b5f610b1c602b836108d5565b9150610b2782610ac2565b604082019050919050565b5f6020820190508181035f830152610b4981610b10565b9050919050565b7f556e697377617056324c6962726172793a20494e53554646494349454e545f4c5f8201527f4951554944495459000000000000000000000000000000000000000000000000602082015250565b5f610baa6028836108d5565b9150610bb582610b50565b604082019050919050565b5f6020820190508181035f830152610bd781610b9e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c15826107b2565b9150610c20836107b2565b9250828202610c2e816107b2565b91508282048414831517610c4557610c44610bde565b5b5092915050565b5f610c56826107b2565b9150610c61836107b2565b9250828201905080821115610c7957610c78610bde565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610cb6826107b2565b9150610cc1836107b2565b925082610cd157610cd0610c7f565b5b82820490509291505056fea2646970667358221220f9a8ac423a8e1dc8c8bf623710f10524c972c9adab17cc6f577ff7f9e8044e5064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xEC0A63D8 EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH2 0x85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP3 SWAP2 SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x143 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x174 DUP9 PUSH2 0x374 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1DD JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x256 JUMPI PUSH0 PUSH2 0x259 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x286 DUP10 DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x556 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH2 0x29E JUMPI PUSH2 0x298 DUP10 DUP6 DUP8 PUSH2 0x5D5 JUMP JUMPDEST PUSH0 PUSH2 0x2AB JUMP JUMPDEST PUSH0 PUSH2 0x2AA DUP11 DUP8 DUP8 PUSH2 0x5D5 JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP2 POP DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x22C0D9F DUP4 DUP4 ADDRESS PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E8 JUMPI PUSH2 0x2E7 PUSH2 0x94D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x31A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x363 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x434 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x528 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54C SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x5D0 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x589 SWAP3 SWAP2 SWAP1 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 GT PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x626 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP6 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x683 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 DUP8 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x69F SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0xCAC JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x6F1 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x70C JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x74E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x781 DUP3 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x777 JUMP JUMPDEST DUP2 EQ PUSH2 0x79B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7AC DUP2 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C4 DUP2 PUSH2 0x7B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7DF DUP2 PUSH2 0x7BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7FB PUSH2 0x754 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x809 DUP7 DUP3 DUP8 ADD PUSH2 0x79E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x81A DUP7 DUP3 DUP8 ADD PUSH2 0x79E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x82B DUP7 DUP3 DUP8 ADD PUSH2 0x7D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84A JUMPI PUSH2 0x849 PUSH2 0x754 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x857 DUP5 DUP3 DUP6 ADD PUSH2 0x79E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x869 DUP2 PUSH2 0x7B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x882 PUSH0 DUP4 ADD DUP6 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x88F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x860 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8A4 DUP2 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8BF JUMPI PUSH2 0x8BE PUSH2 0x754 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8CC DUP5 DUP3 DUP6 ADD PUSH2 0x896 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E20696E207061697200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x919 PUSH1 0x10 DUP4 PUSH2 0x8D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x924 DUP3 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x946 DUP2 PUSH2 0x90D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x983 DUP2 PUSH2 0x777 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9CB DUP3 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x9D5 DUP2 DUP6 PUSH2 0x993 JUMP JUMPDEST SWAP4 POP PUSH2 0x9E5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0x9EE DUP2 PUSH2 0x9B1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xA0C PUSH0 DUP4 ADD DUP8 PUSH2 0x860 JUMP JUMPDEST PUSH2 0xA19 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x860 JUMP JUMPDEST PUSH2 0xA26 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x97A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xA38 DUP2 DUP5 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA56 PUSH0 DUP4 ADD DUP5 PUSH2 0x97A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA6A DUP2 PUSH2 0x7BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x754 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA92 DUP5 DUP3 DUP6 ADD PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAAE PUSH0 DUP4 ADD DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH2 0xABB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x860 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x556E697377617056324C6962726172793A20494E53554646494349454E545F49 PUSH0 DUP3 ADD MSTORE PUSH32 0x4E5055545F414D4F554E54000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB1C PUSH1 0x2B DUP4 PUSH2 0x8D5 JUMP JUMPDEST SWAP2 POP PUSH2 0xB27 DUP3 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB49 DUP2 PUSH2 0xB10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E697377617056324C6962726172793A20494E53554646494349454E545F4C PUSH0 DUP3 ADD MSTORE PUSH32 0x4951554944495459000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBAA PUSH1 0x28 DUP4 PUSH2 0x8D5 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB5 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBD7 DUP2 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC15 DUP3 PUSH2 0x7B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC20 DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC2E DUP2 PUSH2 0x7B2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC45 JUMPI PUSH2 0xC44 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC56 DUP3 PUSH2 0x7B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC61 DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC79 JUMPI PUSH2 0xC78 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCB6 DUP3 PUSH2 0x7B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC1 DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCD1 JUMPI PUSH2 0xCD0 PUSH2 0xC7F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xA8 0xAC TIMESTAMP GASPRICE DUP15 SAR 0xC8 0xC8 0xBF PUSH3 0x3710F1 SDIV 0x24 0xC9 PUSH19 0xC9ADAB17CC6F577FF7F9E8044E5064736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "263:2528:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:760;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2448:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;319:760;408:19;445:9;408:47;;465:14;482:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;465:30;;505:14;522:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;505:30;;546:9;557;570:24;584:9;570:13;:24::i;:::-;545:49;;;;625:6;613:18;;:8;:18;;;612:44;;;;649:6;637:18;;:8;:18;;;612:44;604:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;687:16;718:6;706:18;;:8;:18;;;:33;;734:5;706:33;;;727:4;706:33;687:52;;751:51;781:9;792;758:8;751:29;;;;:51;;;;;:::i;:::-;815:18;835;870:11;:103;;931:29;944:9;955:1;958;931:12;:29::i;:::-;970:1;870:103;;;893:1;897:29;910:9;921:1;924;897:12;:29::i;:::-;870:103;814:159;;;;1001:9;986:30;;;1017:10;1029;1049:4;1066:1;1056:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;398:681;;;;;;;;319:760;;;:::o;2448:340::-;2506:16;2524;2552:19;2589:4;2552:42;;2605:14;2622:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2605:30;;2646:14;2663:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2646:30;;2705:6;2698:24;;;2723:4;2698:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2687:41;;2757:6;2750:24;;;2775:4;2750:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2739:41;;2541:247;;;2448:340;;;:::o;1222:160:5:-;1304:71;1324:5;1346;:14;;;1363:2;1367:5;1331:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:19;:71::i;:::-;1222:160;;;:::o;1805:635:18:-;1941:17;1990:1;1979:8;:12;1971:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2070:1;2058:9;:13;:31;;;;;2088:1;2075:10;:14;2058:31;2050:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;2145:23;2182:3;2171:8;:14;;;;:::i;:::-;2145:40;;2221:17;2259:10;2241:15;:28;;;;:::i;:::-;2221:48;;2305:19;2346:15;2339:4;2327:9;:16;;;;:::i;:::-;:34;;;;:::i;:::-;2305:56;;2421:11;2409:9;:23;;;;:::i;:::-;2397:35;;1960:480;;;1805:635;;;;;:::o;7689:720:5:-;7769:18;7797:19;7935:4;7932:1;7925:4;7919:11;7912:4;7906;7902:15;7899:1;7892:5;7885;7880:60;7992:7;7982:176;;8036:4;8030:11;8081:16;8078:1;8073:3;8058:40;8127:16;8122:3;8115:29;7982:176;8185:16;8171:30;;8235:1;8229:8;8214:23;;7851:396;8275:1;8261:10;:15;:68;;8328:1;8313:11;:16;;8261:68;;;8309:1;8287:5;8279:26;;;:31;8261:68;8257:146;;;8385:5;8352:40;;;;;;;;;;;:::i;:::-;;;;;;;;8257:146;7759:650;;7689:720;;:::o;88:117:19:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:329::-;1881:6;1930:2;1918:9;1909:7;1905:23;1901:32;1898:119;;;1936:79;;:::i;:::-;1898:119;2056:1;2081:53;2126:7;2117:6;2106:9;2102:22;2081:53;:::i;:::-;2071:63;;2027:117;1822:329;;;;:::o;2157:118::-;2244:24;2262:5;2244:24;:::i;:::-;2239:3;2232:37;2157:118;;:::o;2281:332::-;2402:4;2440:2;2429:9;2425:18;2417:26;;2453:71;2521:1;2510:9;2506:17;2497:6;2453:71;:::i;:::-;2534:72;2602:2;2591:9;2587:18;2578:6;2534:72;:::i;:::-;2281:332;;;;;:::o;2619:143::-;2676:5;2707:6;2701:13;2692:22;;2723:33;2750:5;2723:33;:::i;:::-;2619:143;;;;:::o;2768:351::-;2838:6;2887:2;2875:9;2866:7;2862:23;2858:32;2855:119;;;2893:79;;:::i;:::-;2855:119;3013:1;3038:64;3094:7;3085:6;3074:9;3070:22;3038:64;:::i;:::-;3028:74;;2984:128;2768:351;;;;:::o;3125:169::-;3209:11;3243:6;3238:3;3231:19;3283:4;3278:3;3274:14;3259:29;;3125:169;;;;:::o;3300:166::-;3440:18;3436:1;3428:6;3424:14;3417:42;3300:166;:::o;3472:366::-;3614:3;3635:67;3699:2;3694:3;3635:67;:::i;:::-;3628:74;;3711:93;3800:3;3711:93;:::i;:::-;3829:2;3824:3;3820:12;3813:19;;3472:366;;;:::o;3844:419::-;4010:4;4048:2;4037:9;4033:18;4025:26;;4097:9;4091:4;4087:20;4083:1;4072:9;4068:17;4061:47;4125:131;4251:4;4125:131;:::i;:::-;4117:139;;3844:419;;;:::o;4269:180::-;4317:77;4314:1;4307:88;4414:4;4411:1;4404:15;4438:4;4435:1;4428:15;4455:118;4542:24;4560:5;4542:24;:::i;:::-;4537:3;4530:37;4455:118;;:::o;4579:98::-;4630:6;4664:5;4658:12;4648:22;;4579:98;;;:::o;4683:168::-;4766:11;4800:6;4795:3;4788:19;4840:4;4835:3;4831:14;4816:29;;4683:168;;;;:::o;4857:139::-;4946:6;4941:3;4936;4930:23;4987:1;4978:6;4973:3;4969:16;4962:27;4857:139;;;:::o;5002:102::-;5043:6;5094:2;5090:7;5085:2;5078:5;5074:14;5070:28;5060:38;;5002:102;;;:::o;5110:373::-;5196:3;5224:38;5256:5;5224:38;:::i;:::-;5278:70;5341:6;5336:3;5278:70;:::i;:::-;5271:77;;5357:65;5415:6;5410:3;5403:4;5396:5;5392:16;5357:65;:::i;:::-;5447:29;5469:6;5447:29;:::i;:::-;5442:3;5438:39;5431:46;;5200:283;5110:373;;;;:::o;5489:640::-;5684:4;5722:3;5711:9;5707:19;5699:27;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5817:72;5885:2;5874:9;5870:18;5861:6;5817:72;:::i;:::-;5899;5967:2;5956:9;5952:18;5943:6;5899:72;:::i;:::-;6018:9;6012:4;6008:20;6003:2;5992:9;5988:18;5981:48;6046:76;6117:4;6108:6;6046:76;:::i;:::-;6038:84;;5489:640;;;;;;;:::o;6135:222::-;6228:4;6266:2;6255:9;6251:18;6243:26;;6279:71;6347:1;6336:9;6332:17;6323:6;6279:71;:::i;:::-;6135:222;;;;:::o;6363:143::-;6420:5;6451:6;6445:13;6436:22;;6467:33;6494:5;6467:33;:::i;:::-;6363:143;;;;:::o;6512:351::-;6582:6;6631:2;6619:9;6610:7;6606:23;6602:32;6599:119;;;6637:79;;:::i;:::-;6599:119;6757:1;6782:64;6838:7;6829:6;6818:9;6814:22;6782:64;:::i;:::-;6772:74;;6728:128;6512:351;;;;:::o;6869:332::-;6990:4;7028:2;7017:9;7013:18;7005:26;;7041:71;7109:1;7098:9;7094:17;7085:6;7041:71;:::i;:::-;7122:72;7190:2;7179:9;7175:18;7166:6;7122:72;:::i;:::-;6869:332;;;;;:::o;7207:230::-;7347:34;7343:1;7335:6;7331:14;7324:58;7416:13;7411:2;7403:6;7399:15;7392:38;7207:230;:::o;7443:366::-;7585:3;7606:67;7670:2;7665:3;7606:67;:::i;:::-;7599:74;;7682:93;7771:3;7682:93;:::i;:::-;7800:2;7795:3;7791:12;7784:19;;7443:366;;;:::o;7815:419::-;7981:4;8019:2;8008:9;8004:18;7996:26;;8068:9;8062:4;8058:20;8054:1;8043:9;8039:17;8032:47;8096:131;8222:4;8096:131;:::i;:::-;8088:139;;7815:419;;;:::o;8240:227::-;8380:34;8376:1;8368:6;8364:14;8357:58;8449:10;8444:2;8436:6;8432:15;8425:35;8240:227;:::o;8473:366::-;8615:3;8636:67;8700:2;8695:3;8636:67;:::i;:::-;8629:74;;8712:93;8801:3;8712:93;:::i;:::-;8830:2;8825:3;8821:12;8814:19;;8473:366;;;:::o;8845:419::-;9011:4;9049:2;9038:9;9034:18;9026:26;;9098:9;9092:4;9088:20;9084:1;9073:9;9069:17;9062:47;9126:131;9252:4;9126:131;:::i;:::-;9118:139;;8845:419;;;:::o;9270:180::-;9318:77;9315:1;9308:88;9415:4;9412:1;9405:15;9439:4;9436:1;9429:15;9456:410;9496:7;9519:20;9537:1;9519:20;:::i;:::-;9514:25;;9553:20;9571:1;9553:20;:::i;:::-;9548:25;;9608:1;9605;9601:9;9630:30;9648:11;9630:30;:::i;:::-;9619:41;;9809:1;9800:7;9796:15;9793:1;9790:22;9770:1;9763:9;9743:83;9720:139;;9839:18;;:::i;:::-;9720:139;9504:362;9456:410;;;;:::o;9872:191::-;9912:3;9931:20;9949:1;9931:20;:::i;:::-;9926:25;;9965:20;9983:1;9965:20;:::i;:::-;9960:25;;10008:1;10005;10001:9;9994:16;;10029:3;10026:1;10023:10;10020:36;;;10036:18;;:::i;:::-;10020:36;9872:191;;;;:::o;10069:180::-;10117:77;10114:1;10107:88;10214:4;10211:1;10204:15;10238:4;10235:1;10228:15;10255:185;10295:1;10312:20;10330:1;10312:20;:::i;:::-;10307:25;;10346:20;10364:1;10346:20;:::i;:::-;10341:25;;10385:1;10375:35;;10390:18;;:::i;:::-;10375:35;10432:1;10429;10425:9;10420:14;;10255:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "669200",
								"executionCost": "700",
								"totalCost": "669900"
							},
							"external": {
								"getReservesV2(address)": "infinite",
								"swap(address,address,uint256)": "infinite"
							},
							"internal": {
								"getAmountIn(uint256,uint256,uint256)": "infinite",
								"getAmountOut(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 263,
									"end": 2791,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 2791,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9a8ac423a8e1dc8c8bf623710f10524c972c9adab17cc6f577ff7f9e8044e5064736f6c634300081a0033",
									".code": [
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "DF791E50"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "EC0A63D8"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 263,
											"end": 2791,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 319,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "tag",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "tag",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "tag",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 2448,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "tag",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 2448,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "tag",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 2448,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "tag",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 454,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 408,
											"end": 455,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 408,
											"end": 455,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 465,
											"end": 479,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 486,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 482,
											"end": 493,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 493,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 482,
											"end": 493,
											"name": "PUSH",
											"source": 18,
											"value": "DFE1681"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "tag",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 482,
											"end": 495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 482,
											"end": 495,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 465,
											"end": 495,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 465,
											"end": 495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 505,
											"end": 519,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 526,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 522,
											"end": 533,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 533,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 522,
											"end": 533,
											"name": "PUSH",
											"source": 18,
											"value": "D21220A7"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 522,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 522,
											"end": 535,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 505,
											"end": 535,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 505,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 546,
											"end": 555,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 566,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 570,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 570,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 570,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 570,
											"end": 594,
											"name": "tag",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 570,
											"end": 594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 545,
											"end": 594,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 545,
											"end": 594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 545,
											"end": 594,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 545,
											"end": 594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 625,
											"end": 631,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 613,
											"end": 631,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 631,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 613,
											"end": 621,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 613,
											"end": 631,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 631,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 613,
											"end": 631,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 612,
											"end": 656,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 612,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 612,
											"end": 656,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 612,
											"end": 656,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 637,
											"end": 655,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 655,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 637,
											"end": 645,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 637,
											"end": 655,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 655,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 637,
											"end": 655,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 612,
											"end": 656,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 612,
											"end": 656,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 604,
											"end": 677,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 677,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 604,
											"end": 677,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 677,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 604,
											"end": 677,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 604,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 604,
											"end": 677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 677,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 604,
											"end": 677,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 604,
											"end": 677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 687,
											"end": 703,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 724,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 706,
											"end": 714,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 706,
											"end": 724,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 706,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 706,
											"end": 739,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 734,
											"end": 739,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 706,
											"end": 739,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 706,
											"end": 739,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 706,
											"end": 739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 706,
											"end": 739,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 706,
											"end": 739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 687,
											"end": 739,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 687,
											"end": 739,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 751,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 781,
											"end": 790,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 792,
											"end": 801,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 758,
											"end": 766,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 751,
											"end": 780,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 751,
											"end": 780,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 751,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 751,
											"end": 780,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 751,
											"end": 802,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 751,
											"end": 802,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 751,
											"end": 802,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 751,
											"end": 802,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 751,
											"end": 802,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 751,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 751,
											"end": 802,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 751,
											"end": 802,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 815,
											"end": 833,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 853,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 870,
											"end": 881,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 870,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 870,
											"end": 973,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 931,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 944,
											"end": 953,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 955,
											"end": 956,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 958,
											"end": 959,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 931,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 931,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 931,
											"end": 960,
											"name": "tag",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 931,
											"end": 960,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 970,
											"end": 971,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 870,
											"end": 973,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 870,
											"end": 973,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 870,
											"end": 973,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 893,
											"end": 894,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 910,
											"end": 919,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 921,
											"end": 922,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 924,
											"end": 925,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 897,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 897,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 897,
											"end": 926,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 897,
											"end": 926,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 870,
											"end": 973,
											"name": "tag",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 870,
											"end": 973,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 814,
											"end": 973,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 814,
											"end": 973,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 814,
											"end": 973,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 814,
											"end": 973,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1016,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1016,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1016,
											"name": "PUSH",
											"source": 18,
											"value": "22C0D9F"
										},
										{
											"begin": 1017,
											"end": 1027,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1029,
											"end": 1039,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1049,
											"end": 1053,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 1056,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1056,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 986,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "tag",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 986,
											"end": 1069,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 398,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 319,
											"end": 1079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "tag",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2540,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2552,
											"end": 2571,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2552,
											"end": 2594,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2552,
											"end": 2594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2605,
											"end": 2619,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2626,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2633,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2622,
											"end": 2633,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2633,
											"name": "PUSH",
											"source": 18,
											"value": "DFE1681"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "tag",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 2622,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "tag",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2646,
											"end": 2660,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2667,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2674,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2674,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2674,
											"name": "PUSH",
											"source": 18,
											"value": "D21220A7"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "tag",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 2663,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "tag",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 2663,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2722,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2698,
											"end": 2722,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2722,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 2698,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 2698,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "tag",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2687,
											"end": 2728,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2687,
											"end": 2728,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 2775,
											"end": 2779,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 2750,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "tag",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 2750,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "tag",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 2750,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2739,
											"end": 2780,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2739,
											"end": 2780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2788,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2788,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2788,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2448,
											"end": 2788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1382,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1222,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1351,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1360,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1346,
											"end": 1360,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1360,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1331,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1304,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1375,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1304,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 2440,
											"name": "tag",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 1805,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1941,
											"end": 1958,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 1987,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 1991,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 1971,
											"end": 2039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "tag",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1971,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2085,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2075,
											"end": 2089,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 2050,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "tag",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 2050,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2145,
											"end": 2168,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2185,
											"name": "PUSH",
											"source": 18,
											"value": "3E5"
										},
										{
											"begin": 2171,
											"end": 2179,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2171,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 2171,
											"end": 2185,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2171,
											"end": 2185,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2171,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 2171,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2171,
											"end": 2185,
											"name": "tag",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 2171,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2145,
											"end": 2185,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2145,
											"end": 2185,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2269,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2241,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2241,
											"end": 2269,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2241,
											"end": 2269,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2241,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 2241,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2241,
											"end": 2269,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2241,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2221,
											"end": 2269,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2221,
											"end": 2269,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2305,
											"end": 2324,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2361,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2339,
											"end": 2343,
											"name": "PUSH",
											"source": 18,
											"value": "3E8"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 2327,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 2327,
											"end": 2361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2305,
											"end": 2361,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2305,
											"end": 2361,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2421,
											"end": 2432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 2409,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1960,
											"end": 2440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1960,
											"end": 2440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1960,
											"end": 2440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 2440,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 2440,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 2440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 2440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 2440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 2440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7689,
											"end": 8409,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 7689,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7769,
											"end": 7787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7797,
											"end": 7816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7935,
											"end": 7939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7929,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 7930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7916,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7910,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 7917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7899,
											"end": 7900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7897,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7885,
											"end": 7890,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 7940,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7982,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 7982,
											"end": 8158,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8036,
											"end": 8040,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8030,
											"end": 8041,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8081,
											"end": 8097,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8078,
											"end": 8079,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8073,
											"end": 8076,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8058,
											"end": 8098,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8127,
											"end": 8143,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8115,
											"end": 8144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7982,
											"end": 8158,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 7982,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8185,
											"end": 8201,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8201,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8235,
											"end": 8236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8237,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8214,
											"end": 8237,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8214,
											"end": 8237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 8247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8261,
											"end": 8276,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8261,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 8261,
											"end": 8329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8329,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8313,
											"end": 8324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8313,
											"end": 8329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8313,
											"end": 8329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8261,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 8261,
											"end": 8329,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8261,
											"end": 8329,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 8261,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8309,
											"end": 8310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8292,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8279,
											"end": 8310,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8261,
											"end": 8329,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 8261,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8257,
											"end": 8403,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8257,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 8257,
											"end": 8403,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8385,
											"end": 8390,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 8352,
											"end": 8392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8392,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8257,
											"end": 8403,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 8257,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7759,
											"end": 8409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7759,
											"end": 8409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7689,
											"end": 8409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7689,
											"end": 8409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7689,
											"end": 8409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "91"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 19,
											"value": "93"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "124"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "93"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 19,
											"value": "124"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "127"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 19,
											"value": "127"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "132"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 19,
											"value": "132"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "133"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 19,
											"value": "133"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "135"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 19,
											"value": "135"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "tag",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "137"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "138"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "91"
										},
										{
											"begin": 1345,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "tag",
											"source": 19,
											"value": "138"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "tag",
											"source": 19,
											"value": "137"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 1490,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 1618,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 1746,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "tag",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1881,
											"end": 1887,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1932,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1909,
											"end": 1916,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1905,
											"end": 1928,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1901,
											"end": 1933,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "144"
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "91"
										},
										{
											"begin": 1936,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "tag",
											"source": 19,
											"value": "144"
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 2081,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "tag",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2027,
											"end": 2144,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1822,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "tag",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 2262,
											"end": 2267,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 2244,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "tag",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2239,
											"end": 2242,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2269,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2157,
											"end": 2275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2613,
											"name": "tag",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 2281,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2402,
											"end": 2406,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2417,
											"end": 2443,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2417,
											"end": 2443,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2453,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2506,
											"end": 2523,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2453,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2453,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2453,
											"end": 2524,
											"name": "tag",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 2453,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2534,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 2602,
											"end": 2604,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2600,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2578,
											"end": 2584,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2534,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2534,
											"end": 2606,
											"name": "tag",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 2534,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2613,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2613,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2613,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2613,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2613,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2619,
											"end": 2762,
											"name": "tag",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 2619,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2676,
											"end": 2681,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2713,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2701,
											"end": 2714,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2692,
											"end": 2714,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2692,
											"end": 2714,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2723,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "152"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2723,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 2723,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2723,
											"end": 2756,
											"name": "tag",
											"source": 19,
											"value": "152"
										},
										{
											"begin": 2723,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2619,
											"end": 2762,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2619,
											"end": 2762,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2619,
											"end": 2762,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2619,
											"end": 2762,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2619,
											"end": 2762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2768,
											"end": 3119,
											"name": "tag",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 2768,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2875,
											"end": 2884,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2866,
											"end": 2873,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2862,
											"end": 2885,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2858,
											"end": 2890,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2855,
											"end": 2974,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2855,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "154"
										},
										{
											"begin": 2855,
											"end": 2974,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2893,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "155"
										},
										{
											"begin": 2893,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "91"
										},
										{
											"begin": 2893,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2893,
											"end": 2972,
											"name": "tag",
											"source": 19,
											"value": "155"
										},
										{
											"begin": 2893,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2855,
											"end": 2974,
											"name": "tag",
											"source": 19,
											"value": "154"
										},
										{
											"begin": 2855,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3013,
											"end": 3014,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "156"
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3085,
											"end": 3091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3074,
											"end": 3083,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3038,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 3038,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3038,
											"end": 3102,
											"name": "tag",
											"source": 19,
											"value": "156"
										},
										{
											"begin": 3038,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3028,
											"end": 3102,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3028,
											"end": 3102,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2984,
											"end": 3112,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2768,
											"end": 3119,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2768,
											"end": 3119,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2768,
											"end": 3119,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2768,
											"end": 3119,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2768,
											"end": 3119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3125,
											"end": 3294,
											"name": "tag",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 3125,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3209,
											"end": 3220,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3231,
											"end": 3250,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3283,
											"end": 3287,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3278,
											"end": 3281,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3274,
											"end": 3288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3259,
											"end": 3288,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3259,
											"end": 3288,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3125,
											"end": 3294,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3125,
											"end": 3294,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3125,
											"end": 3294,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3125,
											"end": 3294,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3125,
											"end": 3294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3300,
											"end": 3466,
											"name": "tag",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 3300,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "PUSH",
											"source": 19,
											"value": "4E6F20746F6B656E20696E207061697200000000000000000000000000000000"
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3424,
											"end": 3438,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3417,
											"end": 3459,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3300,
											"end": 3466,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3300,
											"end": 3466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3472,
											"end": 3838,
											"name": "tag",
											"source": 19,
											"value": "104"
										},
										{
											"begin": 3472,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3614,
											"end": 3617,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 3699,
											"end": 3701,
											"name": "PUSH",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 3694,
											"end": 3697,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3635,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 3635,
											"end": 3702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3635,
											"end": 3702,
											"name": "tag",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 3635,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3628,
											"end": 3702,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3628,
											"end": 3702,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3711,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 3800,
											"end": 3803,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3711,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 3711,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3711,
											"end": 3804,
											"name": "tag",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 3711,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3829,
											"end": 3831,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3824,
											"end": 3827,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3472,
											"end": 3838,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3472,
											"end": 3838,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3472,
											"end": 3838,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3472,
											"end": 3838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3844,
											"end": 4263,
											"name": "tag",
											"source": 19,
											"value": "27"
										},
										{
											"begin": 3844,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4010,
											"end": 4014,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4050,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4046,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4087,
											"end": 4107,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4083,
											"end": 4084,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4081,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4061,
											"end": 4108,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4125,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4125,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "104"
										},
										{
											"begin": 4125,
											"end": 4256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4125,
											"end": 4256,
											"name": "tag",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 4125,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4117,
											"end": 4256,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4117,
											"end": 4256,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3844,
											"end": 4263,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3844,
											"end": 4263,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3844,
											"end": 4263,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3844,
											"end": 4263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4269,
											"end": 4449,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 4269,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4317,
											"end": 4394,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4314,
											"end": 4315,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4395,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4414,
											"end": 4418,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 4411,
											"end": 4412,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 4404,
											"end": 4419,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4438,
											"end": 4442,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 4435,
											"end": 4436,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4443,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4455,
											"end": 4573,
											"name": "tag",
											"source": 19,
											"value": "105"
										},
										{
											"begin": 4455,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "166"
										},
										{
											"begin": 4560,
											"end": 4565,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 4542,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "tag",
											"source": 19,
											"value": "166"
										},
										{
											"begin": 4542,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4537,
											"end": 4540,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4530,
											"end": 4567,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4455,
											"end": 4573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4455,
											"end": 4573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4455,
											"end": 4573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4677,
											"name": "tag",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 4579,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4630,
											"end": 4636,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4648,
											"end": 4670,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4648,
											"end": 4670,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4677,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4677,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4677,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4683,
											"end": 4851,
											"name": "tag",
											"source": 19,
											"value": "107"
										},
										{
											"begin": 4683,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4766,
											"end": 4777,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4806,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4795,
											"end": 4798,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4840,
											"end": 4844,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4835,
											"end": 4838,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4831,
											"end": 4845,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4816,
											"end": 4845,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4816,
											"end": 4845,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4683,
											"end": 4851,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4683,
											"end": 4851,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4683,
											"end": 4851,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4683,
											"end": 4851,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4683,
											"end": 4851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4857,
											"end": 4996,
											"name": "tag",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 4857,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4941,
											"end": 4944,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4936,
											"end": 4939,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4930,
											"end": 4953,
											"name": "MCOPY",
											"source": 19
										},
										{
											"begin": 4987,
											"end": 4988,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4973,
											"end": 4976,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4962,
											"end": 4989,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4857,
											"end": 4996,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4857,
											"end": 4996,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4857,
											"end": 4996,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4857,
											"end": 4996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5002,
											"end": 5104,
											"name": "tag",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 5002,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5043,
											"end": 5049,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5096,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 5085,
											"end": 5087,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5074,
											"end": 5088,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5070,
											"end": 5098,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5060,
											"end": 5098,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5060,
											"end": 5098,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5002,
											"end": 5104,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5002,
											"end": 5104,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5002,
											"end": 5104,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5002,
											"end": 5104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5110,
											"end": 5483,
											"name": "tag",
											"source": 19,
											"value": "110"
										},
										{
											"begin": 5110,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5196,
											"end": 5199,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5224,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 5256,
											"end": 5261,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5224,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 5224,
											"end": 5262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5224,
											"end": 5262,
											"name": "tag",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 5224,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5278,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5336,
											"end": 5339,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5278,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "107"
										},
										{
											"begin": 5278,
											"end": 5348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5278,
											"end": 5348,
											"name": "tag",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 5278,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5271,
											"end": 5348,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5271,
											"end": 5348,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5357,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 5415,
											"end": 5421,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5410,
											"end": 5413,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5396,
											"end": 5401,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5392,
											"end": 5408,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5357,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 5357,
											"end": 5422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5357,
											"end": 5422,
											"name": "tag",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 5357,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5447,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5447,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 5447,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5447,
											"end": 5476,
											"name": "tag",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 5447,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5442,
											"end": 5445,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5438,
											"end": 5477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5431,
											"end": 5477,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5431,
											"end": 5477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5200,
											"end": 5483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5110,
											"end": 5483,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5110,
											"end": 5483,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5110,
											"end": 5483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5110,
											"end": 5483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5110,
											"end": 5483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5489,
											"end": 6129,
											"name": "tag",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 5489,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5684,
											"end": 5688,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5725,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 5711,
											"end": 5720,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5707,
											"end": 5726,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5699,
											"end": 5726,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5699,
											"end": 5726,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5736,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 5804,
											"end": 5805,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5802,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5789,
											"end": 5806,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5736,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 5736,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5736,
											"end": 5807,
											"name": "tag",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 5736,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5817,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 5885,
											"end": 5887,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5883,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5861,
											"end": 5867,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5817,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 5817,
											"end": 5889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5817,
											"end": 5889,
											"name": "tag",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 5817,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5899,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "179"
										},
										{
											"begin": 5967,
											"end": 5969,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5956,
											"end": 5965,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5899,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "105"
										},
										{
											"begin": 5899,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5899,
											"end": 5971,
											"name": "tag",
											"source": 19,
											"value": "179"
										},
										{
											"begin": 5899,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6018,
											"end": 6027,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6012,
											"end": 6016,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6003,
											"end": 6005,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5981,
											"end": 6029,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6046,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 6117,
											"end": 6121,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6108,
											"end": 6114,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6046,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "110"
										},
										{
											"begin": 6046,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6046,
											"end": 6122,
											"name": "tag",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 6046,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6038,
											"end": 6122,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6038,
											"end": 6122,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5489,
											"end": 6129,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 5489,
											"end": 6129,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 5489,
											"end": 6129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5489,
											"end": 6129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5489,
											"end": 6129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5489,
											"end": 6129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5489,
											"end": 6129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5489,
											"end": 6129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6135,
											"end": 6357,
											"name": "tag",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 6135,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6228,
											"end": 6232,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6268,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6255,
											"end": 6264,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6251,
											"end": 6269,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6243,
											"end": 6269,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6279,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 6347,
											"end": 6348,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6332,
											"end": 6349,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6323,
											"end": 6329,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6279,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "105"
										},
										{
											"begin": 6279,
											"end": 6350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6279,
											"end": 6350,
											"name": "tag",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 6279,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6135,
											"end": 6357,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6135,
											"end": 6357,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6135,
											"end": 6357,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6135,
											"end": 6357,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6135,
											"end": 6357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6363,
											"end": 6506,
											"name": "tag",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 6363,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6420,
											"end": 6425,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6451,
											"end": 6457,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6445,
											"end": 6458,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6467,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 6494,
											"end": 6499,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6467,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 6467,
											"end": 6500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6467,
											"end": 6500,
											"name": "tag",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 6467,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6363,
											"end": 6506,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6363,
											"end": 6506,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6363,
											"end": 6506,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6363,
											"end": 6506,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6363,
											"end": 6506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6512,
											"end": 6863,
											"name": "tag",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 6512,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6633,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6619,
											"end": 6628,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6610,
											"end": 6617,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6606,
											"end": 6629,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6602,
											"end": 6634,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6599,
											"end": 6718,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6599,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 6599,
											"end": 6718,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6637,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 6637,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "91"
										},
										{
											"begin": 6637,
											"end": 6716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6637,
											"end": 6716,
											"name": "tag",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 6637,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6599,
											"end": 6718,
											"name": "tag",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 6599,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6757,
											"end": 6758,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6829,
											"end": 6835,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6818,
											"end": 6827,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6814,
											"end": 6836,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 6782,
											"end": 6846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 6846,
											"name": "tag",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 6782,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6772,
											"end": 6846,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6772,
											"end": 6846,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6728,
											"end": 6856,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6512,
											"end": 6863,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6512,
											"end": 6863,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6512,
											"end": 6863,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6512,
											"end": 6863,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6512,
											"end": 6863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 7201,
											"name": "tag",
											"source": 19,
											"value": "66"
										},
										{
											"begin": 6869,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6990,
											"end": 6994,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7031,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7005,
											"end": 7031,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7041,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 7109,
											"end": 7110,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7107,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7094,
											"end": 7111,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7041,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "105"
										},
										{
											"begin": 7041,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7041,
											"end": 7112,
											"name": "tag",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 7041,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7122,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7179,
											"end": 7188,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7175,
											"end": 7193,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7166,
											"end": 7172,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7122,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 7122,
											"end": 7194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7122,
											"end": 7194,
											"name": "tag",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 7122,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 7201,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 7201,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 7201,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 7201,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 7201,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 7201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7207,
											"end": 7437,
											"name": "tag",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 7207,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7347,
											"end": 7381,
											"name": "PUSH",
											"source": 19,
											"value": "556E697377617056324C6962726172793A20494E53554646494349454E545F49"
										},
										{
											"begin": 7343,
											"end": 7344,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7335,
											"end": 7341,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7331,
											"end": 7345,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7324,
											"end": 7382,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7416,
											"end": 7429,
											"name": "PUSH",
											"source": 19,
											"value": "4E5055545F414D4F554E54000000000000000000000000000000000000000000"
										},
										{
											"begin": 7411,
											"end": 7413,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7403,
											"end": 7409,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7399,
											"end": 7414,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7392,
											"end": 7430,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7207,
											"end": 7437,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7207,
											"end": 7437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7443,
											"end": 7809,
											"name": "tag",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 7443,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7606,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 7670,
											"end": 7672,
											"name": "PUSH",
											"source": 19,
											"value": "2B"
										},
										{
											"begin": 7665,
											"end": 7668,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7606,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 7606,
											"end": 7673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7606,
											"end": 7673,
											"name": "tag",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 7606,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7599,
											"end": 7673,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7599,
											"end": 7673,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7682,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 7771,
											"end": 7774,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7682,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 7682,
											"end": 7775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7682,
											"end": 7775,
											"name": "tag",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 7682,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7800,
											"end": 7802,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7795,
											"end": 7798,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 7803,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7784,
											"end": 7803,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7784,
											"end": 7803,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7443,
											"end": 7809,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7443,
											"end": 7809,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7443,
											"end": 7809,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7443,
											"end": 7809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7815,
											"end": 8234,
											"name": "tag",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 7815,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7981,
											"end": 7985,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8021,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8004,
											"end": 8022,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7996,
											"end": 8022,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7996,
											"end": 8022,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8068,
											"end": 8077,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8062,
											"end": 8066,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8058,
											"end": 8078,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8043,
											"end": 8052,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8039,
											"end": 8056,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8032,
											"end": 8079,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8096,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 8222,
											"end": 8226,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8096,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 8096,
											"end": 8227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8096,
											"end": 8227,
											"name": "tag",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 8096,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8088,
											"end": 8227,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8088,
											"end": 8227,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7815,
											"end": 8234,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7815,
											"end": 8234,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7815,
											"end": 8234,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7815,
											"end": 8234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8240,
											"end": 8467,
											"name": "tag",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 8240,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8380,
											"end": 8414,
											"name": "PUSH",
											"source": 19,
											"value": "556E697377617056324C6962726172793A20494E53554646494349454E545F4C"
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8368,
											"end": 8374,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8364,
											"end": 8378,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8357,
											"end": 8415,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8449,
											"end": 8459,
											"name": "PUSH",
											"source": 19,
											"value": "4951554944495459000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8444,
											"end": 8446,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8432,
											"end": 8447,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8425,
											"end": 8460,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8240,
											"end": 8467,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8240,
											"end": 8467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8473,
											"end": 8839,
											"name": "tag",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 8473,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8615,
											"end": 8618,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8636,
											"end": 8703,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 8700,
											"end": 8702,
											"name": "PUSH",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 8695,
											"end": 8698,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8636,
											"end": 8703,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 8636,
											"end": 8703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8636,
											"end": 8703,
											"name": "tag",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 8636,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8629,
											"end": 8703,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8629,
											"end": 8703,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8712,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 8801,
											"end": 8804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8712,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 8712,
											"end": 8805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8712,
											"end": 8805,
											"name": "tag",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 8712,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8830,
											"end": 8832,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8825,
											"end": 8828,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8821,
											"end": 8833,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8814,
											"end": 8833,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8814,
											"end": 8833,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8473,
											"end": 8839,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8473,
											"end": 8839,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8473,
											"end": 8839,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8473,
											"end": 8839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8845,
											"end": 9264,
											"name": "tag",
											"source": 19,
											"value": "75"
										},
										{
											"begin": 8845,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9051,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9047,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9034,
											"end": 9052,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9026,
											"end": 9052,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9026,
											"end": 9052,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9098,
											"end": 9107,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9088,
											"end": 9108,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9084,
											"end": 9085,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9073,
											"end": 9082,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9069,
											"end": 9086,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9062,
											"end": 9109,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9126,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "203"
										},
										{
											"begin": 9252,
											"end": 9256,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9126,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 9126,
											"end": 9257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9126,
											"end": 9257,
											"name": "tag",
											"source": 19,
											"value": "203"
										},
										{
											"begin": 9126,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9118,
											"end": 9257,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9118,
											"end": 9257,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8845,
											"end": 9264,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8845,
											"end": 9264,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8845,
											"end": 9264,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8845,
											"end": 9264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9270,
											"end": 9450,
											"name": "tag",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 9270,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9318,
											"end": 9395,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9308,
											"end": 9396,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9415,
											"end": 9419,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 9412,
											"end": 9413,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 9405,
											"end": 9420,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9439,
											"end": 9443,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9444,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9866,
											"name": "tag",
											"source": 19,
											"value": "77"
										},
										{
											"begin": 9456,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9496,
											"end": 9503,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 9537,
											"end": 9538,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9519,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 9519,
											"end": 9539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9519,
											"end": 9539,
											"name": "tag",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 9519,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9514,
											"end": 9539,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9514,
											"end": 9539,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9553,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9553,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 9553,
											"end": 9573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9553,
											"end": 9573,
											"name": "tag",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 9553,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9548,
											"end": 9573,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9548,
											"end": 9573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9608,
											"end": 9609,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9605,
											"end": 9606,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9601,
											"end": 9610,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 9630,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 9648,
											"end": 9659,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9630,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 9630,
											"end": 9660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9630,
											"end": 9660,
											"name": "tag",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 9630,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9619,
											"end": 9660,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9619,
											"end": 9660,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9809,
											"end": 9810,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9800,
											"end": 9807,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9796,
											"end": 9811,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 9793,
											"end": 9794,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9790,
											"end": 9812,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 9770,
											"end": 9771,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9763,
											"end": 9772,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9743,
											"end": 9826,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 9720,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 9720,
											"end": 9859,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 9839,
											"end": 9857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "tag",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9720,
											"end": 9859,
											"name": "tag",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 9720,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9504,
											"end": 9866,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9866,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9866,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9866,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9866,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9456,
											"end": 9866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 10063,
											"name": "tag",
											"source": 19,
											"value": "81"
										},
										{
											"begin": 9872,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9912,
											"end": 9915,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "212"
										},
										{
											"begin": 9949,
											"end": 9950,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9931,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 9931,
											"end": 9951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9931,
											"end": 9951,
											"name": "tag",
											"source": 19,
											"value": "212"
										},
										{
											"begin": 9931,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9926,
											"end": 9951,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9926,
											"end": 9951,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9965,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9965,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 9965,
											"end": 9985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9965,
											"end": 9985,
											"name": "tag",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 9965,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9960,
											"end": 9985,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9960,
											"end": 9985,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10008,
											"end": 10009,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10005,
											"end": 10006,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10001,
											"end": 10010,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9994,
											"end": 10010,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9994,
											"end": 10010,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10029,
											"end": 10032,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10026,
											"end": 10027,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10023,
											"end": 10033,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10020,
											"end": 10056,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10020,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "214"
										},
										{
											"begin": 10020,
											"end": 10056,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "215"
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 10036,
											"end": 10054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "tag",
											"source": 19,
											"value": "215"
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10020,
											"end": 10056,
											"name": "tag",
											"source": 19,
											"value": "214"
										},
										{
											"begin": 10020,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 10063,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 10063,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 10063,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 10063,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9872,
											"end": 10063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10069,
											"end": 10249,
											"name": "tag",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 10069,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10117,
											"end": 10194,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10107,
											"end": 10195,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10214,
											"end": 10218,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 10211,
											"end": 10212,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 10204,
											"end": 10219,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10238,
											"end": 10242,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10235,
											"end": 10236,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10243,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10255,
											"end": 10440,
											"name": "tag",
											"source": 19,
											"value": "83"
										},
										{
											"begin": 10255,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10295,
											"end": 10296,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10332,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "218"
										},
										{
											"begin": 10330,
											"end": 10331,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10312,
											"end": 10332,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 10312,
											"end": 10332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10312,
											"end": 10332,
											"name": "tag",
											"source": 19,
											"value": "218"
										},
										{
											"begin": 10312,
											"end": 10332,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10307,
											"end": 10332,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10307,
											"end": 10332,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10346,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 10364,
											"end": 10365,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10346,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 10346,
											"end": 10366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10346,
											"end": 10366,
											"name": "tag",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 10346,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10341,
											"end": 10366,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10341,
											"end": 10366,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10385,
											"end": 10386,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10375,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 10375,
											"end": 10410,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 10390,
											"end": 10408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "tag",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10375,
											"end": 10410,
											"name": "tag",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 10375,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10432,
											"end": 10433,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10425,
											"end": 10434,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 10420,
											"end": 10434,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10420,
											"end": 10434,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10255,
											"end": 10440,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10255,
											"end": 10440,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10255,
											"end": 10440,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10255,
											"end": 10440,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10255,
											"end": 10440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/Reserves.sol",
								"contracts/interfaces/IUniswapV2Pair.sol",
								"contracts/interfaces/IWETH.sol",
								"contracts/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getReservesV2(address)": "ec0a63d8",
							"swap(address,address,uint256)": "df791e50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"getReservesV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swap_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_in\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_in\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swap.sol\":\"Swap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xaa1c14b0163f67ef49aa7320ec391cacb1b914c9983916948488c2743e9cce46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c65ee59999b69eea344ec2edd7167a272d05570f9747c57b5815f75a46f717df\",\"dweb:/ipfs/QmVd5gxvhRPoRkUNAtfAZdfhmzB9hiD4CFNEWyWGF6ZPxD\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x117e90c697941bac25f767374b16c0005717a2fc3d3e6faf29dc5880937b0fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://757f9773ad21794799283971a8fd7d3f5051eb1dfe450223a4ff19281ba8f6f1\",\"dweb:/ipfs/QmayxKBheEurmUVGh6uvc33CF8rqYQQbF4GweudknX9waZ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/Reserves.sol\":{\"keccak256\":\"0x002d93c540e66750ef72037cfe2ee678d1c94d5f3689f2daefaebb323c7eb5de\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://d331ae61a42d9ed0db68b0b47556b137c97fc47578e65d1b3fa329702b4187e7\",\"dweb:/ipfs/QmYcytMq6g8HdZDfnLfXHnxpfyvy52x6sHLRMh2NweJXoc\"]},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x6593d3e0444a03aabacb705c16faa5a6e345513f0a6c6a8f159c5e214bb7b385\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4e13b8a298f34db5a1ffcb0e34c517798ff7e23328bc41553281de74d798062d\",\"dweb:/ipfs/QmRPBtk5wnauyJXBDE7SQSMbV1zcDR2ZoM7iBumfZTee76\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x69b0a5695f78a2d120ee770c924eeb75db0f8bedc7f191d79576891eea29432e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://9eaf27325a8dad0a613426352c6142ffb55c49f23266e31a87f6e90afa49944d\",\"dweb:/ipfs/QmXFkgcUXERGcJmxwF1abBt4fZyw3zKEaU7XeGPLuDpNKQ\"]},\"contracts/swap.sol\":{\"keccak256\":\"0x108eb17932ce7b08761ff15a7d87ae454d71999f2048c283ecb3b0feb9c76d68\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fc11f08b8cc99a6f78a0526b7851e9535c8de6015ef24102e884cdd792bd49e1\",\"dweb:/ipfs/QmeHPg3WaRbPP1zfcpCtxEjVBXqH8iYQjFEpBC2P5CqowH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							754
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 755,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								754
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							766
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 766,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 766,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								766,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							766
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 767,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 766,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							724
						]
					},
					"id": 725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 725,
							"sourceUnit": 316,
							"src": "141:43:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 725,
							"sourceUnit": 230,
							"src": "185:55:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "193:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "242:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 724,
							"linearizedBaseContracts": [
								724
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "725:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "801:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "834:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "826:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "825:15:5"
									},
									"src": "795:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "847:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "929:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "970:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "962:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "987:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "979:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1013:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1005:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:70:5"
									},
									"src": "923:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1294:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1324:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1346:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1352:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1346:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1363:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1367:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1362:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1331:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1335:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1331:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1304:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1304:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1304:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1038:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1231:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1244:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1244:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1244:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1244:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1266:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1258:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1278:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1270:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1294:0:5"
									},
									"scope": 724,
									"src": "1222:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1711:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1741:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1763:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1769:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1763:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1784:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1790:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1794:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1783:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1748:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1752:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1748:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1748:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1721:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1721:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1388:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1630:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1654:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1647:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1647:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1647:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1647:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1669:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1661:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1683:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1675:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1695:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1687:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1646:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:0:5"
									},
									"scope": 724,
									"src": "1621:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2551:139:5",
										"statements": [
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2569:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "2561:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2561:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 404,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2608:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$724",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$724",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2600:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2600:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2600:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2615:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 400,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2584:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2590:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "2584:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2584:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2561:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2646:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 411,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "2662:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 413,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "2677:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2662:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2633:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2633:50:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1815:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2474:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2503:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2496:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"2496:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2496:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2496:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2518:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2510:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2535:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2527:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:46:5"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2551:0:5"
									},
									"scope": 724,
									"src": "2465:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "3456:370:5",
										"statements": [
											{
												"id": 459,
												"nodeType": "UncheckedBlock",
												"src": "3466:354:5",
												"statements": [
													{
														"assignments": [
															430
														],
														"declarations": [
															{
																"constant": false,
																"id": 430,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3498:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 459,
																"src": "3490:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 429,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3490:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 439,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 435,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3541:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$724",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$724",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3533:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 433,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3533:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3533:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 437,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3548:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 431,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "3517:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3523:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "3517:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3517:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3490:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 440,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "3574:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 441,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "3593:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3574:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 450,
														"nodeType": "IfStatement",
														"src": "3570:160:5",
														"trueBody": {
															"id": 449,
															"nodeType": "Block",
															"src": "3612:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 444,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "3670:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 445,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 430,
																				"src": "3679:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 446,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "3697:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 443,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "3637:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3637:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 448,
																	"nodeType": "RevertStatement",
																	"src": "3630:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 452,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "3756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 453,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3763:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 454,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "3772:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 455,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 426,
																		"src": "3791:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3772:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 451,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "3743:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3743:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 458,
														"nodeType": "ExpressionStatement",
														"src": "3743:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "2696:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3367:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3396:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3389:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 420,
														"name": "IERC20",
														"nameLocations": [
															"3389:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3389:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3389:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3411:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3403:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3428:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3420:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:58:5"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3456:0:5"
									},
									"scope": 724,
									"src": "3358:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "4480:303:5",
										"statements": [
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4503:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "4490:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 472,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4490:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 476,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "4533:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4539:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4533:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 478,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "4549:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 479,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4558:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 480,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4548:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 474,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4518:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4522:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4518:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4518:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4490:75:5"
											},
											{
												"condition": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4580:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 484,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "4605:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 485,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "4612:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 483,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "4581:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4581:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "4576:201:5",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "4627:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 489,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "4661:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 492,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 465,
																					"src": "4683:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4689:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "4683:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 494,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 467,
																						"src": "4699:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 495,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4708:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4698:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 490,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4668:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4672:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4668:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4668:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 488,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "4641:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4641:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 499,
															"nodeType": "ExpressionStatement",
															"src": "4641:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 501,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "4746:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 502,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "4753:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 500,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "4726:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4726:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "4726:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "3832:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4412:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4432:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4425:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 463,
														"name": "IERC20",
														"nameLocations": [
															"4425:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4425:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4425:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4447:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4439:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4439:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4464:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4456:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:46:5"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4480:0:5"
									},
									"scope": 724,
									"src": "4403:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "5230:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 521,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "5244:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5247:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5244:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5252:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5244:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5262:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5244:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5330:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "5353:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 536,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "5357:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 537,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "5364:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 533,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "5331:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5337:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5331:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5331:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 548,
													"nodeType": "IfStatement",
													"src": "5326:117:5",
													"trueBody": {
														"id": 547,
														"nodeType": "Block",
														"src": "5371:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 543,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 512,
																					"src": "5425:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5417:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 541,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5417:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5417:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 540,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "5392:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5392:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 546,
																"nodeType": "RevertStatement",
																"src": "5385:47:5"
															}
														]
													}
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "5240:203:5",
												"trueBody": {
													"id": 532,
													"nodeType": "Block",
													"src": "5265:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 527,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 512,
																		"src": "5292:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 528,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "5299:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 529,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "5303:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 526,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5279:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5279:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 531,
															"nodeType": "ExpressionStatement",
															"src": "5279:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "4789:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5136:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5168:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5159:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 510,
														"name": "IERC1363",
														"nameLocations": [
															"5159:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5159:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5159:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5175:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5195:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5187:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5187:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5215:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5202:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5202:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5158:62:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5230:0:5"
									},
									"scope": 724,
									"src": "5127:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "5968:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 566,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "5982:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5985:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5982:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5990:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5982:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5982:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6078:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 581,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6105:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 582,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6111:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 583,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "6115:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 584,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "6122:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 579,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "6079:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6085:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6079:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6079:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 595,
													"nodeType": "IfStatement",
													"src": "6074:127:5",
													"trueBody": {
														"id": 594,
														"nodeType": "Block",
														"src": "6129:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 590,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "6183:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6175:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 588,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6175:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6175:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 587,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6150:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6150:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 593,
																"nodeType": "RevertStatement",
																"src": "6143:47:5"
															}
														]
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "5978:223:5",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "6003:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 572,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "6034:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 573,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6041:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 574,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "6047:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 575,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "6051:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 571,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6017:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6017:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "ExpressionStatement",
															"src": "6017:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "5455:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5810:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5855:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5846:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 554,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 553,
														"name": "IERC1363",
														"nameLocations": [
															"5846:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5846:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5846:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5878:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5870:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5900:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5892:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5948:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5935:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5935:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:122:5"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:0:5"
									},
									"scope": 724,
									"src": "5801:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "6974:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 611,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "6988:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6991:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6988:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6996:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6988:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7006:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6988:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7074:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 625,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "7096:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 626,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "7100:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 627,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "7107:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 623,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "7075:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7081:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7075:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7075:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 638,
													"nodeType": "IfStatement",
													"src": "7070:116:5",
													"trueBody": {
														"id": 637,
														"nodeType": "Block",
														"src": "7114:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 633,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "7168:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7160:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 631,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7160:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7160:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 630,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7135:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7135:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 636,
																"nodeType": "RevertStatement",
																"src": "7128:47:5"
															}
														]
													}
												},
												"id": 639,
												"nodeType": "IfStatement",
												"src": "6984:202:5",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "7009:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 617,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "7036:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 618,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "7043:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 619,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "7047:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "7023:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7023:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 621,
															"nodeType": "ExpressionStatement",
															"src": "7023:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "6213:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6881:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6912:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6903:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 601,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 600,
														"name": "IERC1363",
														"nameLocations": [
															"6903:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6903:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6903:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6927:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6919:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6919:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6939:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6931:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6931:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6959:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6946:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6946:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6902:62:5"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6974:0:5"
									},
									"scope": 724,
									"src": "6872:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "7759:650:5",
										"statements": [
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7777:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "7769:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 650,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7769:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 652,
												"nodeType": "VariableDeclarationStatement",
												"src": "7769:18:5"
											},
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7805:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "7797:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7797:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"nodeType": "VariableDeclarationStatement",
												"src": "7797:19:5"
											},
											{
												"AST": {
													"nativeSrc": "7851:396:5",
													"nodeType": "YulBlock",
													"src": "7851:396:5",
													"statements": [
														{
															"nativeSrc": "7865:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7865:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7885:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7885:3:5"
																		},
																		"nativeSrc": "7885:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7885:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7892:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7892:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7899:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7899:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7906:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7906:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7912:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7912:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7902:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7902:3:5"
																		},
																		"nativeSrc": "7902:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7902:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7925:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7925:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7919:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7919:5:5"
																		},
																		"nativeSrc": "7919:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7919:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7932:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7935:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7935:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7880:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7880:4:5"
																},
																"nativeSrc": "7880:60:5",
																"nodeType": "YulFunctionCall",
																"src": "7880:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7869:7:5",
																	"nodeType": "YulTypedName",
																	"src": "7869:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8001:157:5",
																"nodeType": "YulBlock",
																"src": "8001:157:5",
																"statements": [
																	{
																		"nativeSrc": "8019:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8019:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8036:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8036:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8030:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8030:5:5"
																			},
																			"nativeSrc": "8030:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8030:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8023:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8023:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8073:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8073:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8078:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8078:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8081:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8081:14:5"
																					},
																					"nativeSrc": "8081:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8081:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8058:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8058:14:5"
																			},
																			"nativeSrc": "8058:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8058:40:5"
																		},
																		"nativeSrc": "8058:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8058:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8127:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8127:14:5"
																					},
																					"nativeSrc": "8127:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8127:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8115:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8115:6:5"
																			},
																			"nativeSrc": "8115:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8115:29:5"
																		},
																		"nativeSrc": "8115:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8115:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7992:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "7992:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7985:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7985:6:5"
																},
																"nativeSrc": "7985:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7985:15:5"
															},
															"nativeSrc": "7982:176:5",
															"nodeType": "YulIf",
															"src": "7982:176:5"
														},
														{
															"nativeSrc": "8171:30:5",
															"nodeType": "YulAssignment",
															"src": "8171:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8185:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8185:14:5"
																},
																"nativeSrc": "8185:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8185:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8171:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8171:10:5"
																}
															]
														},
														{
															"nativeSrc": "8214:23:5",
															"nodeType": "YulAssignment",
															"src": "8214:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8235:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8235:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8229:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8229:5:5"
																},
																"nativeSrc": "8229:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8229:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8214:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8214:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 647,
														"isOffset": false,
														"isSlot": false,
														"src": "7906:4:5",
														"valueSize": 1
													},
													{
														"declaration": 647,
														"isOffset": false,
														"isSlot": false,
														"src": "7925:4:5",
														"valueSize": 1
													},
													{
														"declaration": 651,
														"isOffset": false,
														"isSlot": false,
														"src": "8171:10:5",
														"valueSize": 1
													},
													{
														"declaration": 654,
														"isOffset": false,
														"isSlot": false,
														"src": "8214:11:5",
														"valueSize": 1
													},
													{
														"declaration": 645,
														"isOffset": false,
														"isSlot": false,
														"src": "7892:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 656,
												"nodeType": "InlineAssembly",
												"src": "7826:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 657,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8261:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8275:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8261:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 668,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "8313:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8328:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8313:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8261:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 662,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "8287:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8279:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 660,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8279:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8279:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8294:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8279:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8299:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8279:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8309:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8279:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 680,
												"nodeType": "IfStatement",
												"src": "8257:146:5",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "8331:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 675,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 645,
																				"src": "8385:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8377:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 673,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8377:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8377:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 672,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8352:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8352:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 678,
															"nodeType": "RevertStatement",
															"src": "8345:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "7198:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7698:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7725:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "7718:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 643,
														"name": "IERC20",
														"nameLocations": [
															"7718:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "7718:6:5"
													},
													"referencedDeclaration": 315,
													"src": "7718:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7745:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "7732:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7732:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:33:5"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7759:0:5"
									},
									"scope": 724,
									"src": "7689:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "9000:391:5",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9015:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "9010:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 693,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9010:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"nodeType": "VariableDeclarationStatement",
												"src": "9010:12:5"
											},
											{
												"assignments": [
													697
												],
												"declarations": [
													{
														"constant": false,
														"id": 697,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9040:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "9032:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9032:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"nodeType": "VariableDeclarationStatement",
												"src": "9032:18:5"
											},
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9068:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "9060:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 699,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9060:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"nodeType": "VariableDeclarationStatement",
												"src": "9060:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9114:174:5",
													"nodeType": "YulBlock",
													"src": "9114:174:5",
													"statements": [
														{
															"nativeSrc": "9128:71:5",
															"nodeType": "YulAssignment",
															"src": "9128:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9144:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9144:3:5"
																		},
																		"nativeSrc": "9144:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9144:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9151:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9151:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9158:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9158:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9165:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9165:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9171:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9171:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9161:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9161:3:5"
																		},
																		"nativeSrc": "9161:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9161:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9184:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9184:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9178:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9178:5:5"
																		},
																		"nativeSrc": "9178:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9178:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9191:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9194:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9194:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9139:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9139:4:5"
																},
																"nativeSrc": "9139:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9139:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9128:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9128:7:5"
																}
															]
														},
														{
															"nativeSrc": "9212:30:5",
															"nodeType": "YulAssignment",
															"src": "9212:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9226:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9226:14:5"
																},
																"nativeSrc": "9226:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9226:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9212:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9212:10:5"
																}
															]
														},
														{
															"nativeSrc": "9255:23:5",
															"nodeType": "YulAssignment",
															"src": "9255:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9276:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9276:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9270:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9270:5:5"
																},
																"nativeSrc": "9270:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9270:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9255:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9255:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "9165:4:5",
														"valueSize": 1
													},
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "9184:4:5",
														"valueSize": 1
													},
													{
														"declaration": 697,
														"isOffset": false,
														"isSlot": false,
														"src": "9212:10:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "9255:11:5",
														"valueSize": 1
													},
													{
														"declaration": 694,
														"isOffset": false,
														"isSlot": false,
														"src": "9128:7:5",
														"valueSize": 1
													},
													{
														"declaration": 686,
														"isOffset": false,
														"isSlot": false,
														"src": "9151:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 702,
												"nodeType": "InlineAssembly",
												"src": "9089:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 703,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "9304:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 704,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "9316:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9330:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9316:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 715,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 700,
																		"src": "9367:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9382:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9367:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9316:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 709,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 686,
																						"src": "9342:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9334:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 707,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9334:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9334:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9349:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9334:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9354:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9334:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9363:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9334:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 719,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9315:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9304:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 692,
												"id": 721,
												"nodeType": "Return",
												"src": "9297:87:5"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "8415:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8920:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8951:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8944:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 684,
														"name": "IERC20",
														"nameLocations": [
															"8944:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8944:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8944:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8971:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8958:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8958:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8943:33:5"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8994:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8994:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8993:6:5"
									},
									"scope": 724,
									"src": "8911:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 725,
							"src": "701:8692:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9278:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 732,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 731,
												"id": 734,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 754,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 741,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 740,
												"id": 743,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 754,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 749,
												"id": 751,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 754,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 755,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							766
						]
					},
					"id": 767,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 757,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 766,
							"linearizedBaseContracts": [
								766
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 759,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 766,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 767,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							788
						],
						"IUniswapV3PoolActions": [
							884
						],
						"IUniswapV3PoolDerivedState": [
							915
						],
						"IUniswapV3PoolEvents": [
							1034
						],
						"IUniswapV3PoolImmutables": [
							1074
						],
						"IUniswapV3PoolOwnerActions": [
							1100
						],
						"IUniswapV3PoolState": [
							1208
						]
					},
					"id": 789,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 768,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 769,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 789,
							"sourceUnit": 1075,
							"src": "71:45:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 789,
							"sourceUnit": 1209,
							"src": "117:40:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 771,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 789,
							"sourceUnit": 916,
							"src": "158:47:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 789,
							"sourceUnit": 885,
							"src": "206:42:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 773,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 789,
							"sourceUnit": 1101,
							"src": "249:47:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 774,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 789,
							"sourceUnit": 1035,
							"src": "297:41:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 776,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1074,
										"src": "637:24:8"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:8"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1208,
										"src": "667:19:8"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:8"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 915,
										"src": "692:26:8"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:8"
								},
								{
									"baseName": {
										"id": 782,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "724:21:8"
									},
									"id": 783,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:8"
								},
								{
									"baseName": {
										"id": 784,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1100,
										"src": "751:26:8"
									},
									"id": 785,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:8"
								},
								{
									"baseName": {
										"id": 786,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1034,
										"src": "783:20:8"
									},
									"id": 787,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:8"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 775,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:8",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 788,
							"linearizedBaseContracts": [
								788,
								1034,
								1100,
								884,
								915,
								1208,
								1074
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 789,
							"src": "605:203:8",
							"usedErrors": [],
							"usedEvents": [
								925,
								942,
								957,
								972,
								989,
								1004,
								1011,
								1022,
								1033
							]
						}
					],
					"src": "45:764:8"
				},
				"id": 8
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							884
						]
					},
					"id": 885,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 790,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 791,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:9",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 884,
							"linearizedBaseContracts": [
								884
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:9",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "442:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 793,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:9"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:9"
									},
									"scope": 884,
									"src": "422:51:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:9",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1536:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1563:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 801,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1588:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 803,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1613:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 805,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1637:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:9"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1681:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1698:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:9"
									},
									"scope": 884,
									"src": "1513:202:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:9",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2805:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2832:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 819,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2857:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 821,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2882:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 823,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2916:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 825,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:9"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2965:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 828,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2982:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 830,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:9"
									},
									"scope": 884,
									"src": "2779:220:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:9",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3664:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 835,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3689:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 837,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3714:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 839,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:9"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3753:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3770:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:9"
									},
									"scope": 884,
									"src": "3641:146:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:9",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4836:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4863:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4888:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 853,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4920:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 855,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4955:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:9"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4999:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 860,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5015:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 862,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:9"
									},
									"scope": 884,
									"src": "4813:218:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:9",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "5723:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "5750:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "5775:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "5800:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:9"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:9"
									},
									"scope": 884,
									"src": "5699:136:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:9",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:9",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "6257:33:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 879,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:9"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:9"
									},
									"scope": 884,
									"src": "6213:88:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 885,
							"src": "173:6130:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:9"
				},
				"id": 9
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							915
						]
					},
					"id": 916,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 887,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:10",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 915,
							"linearizedBaseContracts": [
								915
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:10",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1403:29:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 889,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 890,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:10"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1481:30:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 893,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 894,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:10",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1513:51:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 896,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 897,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:10"
									},
									"scope": 915,
									"src": "1386:180:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:10",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2383:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 902,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2400:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 904,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:10"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:10",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2477:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 907,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:10",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2517:37:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 909,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2568:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 911,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:10"
									},
									"scope": 915,
									"src": "2348:251:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 916,
							"src": "293:2308:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:10"
				},
				"id": 10
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							1034
						]
					},
					"id": 1035,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 917,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:11",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1034,
							"linearizedBaseContracts": [
								1034
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:11",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 925,
									"name": "Initialize",
									"nameLocation": "551:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "562:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 920,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "584:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 922,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:11"
									},
									"src": "545:51:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:11",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 942,
									"name": "Mint",
									"nameLocation": "1164:4:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1178:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1202:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1233:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 931,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1266:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 933,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1299:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 935,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1323:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1348:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:11"
									},
									"src": "1158:212:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:11",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 957,
									"name": "Collect",
									"nameLocation": "1880:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1897:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1928:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1955:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 948,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1988:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 950,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2021:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 952,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2046:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 954,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:11"
									},
									"src": "1874:194:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:11",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 972,
									"name": "Burn",
									"nameLocation": "2608:4:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2622:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2653:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 961,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2686:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 963,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2719:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 965,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2743:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2768:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:11"
									},
									"src": "2602:188:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:11",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 989,
									"name": "Swap",
									"nameLocation": "3407:4:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3421:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3453:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3488:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 978,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3512:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 980,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3536:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 982,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3566:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 984,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3593:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 986,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:11"
									},
									"src": "3401:209:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:11",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 1004,
									"name": "Flash",
									"nameLocation": "4189:5:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4204:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4236:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4271:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4296:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4321:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4344:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:11"
									},
									"src": "4183:181:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:11",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 1011,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:11",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4876:36:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1006,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:11",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4922:36:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1008,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:11"
									},
									"src": "4826:139:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:11",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 1022,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5367:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1013,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5390:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1015,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5413:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1017,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5436:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1019,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:11"
									},
									"src": "5346:113:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:11",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 1033,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "5876:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "5900:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "5927:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1028,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "5944:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1030,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:11"
									},
									"src": "5854:107:11"
								}
							],
							"scope": 1035,
							"src": "159:5804:11",
							"usedErrors": [],
							"usedEvents": [
								925,
								942,
								957,
								972,
								989,
								1004,
								1011,
								1022,
								1033
							]
						}
					],
					"src": "45:5919:11"
				},
				"id": 11
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1074
						]
					},
					"id": 1075,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1036,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1037,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:12",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1074,
							"linearizedBaseContracts": [
								1074
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:12",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1043,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:12"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "450:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:12"
									},
									"scope": 1074,
									"src": "408:51:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:12",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:12"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "624:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:12"
									},
									"scope": 1074,
									"src": "583:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:12",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:12"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "799:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:12"
									},
									"scope": 1074,
									"src": "758:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:12",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:12"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "941:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1058,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:12"
									},
									"scope": 1074,
									"src": "903:46:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:12",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:12"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1364:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1064,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:12"
									},
									"scope": 1074,
									"src": "1318:53:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:12",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:12"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "1799:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1070,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:12"
									},
									"scope": 1074,
									"src": "1745:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1075,
							"src": "224:1586:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:12"
				},
				"id": 12
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							1100
						]
					},
					"id": 1101,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1076,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1077,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:13",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1100,
							"linearizedBaseContracts": [
								1100
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:13",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "464:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1079,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "484:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1081,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:13"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:13"
									},
									"scope": 1100,
									"src": "440:73:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:13",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1041:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1068:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1089,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1102:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1091,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:13"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1151:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1094,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1168:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1096,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:13"
									},
									"scope": 1100,
									"src": "1007:178:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1101,
							"src": "187:1000:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:13"
				},
				"id": 13
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							1208
						]
					},
					"id": 1209,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1102,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1103,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:14",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1208,
							"linearizedBaseContracts": [
								1208
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:14",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:14"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1498:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1106,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1532:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1108,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1556:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1110,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1593:29:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1112,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1636:33:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1114,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1683:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1116,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1714:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:14"
									},
									"scope": 1208,
									"src": "1421:317:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:14",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:14"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1972:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:14"
									},
									"scope": 1208,
									"src": "1917:64:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:14",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:14"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2215:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:14"
									},
									"scope": 1208,
									"src": "2160:64:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:14",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:14"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "2429:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1136,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "2445:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1138,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:14"
									},
									"scope": 1208,
									"src": "2382:79:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:14",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:14"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2666:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1144,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:14"
									},
									"scope": 1208,
									"src": "2622:53:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:14",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "3945:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1149,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:14"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4017:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1152,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4053:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1154,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:14",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4086:29:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:14",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4129:29:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:14",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4172:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1160,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:14",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4213:38:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1162,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4265:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1164,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "4300:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:14"
									},
									"scope": 1208,
									"src": "3930:397:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:14",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4457:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1171,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:14"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4500:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:14"
									},
									"scope": 1208,
									"src": "4437:72:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:14",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5239:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:14"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5312:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1182,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:14",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5344:32:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:14",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5390:32:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5436:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1188,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5469:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1190,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:14"
									},
									"scope": 1208,
									"src": "5220:279:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:14",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "6281:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:14"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "6356:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1198,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "6391:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1200,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:14",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "6425:41:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1202,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "6480:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:14"
									},
									"scope": 1208,
									"src": "6259:248:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1209,
							"src": "240:6269:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:14"
				},
				"id": 14
			},
			"contracts/Reserves.sol": {
				"ast": {
					"absolutePath": "contracts/Reserves.sol",
					"exportedSymbols": {
						"Context": [
							754
						],
						"IERC20": [
							315
						],
						"IUniswapV2Pair": [
							1416
						],
						"IUniswapV3Pool": [
							788
						],
						"IUniswapV3PoolActions": [
							884
						],
						"IUniswapV3PoolDerivedState": [
							915
						],
						"IUniswapV3PoolEvents": [
							1034
						],
						"IUniswapV3PoolImmutables": [
							1074
						],
						"IUniswapV3PoolOwnerActions": [
							1100
						],
						"IUniswapV3PoolState": [
							1208
						],
						"Ownable": [
							147
						],
						"Reserves": [
							1370
						]
					},
					"id": 1371,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:15"
						},
						{
							"id": 1211,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "64:19:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1212,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1371,
							"sourceUnit": 316,
							"src": "87:56:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1371,
							"sourceUnit": 789,
							"src": "145:66:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1214,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1371,
							"sourceUnit": 148,
							"src": "213:52:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Pair.sol",
							"file": "./interfaces/IUniswapV2Pair.sol",
							"id": 1215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1371,
							"sourceUnit": 1417,
							"src": "269:41:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Reserves",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1370,
							"linearizedBaseContracts": [
								1370
							],
							"name": "Reserves",
							"nameLocation": "323:8:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "416:153:15",
										"statements": [
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "442:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 1244,
														"src": "427:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1222,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"427:14:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 788,
																"src": "427:14:15"
															},
															"referencedDeclaration": 788,
															"src": "427:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1228,
												"initialValue": {
													"arguments": [
														{
															"id": 1226,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "464:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1225,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "449:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$788_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "449:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "427:42:15"
											},
											{
												"assignments": [
													1230
												],
												"declarations": [
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "488:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 1244,
														"src": "480:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1229,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "480:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1231,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "497:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "502:6:15",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1049,
														"src": "497:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "480:30:15"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1235,
														"name": "reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "521:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1240,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "556:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1237,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1230,
																		"src": "538:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1236,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "531:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "531:14:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "546:9:15",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "531:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "531:30:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "521:40:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "521:40:15"
											}
										]
									},
									"functionSelector": "1fdd03cb",
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reserves0",
									"nameLocation": "351:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "369:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "361:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:14:15"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "407:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "399:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:18:15"
									},
									"scope": 1370,
									"src": "342:227:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "655:153:15",
										"statements": [
											{
												"assignments": [
													1254
												],
												"declarations": [
													{
														"constant": false,
														"id": 1254,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "681:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 1274,
														"src": "666:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1253,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1252,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"666:14:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 788,
																"src": "666:14:15"
															},
															"referencedDeclaration": 788,
															"src": "666:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1258,
												"initialValue": {
													"arguments": [
														{
															"id": 1256,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "703:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1255,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "688:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$788_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "688:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "666:42:15"
											},
											{
												"assignments": [
													1260
												],
												"declarations": [
													{
														"constant": false,
														"id": 1260,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "727:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 1274,
														"src": "719:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1259,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "719:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1261,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "736:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "741:6:15",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1055,
														"src": "736:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "719:30:15"
											},
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1265,
														"name": "reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "760:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1270,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "795:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1267,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "777:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1266,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "770:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "770:14:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "785:9:15",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "770:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "770:30:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "760:40:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "760:40:15"
											}
										]
									},
									"functionSelector": "b49bbce5",
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reserves1",
									"nameLocation": "590:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "608:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "600:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:14:15"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "646:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "638:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:18:15"
									},
									"scope": 1370,
									"src": "581:227:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "909:247:15",
										"statements": [
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "935:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 1321,
														"src": "920:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1285,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1284,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"920:14:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 788,
																"src": "920:14:15"
															},
															"referencedDeclaration": 788,
															"src": "920:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"arguments": [
														{
															"id": 1288,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "957:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1287,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "942:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$788_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "920:42:15"
											},
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "981:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 1321,
														"src": "973:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1291,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "973:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1293,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "990:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "995:6:15",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1049,
														"src": "990:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "990:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "973:30:15"
											},
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "1022:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 1321,
														"src": "1014:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1297,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1014:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1302,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1299,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "1031:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$788",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1036:6:15",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1055,
														"src": "1031:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1014:30:15"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1303,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "1055:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1308,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "1091:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1305,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "1073:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1304,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "1066:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1066:14:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1081:9:15",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "1066:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1066:30:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1055:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "1055:41:15"
											},
											{
												"expression": {
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1312,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "1107:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1317,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "1143:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1314,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "1125:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1313,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "1118:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1118:14:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1133:9:15",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "1118:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1118:30:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1107:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "1107:41:15"
											}
										]
									},
									"functionSelector": "7232688e",
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesV3",
									"nameLocation": "825:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "847:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "839:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:14:15"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "882:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "874:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "900:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "892:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:36:15"
									},
									"scope": 1370,
									"src": "816:340:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "1257:247:15",
										"statements": [
											{
												"assignments": [
													1333
												],
												"declarations": [
													{
														"constant": false,
														"id": 1333,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "1283:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "1268:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
															"typeString": "contract IUniswapV2Pair"
														},
														"typeName": {
															"id": 1332,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1331,
																"name": "IUniswapV2Pair",
																"nameLocations": [
																	"1268:14:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1416,
																"src": "1268:14:15"
															},
															"referencedDeclaration": 1416,
															"src": "1268:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1337,
												"initialValue": {
													"arguments": [
														{
															"id": 1335,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "1305:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1334,
														"name": "IUniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "1290:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1416_$",
															"typeString": "type(contract IUniswapV2Pair)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1268:42:15"
											},
											{
												"assignments": [
													1339
												],
												"declarations": [
													{
														"constant": false,
														"id": 1339,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "1329:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "1321:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1338,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1321:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1343,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1340,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "1338:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1343:6:15",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "1338:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1321:30:15"
											},
											{
												"assignments": [
													1345
												],
												"declarations": [
													{
														"constant": false,
														"id": 1345,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "1370:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "1362:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1344,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1362:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1349,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1346,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "1379:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1384:6:15",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1387,
														"src": "1379:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:13:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1362:30:15"
											},
											{
												"expression": {
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1350,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "1403:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1355,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "1439:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1352,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "1421:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1351,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "1414:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1414:14:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1429:9:15",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "1414:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1414:30:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1403:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "1403:41:15"
											},
											{
												"expression": {
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1359,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "1455:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1364,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "1491:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1361,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "1473:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1360,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "1466:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1466:14:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1481:9:15",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "1466:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1466:30:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1455:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "1455:41:15"
											}
										]
									},
									"functionSelector": "ec0a63d8",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesV2",
									"nameLocation": "1173:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "1195:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1187:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:14:15"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1230:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1222:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1248:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1240:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:36:15"
									},
									"scope": 1370,
									"src": "1164:340:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1371,
							"src": "314:1193:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1468:15"
				},
				"id": 15
			},
			"contracts/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1416
						]
					},
					"id": 1417,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1372,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1416,
							"linearizedBaseContracts": [
								1416
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "76:14:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "107:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:16"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "140:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:9:16"
									},
									"scope": 1416,
									"src": "98:51:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "164:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:2:16"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "196:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:9:16"
									},
									"scope": 1416,
									"src": "155:50:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "220:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:16"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "252:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:9:16"
									},
									"scope": 1416,
									"src": "211:50:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "276:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:16"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "321:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "313:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1389,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "339:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "331:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1391,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "356:18:16",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "349:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1393,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:63:16"
									},
									"scope": 1416,
									"src": "267:109:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "391:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "404:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "396:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "424:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "416:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "436:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "463:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "448:19:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "448:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:73:16"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:0:16"
									},
									"scope": 1416,
									"src": "382:96:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "493:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "506:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "498:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:12:16"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:0:16"
									},
									"scope": 1416,
									"src": "484:35:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "534:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:2:16"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:0:16"
									},
									"scope": 1416,
									"src": "525:25:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1417,
							"src": "66:487:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:515:16"
				},
				"id": 16
			},
			"contracts/interfaces/IWETH.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IWETH.sol",
					"exportedSymbols": {
						"IWETH": [
							1436
						]
					},
					"id": 1437,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1418,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1436,
							"linearizedBaseContracts": [
								1436
							],
							"name": "IWETH",
							"nameLocation": "76:5:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "98:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "105:2:17"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:0:17"
									},
									"scope": 1436,
									"src": "89:36:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "140:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "157:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "149:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "149:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "166:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "161:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "161:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "148:24:17"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "191:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "191:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:6:17"
									},
									"scope": 1436,
									"src": "131:66:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "212:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "221:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "221:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:6:17"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:17"
									},
									"scope": 1436,
									"src": "203:33:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1437,
							"src": "66:173:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:201:17"
				},
				"id": 17
			},
			"contracts/swap.sol": {
				"ast": {
					"absolutePath": "contracts/swap.sol",
					"exportedSymbols": {
						"Context": [
							754
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"IUniswapV2Pair": [
							1416
						],
						"IUniswapV3Pool": [
							788
						],
						"IUniswapV3PoolActions": [
							884
						],
						"IUniswapV3PoolDerivedState": [
							915
						],
						"IUniswapV3PoolEvents": [
							1034
						],
						"IUniswapV3PoolImmutables": [
							1074
						],
						"IUniswapV3PoolOwnerActions": [
							1100
						],
						"IUniswapV3PoolState": [
							1208
						],
						"IWETH": [
							1436
						],
						"Ownable": [
							147
						],
						"Reserves": [
							1370
						],
						"SafeERC20": [
							724
						],
						"Swap": [
							1717
						]
					},
					"id": 1718,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1438,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:18"
						},
						{
							"id": 1439,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "72:19:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 1440,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 725,
							"src": "95:59:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Pair.sol",
							"file": "./interfaces/IUniswapV2Pair.sol",
							"id": 1441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 1417,
							"src": "156:41:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IWETH.sol",
							"file": "./interfaces/IWETH.sol",
							"id": 1442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 1437,
							"src": "199:32:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Reserves.sol",
							"file": "./Reserves.sol",
							"id": 1443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 1371,
							"src": "233:24:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Swap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1717,
							"linearizedBaseContracts": [
								1717
							],
							"name": "Swap",
							"nameLocation": "272:4:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1447,
									"libraryName": {
										"id": 1444,
										"name": "SafeERC20",
										"nameLocations": [
											"290:9:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 724,
										"src": "290:9:18"
									},
									"nodeType": "UsingForDirective",
									"src": "284:27:18",
									"typeName": {
										"id": 1446,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1445,
											"name": "IERC20",
											"nameLocations": [
												"304:6:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "304:6:18"
										},
										"referencedDeclaration": 315,
										"src": "304:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "398:681:18",
										"statements": [
											{
												"assignments": [
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "423:4:18",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "408:19:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
															"typeString": "contract IUniswapV2Pair"
														},
														"typeName": {
															"id": 1457,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1456,
																"name": "IUniswapV2Pair",
																"nameLocations": [
																	"408:14:18"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1416,
																"src": "408:14:18"
															},
															"referencedDeclaration": 1416,
															"src": "408:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1462,
												"initialValue": {
													"arguments": [
														{
															"id": 1460,
															"name": "swap_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "445:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1459,
														"name": "IUniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "430:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1416_$",
															"typeString": "type(contract IUniswapV2Pair)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "430:25:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "408:47:18"
											},
											{
												"assignments": [
													1464
												],
												"declarations": [
													{
														"constant": false,
														"id": 1464,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "473:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "465:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1463,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "465:7:18",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1465,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "482:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "487:6:18",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "482:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "482:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "465:30:18"
											},
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "513:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "505:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1469,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "505:7:18",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1471,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "522:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "527:6:18",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1387,
														"src": "522:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "522:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "505:30:18"
											},
											{
												"assignments": [
													1476,
													1478
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "554:1:18",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "546:9:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "546:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "565:1:18",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "557:9:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "557:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1482,
												"initialValue": {
													"arguments": [
														{
															"id": 1480,
															"name": "swap_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "584:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1479,
														"name": "getReservesV2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "570:13:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) view returns (uint256,uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "570:24:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "545:49:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1484,
																			"name": "token_in",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "613:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1485,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "625:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "613:18:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1487,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "612:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1488,
																			"name": "token_in",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "637:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1489,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "649:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "637:18:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1491,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "636:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "612:44:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e20696e2070616972",
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "658:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006",
																"typeString": "literal_string \"No token in pair\""
															},
															"value": "No token in pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f86efeffe47809ec6a6a714d4fdc071ffccd4c033befa28b6f75355e1daa1006",
																"typeString": "literal_string \"No token in pair\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "604:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "604:73:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "604:73:18"
											},
											{
												"assignments": [
													1497
												],
												"declarations": [
													{
														"constant": false,
														"id": 1497,
														"mutability": "mutable",
														"name": "isbaseToken",
														"nameLocation": "692:11:18",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "687:16:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1496,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "687:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1504,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1498,
															"name": "token_in",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "706:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1499,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "718:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "706:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "734:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "706:33:18",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "727:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "687:52:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1509,
															"name": "swap_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "781:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1510,
															"name": "amount_in",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "792:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1506,
																	"name": "token_in",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "758:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1505,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "751:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "751:16:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "768:12:18",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "751:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:51:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "751:51:18"
											},
											{
												"assignments": [
													1514,
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1514,
														"mutability": "mutable",
														"name": "amount0Out",
														"nameLocation": "823:10:18",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "815:18:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "815:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "amount1Out",
														"nameLocation": "843:10:18",
														"nodeType": "VariableDeclaration",
														"scope": 1556,
														"src": "835:18:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "835:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"initialValue": {
													"condition": {
														"id": 1517,
														"name": "isbaseToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "870:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"arguments": [
																	{
																		"id": 1529,
																		"name": "amount_in",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1453,
																		"src": "944:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1530,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "955:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1531,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1476,
																		"src": "958:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1528,
																	"name": "getAmountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "931:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "931:29:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "970:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "962:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1533,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "962:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "962:10:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1537,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:43:18",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "870:103:18",
													"trueExpression": {
														"components": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "893:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "885:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1518,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "885:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "885:10:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1523,
																		"name": "amount_in",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1453,
																		"src": "910:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1524,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1476,
																		"src": "921:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1525,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "924:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1522,
																	"name": "getAmountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "897:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "897:29:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1527,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "884:43:18",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "814:159:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1544,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "1017:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1545,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "1029:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1548,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1049:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Swap_$1717",
																		"typeString": "contract Swap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Swap_$1717",
																		"typeString": "contract Swap"
																	}
																],
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1041:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1546,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1041:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1041:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1066:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1056:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1550,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1060:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1056:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1541,
																	"name": "swap_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "1001:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1540,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "986:14:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1416_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "986:25:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1012:4:18",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1407,
														"src": "986:30:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,address,bytes memory) external"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "986:83:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "986:83:18"
											}
										]
									},
									"functionSelector": "df791e50",
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "328:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "swap_pool",
												"nameLocation": "341:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "333:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "token_in",
												"nameLocation": "360:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "352:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "amount_in",
												"nameLocation": "378:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "370:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:56:18"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:0:18"
									},
									"scope": 1717,
									"src": "319:760:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "1241:407:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1569,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "1260:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1272:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1260:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e697377617056324c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1275:46:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35fb781059090c30aacad20e29b2e40e67f217617fc46f86031ed4eb14923a82",
																"typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "UniswapV2Library: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35fb781059090c30aacad20e29b2e40e67f217617fc46f86031ed4eb14923a82",
																"typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1252:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1252:70:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "ExpressionStatement",
												"src": "1252:70:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1576,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "1341:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1353:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1341:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1579,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "1358:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1371:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1358:14:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1341:31:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e697377617056324c6962726172793a20494e53554646494349454e545f4c4951554944495459",
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1374:42:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8",
																"typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "UniswapV2Library: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8",
																"typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1333:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1333:84:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "1333:84:18"
											},
											{
												"assignments": [
													1587
												],
												"declarations": [
													{
														"constant": false,
														"id": 1587,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "1436:9:18",
														"nodeType": "VariableDeclaration",
														"scope": 1612,
														"src": "1428:17:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1428:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1593,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1588,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "1448:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1589,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "1460:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1448:21:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1448:28:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1428:48:18"
											},
											{
												"assignments": [
													1595
												],
												"declarations": [
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "1520:11:18",
														"nodeType": "VariableDeclaration",
														"scope": 1612,
														"src": "1512:19:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1512:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1602,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1596,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "1535:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1597,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "1548:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1535:22:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1599,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1534:24:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "393937",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1561:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_997_by_1",
															"typeString": "int_const 997"
														},
														"value": "997"
													},
													"src": "1534:30:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1512:52:18"
											},
											{
												"expression": {
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1603,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "1600:8:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1604,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1587,
																		"src": "1612:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1605,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "1624:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1612:23:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1607,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1611:25:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1639:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1611:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1600:40:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "1600:40:18"
											}
										]
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "1096:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1126:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1118:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1154:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1146:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1182:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1174:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:92:18"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1231:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1223:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:18:18"
									},
									"scope": 1717,
									"src": "1087:561:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "1960:480:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1625,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "1979:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1990:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1979:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1993:45:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae",
																"typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec21b006eb37ef20d0f4abcabd34de6854fa68af48294244e0263dc05c1dbbae",
																"typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 1624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1971:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:68:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "1971:68:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1632,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "2058:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2070:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2058:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1635,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "2075:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2088:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2075:14:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2058:31:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e697377617056324c6962726172793a20494e53554646494349454e545f4c4951554944495459",
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2091:42:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8",
																"typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "UniswapV2Library: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e8d6b265173dbbd87b3b9e2bf4238bea6caf2b2bbeb63f859a738aec9e761c8",
																"typeString": "literal_string \"UniswapV2Library: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2050:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:84:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "2050:84:18"
											},
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "2153:15:18",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "2145:23:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2145:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1647,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1644,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "2171:8:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "393937",
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2182:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_997_by_1",
															"typeString": "int_const 997"
														},
														"value": "997"
													},
													"src": "2171:14:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2145:40:18"
											},
											{
												"assignments": [
													1649
												],
												"declarations": [
													{
														"constant": false,
														"id": 1649,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "2229:9:18",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "2221:17:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1648,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2221:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1650,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "2241:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1651,
														"name": "reserveOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "2259:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2241:28:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2221:48:18"
											},
											{
												"assignments": [
													1655
												],
												"declarations": [
													{
														"constant": false,
														"id": 1655,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "2313:11:18",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "2305:19:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1654,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2305:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1661,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1656,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "2327:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2339:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "2327:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1659,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "2346:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2327:34:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2305:56:18"
											},
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1662,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "2397:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1663,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "2409:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1664,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "2421:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2409:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2397:35:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "2397:35:18"
											}
										]
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "1814:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1845:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1837:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1872:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1864:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1900:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1892:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1892:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:91:18"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1949:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1941:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1940:19:18"
									},
									"scope": 1717,
									"src": "1805:635:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "2541:247:18",
										"statements": [
											{
												"assignments": [
													1680
												],
												"declarations": [
													{
														"constant": false,
														"id": 1680,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "2567:4:18",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "2552:19:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
															"typeString": "contract IUniswapV2Pair"
														},
														"typeName": {
															"id": 1679,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1678,
																"name": "IUniswapV2Pair",
																"nameLocations": [
																	"2552:14:18"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1416,
																"src": "2552:14:18"
															},
															"referencedDeclaration": 1416,
															"src": "2552:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1684,
												"initialValue": {
													"arguments": [
														{
															"id": 1682,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "2589:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1681,
														"name": "IUniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "2574:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1416_$",
															"typeString": "type(contract IUniswapV2Pair)"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2574:20:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2552:42:18"
											},
											{
												"assignments": [
													1686
												],
												"declarations": [
													{
														"constant": false,
														"id": 1686,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "2613:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "2605:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1685,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2605:7:18",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1690,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1687,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "2622:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2627:6:18",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "2622:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2622:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2605:30:18"
											},
											{
												"assignments": [
													1692
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "2654:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "2646:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1691,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2646:7:18",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1696,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1693,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "2663:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1416",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2668:6:18",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1387,
														"src": "2663:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2663:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2646:30:18"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1697,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "2687:8:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1702,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "2723:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1699,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "2705:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1698,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "2698:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2698:14:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2713:9:18",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "2698:24:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2698:30:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2687:41:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "2687:41:18"
											},
											{
												"expression": {
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1706,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "2739:8:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1711,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "2775:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1708,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "2757:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1707,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "2750:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2750:14:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2765:9:18",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "2750:24:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2750:30:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2739:41:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "2739:41:18"
											}
										]
									},
									"functionSelector": "ec0a63d8",
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesV2",
									"nameLocation": "2457:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "2479:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "2471:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:14:18"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "2514:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "2506:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "2532:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "2524:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:36:18"
									},
									"scope": 1717,
									"src": "2448:340:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1718,
							"src": "263:2528:18",
							"usedErrors": [
								327
							],
							"usedEvents": []
						}
					],
					"src": "46:2745:18"
				},
				"id": 18
			}
		}
	}
}