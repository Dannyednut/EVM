{
	"id": "b486b2f9a69ce649c457f04cbe9da8c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ArbCalc.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^ 0.8.0;\r\n\r\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\r\n\r\nimport './libraries/Math.sol';\r\nimport './Reserves.sol';\r\n\r\nstruct OrderedReserves {\r\n    uint256 a1; // base asset\r\n    uint256 b1;\r\n    uint256 a2;\r\n    uint256 b2;\r\n}\r\n\r\ncontract ArbitrageCalculator is Reserves {\r\n    using MyMathLibrary for uint256;\r\n\r\n    function getLiquidityAndPrice(address poolAddress) public view returns (uint256 _liquidity, uint256 _priceX96)\r\n    {\r\n        IUniswapV3Pool pool = IUniswapV3Pool(poolAddress);\r\n        (_priceX96,,,,,,) = pool.slot0();\r\n        _liquidity = pool.liquidity();\r\n        \r\n    }\r\n\r\n    function getMaxProfitableAmount(address lowPoolAddress, address highPoolAddress) public view returns (uint256 _mpa)\r\n    {\r\n        // Get relative values between pools\r\n        uint256 relLiquidity = getRelativeLiquidity(lowPoolAddress, highPoolAddress);\r\n        uint256 relPriceQuoteLowHigh = getPriceRatio(highPoolAddress, lowPoolAddress);\r\n\r\n        return (relLiquidity * relPriceQuoteLowHigh) / (1e18); \r\n    }\r\n\r\n    function getRelativeLiquidity(address poolA, address poolB) public view returns (uint256 _rel)\r\n    {\r\n        (uint256 liquidityPoolA,) = getLiquidityAndPrice(poolA);\r\n        (uint256 liquidityPoolB,) = getLiquidityAndPrice(poolB);\r\n\r\n        return (liquidityPoolA / 1e18 * 1000000 - liquidityPoolB) / (liquidityPoolB + liquidityPoolA/2); \r\n    }\r\n\r\n    function getPriceRatio(address poolHigh, address poolLow) public view returns (uint256 rel)\r\n    {\r\n        (,uint256 highQuote) = getLiquidityAndPrice(poolHigh);\r\n        (,uint256 lowQuote) = getLiquidityAndPrice(poolLow);\r\n\r\n        rel = (highQuote / 1e18 * 1000000 - lowQuote )/(lowQuote +highQuote)/2; \r\n    }\r\n\r\n    \r\n    function getBorrowAmountV2(address lowerPool, address higherPool) external view returns(uint256 amount){\r\n        OrderedReserves memory reserves;\r\n\r\n        (reserves.a1, reserves.b1) = getReservesV2(lowerPool);\r\n        (reserves.a2, reserves.b2) = getReservesV2(higherPool);\r\n\r\n        amount = calcBorrowAmount(reserves);\r\n    }\r\n\r\n    function getBorrowAmountV3(address lowerPool, address higherPool) external view returns(uint256 amount){\r\n        OrderedReserves memory reserves;\r\n\r\n        (reserves.a1, reserves.b1) = getReservesV3(lowerPool);\r\n        (reserves.a2, reserves.b2) = getReservesV3(higherPool);\r\n\r\n        amount = calcBorrowAmount(reserves);\r\n    }\r\n\r\n    function calcBorrowAmount(OrderedReserves memory reserves) internal pure returns (uint256 amount) {\r\n        // we can't use a1,b1,a2,b2 directly, because it will result overflow/underflow on the intermediate result\r\n        // so we:\r\n        //    1. divide all the numbers by d to prevent from overflow/underflow\r\n        //    2. calculate the result by using above numbers\r\n        //    3. multiply d with the result to get the final result\r\n        // Note: this workaround is only suitable for ERC20 token with 18 decimals, which I believe most tokens do\r\n\r\n        uint256 min1 = reserves.a1 < reserves.b1 ? reserves.a1 : reserves.b1;\r\n        uint256 min2 = reserves.a2 < reserves.b2 ? reserves.a2 : reserves.b2;\r\n        uint256 min = min1 < min2 ? min1 : min2;\r\n\r\n        // choose appropriate number to divide based on the minimum number\r\n        uint256 d;\r\n        if (min > 1e24) {\r\n            d = 1e20;\r\n        } else if (min > 1e23) {\r\n            d = 1e19;\r\n        } else if (min > 1e22) {\r\n            d = 1e18;\r\n        } else if (min > 1e21) {\r\n            d = 1e17;\r\n        } else if (min > 1e20) {\r\n            d = 1e16;\r\n        } else if (min > 1e19) {\r\n            d = 1e15;\r\n        } else if (min > 1e18) {\r\n            d = 1e14;\r\n        } else if (min > 1e17) {\r\n            d = 1e13;\r\n        } else if (min > 1e16) {\r\n            d = 1e12;\r\n        } else if (min > 1e15) {\r\n            d = 1e11;\r\n        } else {\r\n            d = 1e10;\r\n        }\r\n\r\n        (int256 a1, int256 a2, int256 b1, int256 b2) =\r\n            (int256(reserves.a1 / d), int256(reserves.a2 / d), int256(reserves.b1 / d), int256(reserves.b2 / d));\r\n\r\n        int256 a = a1 * b1 - a2 * b2;\r\n        int256 b = 2 * b1 * b2 * (a1 + a2);\r\n        int256 c = b1 * b2 * (a1 * b2 - a2 * b1);\r\n\r\n        (int256 x1, int256 x2) = calcSolutionForQuadratic(a, b, c);\r\n\r\n        // 0 < x < b1 and 0 < x < b2\r\n        require((x1 > 0 && x1 < b1 && x1 < b2) || (x2 > 0 && x2 < b1 && x2 < b2), 'Wrong input order');\r\n        amount = (x1 > 0 && x1 < b1 && x1 < b2) ? uint256(x1) * d : uint256(x2) * d;\r\n    }\r\n\r\n    /// @dev find solution of quadratic equation: ax^2 + bx + c = 0, only return the positive solution\r\n    function calcSolutionForQuadratic(\r\n        int256 a,\r\n        int256 b,\r\n        int256 c\r\n    ) internal pure returns (int256 x1, int256 x2) {\r\n        int256 m = b**2 - 4 * a * c;\r\n        // m < 0 leads to complex number\r\n        require(m > 0, 'Complex number');\r\n\r\n        int256 sqrtM = int256(sqrt(uint256(m)));\r\n        x1 = (-b + sqrtM) / (2 * a);\r\n        x2 = (-b - sqrtM) / (2 * a);\r\n    }\r\n\r\n    /// @dev Newtonâ€™s method for caculating square root of n\r\n    function sqrt(uint256 n) internal pure returns (uint256 res) {\r\n        assert(n > 1);\r\n\r\n        // The scale factor is a crude way to turn everything into integer calcs.\r\n        // Actually do (n * 10 ^ 4) ^ (1/2)\r\n        uint256 _n = n * 10**6;\r\n        uint256 c = _n;\r\n        res = _n;\r\n\r\n        uint256 xi;\r\n        while (true) {\r\n            xi = (res + c / res) / 2;\r\n            // don't need be too precise to save gas\r\n            if (res - xi < 1000) {\r\n                break;\r\n            }\r\n            res = xi;\r\n        }\r\n        res = res / 10**3;\r\n    }\r\n\r\n}"
			},
			"contracts/Reserves.sol": {
				"content": "// SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\npragma abicoder v2;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\r\nimport '@openzeppelin/contracts/access/Ownable.sol';\r\n\r\nimport './interfaces/IUniswapV2Pair.sol';\r\n\r\ncontract Reserves{\r\n\r\n\r\n    function reserves0(address pair) external view returns ( uint256 reserve) {\r\n        IUniswapV3Pool pool = IUniswapV3Pool(pair);\r\n        address token0 = pool.token0();\r\n        reserve = IERC20(token0).balanceOf(pair);\r\n    }\r\n    \r\n    function reserves1(address pair) external view returns ( uint256 reserve) {\r\n        IUniswapV3Pool pool = IUniswapV3Pool(pair);\r\n        address token1 = pool.token1();\r\n        reserve = IERC20(token1).balanceOf(pair);\r\n    }\r\n\r\n    function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){\r\n        IUniswapV3Pool pool = IUniswapV3Pool(pair);\r\n        address token0 = pool.token0();\r\n        address token1 = pool.token1();\r\n        reserve0 = IERC20(token0).balanceOf(pair);\r\n        reserve1 = IERC20(token1).balanceOf(pair);\r\n    }\r\n\r\n    function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){\r\n        IUniswapV2Pair pool = IUniswapV2Pair(pair);\r\n        address token0 = pool.token0();\r\n        address token1 = pool.token1();\r\n        reserve0 = IERC20(token0).balanceOf(pair);\r\n        reserve1 = IERC20(token1).balanceOf(pair);\r\n    }\r\n}"
			},
			"contracts/libraries/Math.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary MyMathLibrary {\r\n    function max(int256 x, int256 y) internal pure returns (int256) {\r\n        return x > y ? x : y;\r\n    }\r\n\r\n    function min(int256 a1,int256 b2)internal pure  returns (int256){\r\n        return a1 < b2 ? a1 : b2;\r\n    }\r\n\r\n   function abs(int256 x) internal pure returns (int256){\r\n       require(x >= 0);\r\n        return x == int256(0) ? int256(0):x;\r\n\r\n    }\r\n\r\n    function sqrt(uint256 n) internal pure returns (uint256 res) {\r\n        assert(n > 1);\r\n\r\n        // The scale factor is a crude way to turn everything into integer calcs.\r\n        // Actually do (n * 10 ^ 4) ^ (1/2)\r\n        uint256 _n = n * 10**6;\r\n        uint256 c = _n;\r\n        res = _n;\r\n\r\n        uint256 xi;\r\n        while (true) {\r\n            xi = (res + c / res) / 2;\r\n            // don't need be too precise to save gas\r\n            if (res - xi < 1000) {\r\n                break;\r\n            }\r\n            res = xi;\r\n        }\r\n        res = res / 10**3;\r\n    }\r\n\r\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"contracts/interfaces/IUniswapV2Pair.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.20;\r\n\r\ninterface IUniswapV2Pair {\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes calldata data) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity >=0.7.6;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.7.6;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xaa1c14b0163f67ef49aa7320ec391cacb1b914c9983916948488c2743e9cce46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c65ee59999b69eea344ec2edd7167a272d05570f9747c57b5815f75a46f717df\",\"dweb:/ipfs/QmVd5gxvhRPoRkUNAtfAZdfhmzB9hiD4CFNEWyWGF6ZPxD\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/ArbCalc.sol": {
				"ArbitrageCalculator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lowerPool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "higherPool",
									"type": "address"
								}
							],
							"name": "getBorrowAmountV2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lowerPool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "higherPool",
									"type": "address"
								}
							],
							"name": "getBorrowAmountV3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "poolAddress",
									"type": "address"
								}
							],
							"name": "getLiquidityAndPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_priceX96",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lowPoolAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "highPoolAddress",
									"type": "address"
								}
							],
							"name": "getMaxProfitableAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_mpa",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "poolHigh",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "poolLow",
									"type": "address"
								}
							],
							"name": "getPriceRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rel",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "poolA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "poolB",
									"type": "address"
								}
							],
							"name": "getRelativeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_rel",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "getReservesV2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "getReservesV3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "reserves0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "reserves1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ArbCalc.sol\":304:5740  contract ArbitrageCalculator is Reserves {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ArbCalc.sol\":304:5740  contract ArbitrageCalculator is Reserves {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7232688e\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x7232688e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7d9ada3e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9872971a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb49bbce5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xec0a63d8\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x0d83825b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e953b15\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1fdd03cb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x21fef881\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x44401a24\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ArbCalc.sol\":1459:1774  function getPriceRatio(address poolHigh, address poolLow) public view returns (uint256 rel)... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ArbCalc.sol\":392:669  function getLiquidityAndPrice(address poolAddress) public view returns (uint256 _liquidity, uint256 _priceX96)... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":342:569  function reserves0(address pair) external view returns ( uint256 reserve) {... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ArbCalc.sol\":677:1094  function getMaxProfitableAmount(address lowPoolAddress, address highPoolAddress) public view returns (uint256 _mpa)... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ArbCalc.sol\":2128:2460  function getBorrowAmountV3(address lowerPool, address higherPool) external view returns(uint256 amount){... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":816:1156  function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ArbCalc.sol\":1788:2120  function getBorrowAmountV2(address lowerPool, address higherPool) external view returns(uint256 amount){... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ArbCalc.sol\":1102:1451  function getRelativeLiquidity(address poolA, address poolB) public view returns (uint256 _rel)... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":581:808  function reserves1(address pair) external view returns ( uint256 reserve) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":1164:1504  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ArbCalc.sol\":1459:1774  function getPriceRatio(address poolHigh, address poolLow) public view returns (uint256 rel)... */\n    tag_17:\n        /* \"contracts/ArbCalc.sol\":1538:1549  uint256 rel */\n      0x00\n        /* \"contracts/ArbCalc.sol\":1569:1586  uint256 highQuote */\n      dup1\n        /* \"contracts/ArbCalc.sol\":1590:1620  getLiquidityAndPrice(poolHigh) */\n      tag_59\n        /* \"contracts/ArbCalc.sol\":1611:1619  poolHigh */\n      dup5\n        /* \"contracts/ArbCalc.sol\":1590:1610  getLiquidityAndPrice */\n      tag_23\n        /* \"contracts/ArbCalc.sol\":1590:1620  getLiquidityAndPrice(poolHigh) */\n      jump\t// in\n    tag_59:\n        /* \"contracts/ArbCalc.sol\":1567:1620  (,uint256 highQuote) = getLiquidityAndPrice(poolHigh) */\n      swap2\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":1633:1649  uint256 lowQuote */\n      0x00\n        /* \"contracts/ArbCalc.sol\":1653:1682  getLiquidityAndPrice(poolLow) */\n      tag_60\n        /* \"contracts/ArbCalc.sol\":1674:1681  poolLow */\n      dup5\n        /* \"contracts/ArbCalc.sol\":1653:1673  getLiquidityAndPrice */\n      tag_23\n        /* \"contracts/ArbCalc.sol\":1653:1682  getLiquidityAndPrice(poolLow) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/ArbCalc.sol\":1631:1682  (,uint256 lowQuote) = getLiquidityAndPrice(poolLow) */\n      swap2\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":1764:1765  2 */\n      0x02\n        /* \"contracts/ArbCalc.sol\":1753:1762  highQuote */\n      dup3\n        /* \"contracts/ArbCalc.sol\":1743:1751  lowQuote */\n      dup3\n        /* \"contracts/ArbCalc.sol\":1743:1762  lowQuote +highQuote */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"contracts/ArbCalc.sol\":1731:1739  lowQuote */\n      dup3\n        /* \"contracts/ArbCalc.sol\":1721:1728  1000000 */\n      0x0f4240\n        /* \"contracts/ArbCalc.sol\":1714:1718  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ArbCalc.sol\":1702:1711  highQuote */\n      dup7\n        /* \"contracts/ArbCalc.sol\":1702:1718  highQuote / 1e18 */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"contracts/ArbCalc.sol\":1702:1728  highQuote / 1e18 * 1000000 */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"contracts/ArbCalc.sol\":1702:1739  highQuote / 1e18 * 1000000 - lowQuote */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/ArbCalc.sol\":1701:1763  (highQuote / 1e18 * 1000000 - lowQuote )/(lowQuote +highQuote) */\n      tag_69\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_69:\n        /* \"contracts/ArbCalc.sol\":1701:1765  (highQuote / 1e18 * 1000000 - lowQuote )/(lowQuote +highQuote)/2 */\n      tag_70\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_70:\n        /* \"contracts/ArbCalc.sol\":1695:1765  rel = (highQuote / 1e18 * 1000000 - lowQuote )/(lowQuote +highQuote)/2 */\n      swap3\n      pop\n        /* \"contracts/ArbCalc.sol\":1556:1774  {... */\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":1459:1774  function getPriceRatio(address poolHigh, address poolLow) public view returns (uint256 rel)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ArbCalc.sol\":392:669  function getLiquidityAndPrice(address poolAddress) public view returns (uint256 _liquidity, uint256 _priceX96)... */\n    tag_23:\n        /* \"contracts/ArbCalc.sol\":464:482  uint256 _liquidity */\n      0x00\n        /* \"contracts/ArbCalc.sol\":484:501  uint256 _priceX96 */\n      dup1\n        /* \"contracts/ArbCalc.sol\":519:538  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/ArbCalc.sol\":556:567  poolAddress */\n      dup4\n        /* \"contracts/ArbCalc.sol\":519:568  IUniswapV3Pool pool = IUniswapV3Pool(poolAddress) */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":599:603  pool */\n      dup1\n        /* \"contracts/ArbCalc.sol\":599:609  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/ArbCalc.sol\":599:611  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/ArbCalc.sol\":579:611  (_priceX96,,,,,,) = pool.slot0() */\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap7\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      swap3\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap3\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":635:639  pool */\n      dup1\n        /* \"contracts/ArbCalc.sol\":635:649  pool.liquidity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1a686502\n        /* \"contracts/ArbCalc.sol\":635:651  pool.liquidity() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/ArbCalc.sol\":622:651  _liquidity = pool.liquidity() */\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap3\n      pop\n        /* \"contracts/ArbCalc.sol\":508:669  {... */\n      pop\n        /* \"contracts/ArbCalc.sol\":392:669  function getLiquidityAndPrice(address poolAddress) public view returns (uint256 _liquidity, uint256 _priceX96)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Reserves.sol\":342:569  function reserves0(address pair) external view returns ( uint256 reserve) {... */\n    tag_28:\n        /* \"contracts/Reserves.sol\":399:414  uint256 reserve */\n      0x00\n        /* \"contracts/Reserves.sol\":427:446  IUniswapV3Pool pool */\n      dup1\n        /* \"contracts/Reserves.sol\":464:468  pair */\n      dup3\n        /* \"contracts/Reserves.sol\":427:469  IUniswapV3Pool pool = IUniswapV3Pool(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":480:494  address token0 */\n      0x00\n        /* \"contracts/Reserves.sol\":497:501  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":497:508  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/Reserves.sol\":497:510  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"contracts/Reserves.sol\":480:510  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":538:544  token0 */\n      dup1\n        /* \"contracts/Reserves.sol\":531:555  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":556:560  pair */\n      dup6\n        /* \"contracts/Reserves.sol\":531:561  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/Reserves.sol\":521:561  reserve = IERC20(token0).balanceOf(pair) */\n      swap3\n      pop\n        /* \"contracts/Reserves.sol\":416:569  {... */\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":342:569  function reserves0(address pair) external view returns ( uint256 reserve) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ArbCalc.sol\":677:1094  function getMaxProfitableAmount(address lowPoolAddress, address highPoolAddress) public view returns (uint256 _mpa)... */\n    tag_32:\n        /* \"contracts/ArbCalc.sol\":779:791  uint256 _mpa */\n      0x00\n        /* \"contracts/ArbCalc.sol\":855:875  uint256 relLiquidity */\n      dup1\n        /* \"contracts/ArbCalc.sol\":878:931  getRelativeLiquidity(lowPoolAddress, highPoolAddress) */\n      tag_92\n        /* \"contracts/ArbCalc.sol\":899:913  lowPoolAddress */\n      dup5\n        /* \"contracts/ArbCalc.sol\":915:930  highPoolAddress */\n      dup5\n        /* \"contracts/ArbCalc.sol\":878:898  getRelativeLiquidity */\n      tag_48\n        /* \"contracts/ArbCalc.sol\":878:931  getRelativeLiquidity(lowPoolAddress, highPoolAddress) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/ArbCalc.sol\":855:931  uint256 relLiquidity = getRelativeLiquidity(lowPoolAddress, highPoolAddress) */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":942:970  uint256 relPriceQuoteLowHigh */\n      0x00\n        /* \"contracts/ArbCalc.sol\":973:1019  getPriceRatio(highPoolAddress, lowPoolAddress) */\n      tag_93\n        /* \"contracts/ArbCalc.sol\":987:1002  highPoolAddress */\n      dup5\n        /* \"contracts/ArbCalc.sol\":1004:1018  lowPoolAddress */\n      dup7\n        /* \"contracts/ArbCalc.sol\":973:986  getPriceRatio */\n      tag_17\n        /* \"contracts/ArbCalc.sol\":973:1019  getPriceRatio(highPoolAddress, lowPoolAddress) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/ArbCalc.sol\":942:1019  uint256 relPriceQuoteLowHigh = getPriceRatio(highPoolAddress, lowPoolAddress) */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":1080:1084  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ArbCalc.sol\":1055:1075  relPriceQuoteLowHigh */\n      dup2\n        /* \"contracts/ArbCalc.sol\":1040:1052  relLiquidity */\n      dup4\n        /* \"contracts/ArbCalc.sol\":1040:1075  relLiquidity * relPriceQuoteLowHigh */\n      tag_94\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_94:\n        /* \"contracts/ArbCalc.sol\":1039:1085  (relLiquidity * relPriceQuoteLowHigh) / (1e18) */\n      tag_95\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_95:\n        /* \"contracts/ArbCalc.sol\":1032:1085  return (relLiquidity * relPriceQuoteLowHigh) / (1e18) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":677:1094  function getMaxProfitableAmount(address lowPoolAddress, address highPoolAddress) public view returns (uint256 _mpa)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ArbCalc.sol\":2128:2460  function getBorrowAmountV3(address lowerPool, address higherPool) external view returns(uint256 amount){... */\n    tag_36:\n        /* \"contracts/ArbCalc.sol\":2216:2230  uint256 amount */\n      0x00\n        /* \"contracts/ArbCalc.sol\":2242:2273  OrderedReserves memory reserves */\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"contracts/ArbCalc.sol\":2315:2339  getReservesV3(lowerPool) */\n      tag_99\n        /* \"contracts/ArbCalc.sol\":2329:2338  lowerPool */\n      dup5\n        /* \"contracts/ArbCalc.sol\":2315:2328  getReservesV3 */\n      tag_40\n        /* \"contracts/ArbCalc.sol\":2315:2339  getReservesV3(lowerPool) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/ArbCalc.sol\":2287:2295  reserves */\n      dup3\n        /* \"contracts/ArbCalc.sol\":2287:2298  reserves.a1 */\n      0x00\n      add\n        /* \"contracts/ArbCalc.sol\":2300:2308  reserves */\n      dup4\n        /* \"contracts/ArbCalc.sol\":2300:2311  reserves.b1 */\n      0x20\n      add\n        /* \"contracts/ArbCalc.sol\":2286:2339  (reserves.a1, reserves.b1) = getReservesV3(lowerPool) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":2379:2404  getReservesV3(higherPool) */\n      tag_100\n        /* \"contracts/ArbCalc.sol\":2393:2403  higherPool */\n      dup4\n        /* \"contracts/ArbCalc.sol\":2379:2392  getReservesV3 */\n      tag_40\n        /* \"contracts/ArbCalc.sol\":2379:2404  getReservesV3(higherPool) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/ArbCalc.sol\":2351:2359  reserves */\n      dup3\n        /* \"contracts/ArbCalc.sol\":2351:2362  reserves.a2 */\n      0x40\n      add\n        /* \"contracts/ArbCalc.sol\":2364:2372  reserves */\n      dup4\n        /* \"contracts/ArbCalc.sol\":2364:2375  reserves.b2 */\n      0x60\n      add\n        /* \"contracts/ArbCalc.sol\":2350:2404  (reserves.a2, reserves.b2) = getReservesV3(higherPool) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":2426:2452  calcBorrowAmount(reserves) */\n      tag_101\n        /* \"contracts/ArbCalc.sol\":2443:2451  reserves */\n      dup2\n        /* \"contracts/ArbCalc.sol\":2426:2442  calcBorrowAmount */\n      tag_102\n        /* \"contracts/ArbCalc.sol\":2426:2452  calcBorrowAmount(reserves) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/ArbCalc.sol\":2417:2452  amount = calcBorrowAmount(reserves) */\n      swap2\n      pop\n        /* \"contracts/ArbCalc.sol\":2231:2460  {... */\n      pop\n        /* \"contracts/ArbCalc.sol\":2128:2460  function getBorrowAmountV3(address lowerPool, address higherPool) external view returns(uint256 amount){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Reserves.sol\":816:1156  function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_40:\n        /* \"contracts/Reserves.sol\":874:890  uint256 reserve0 */\n      0x00\n        /* \"contracts/Reserves.sol\":892:908  uint256 reserve1 */\n      dup1\n        /* \"contracts/Reserves.sol\":920:939  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/Reserves.sol\":957:961  pair */\n      dup4\n        /* \"contracts/Reserves.sol\":920:962  IUniswapV3Pool pool = IUniswapV3Pool(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":973:987  address token0 */\n      0x00\n        /* \"contracts/Reserves.sol\":990:994  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":990:1001  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/Reserves.sol\":990:1003  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_106:\n        /* \"contracts/Reserves.sol\":973:1003  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1014:1028  address token1 */\n      0x00\n        /* \"contracts/Reserves.sol\":1031:1035  pool */\n      dup3\n        /* \"contracts/Reserves.sol\":1031:1042  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/Reserves.sol\":1031:1044  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_109:\n        /* \"contracts/Reserves.sol\":1014:1044  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1073:1079  token0 */\n      dup2\n        /* \"contracts/Reserves.sol\":1066:1090  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1091:1095  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1066:1096  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_113:\n        /* \"contracts/Reserves.sol\":1055:1096  reserve0 = IERC20(token0).balanceOf(pair) */\n      swap5\n      pop\n        /* \"contracts/Reserves.sol\":1125:1131  token1 */\n      dup1\n        /* \"contracts/Reserves.sol\":1118:1142  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1143:1147  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1118:1148  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_114:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_117:\n        /* \"contracts/Reserves.sol\":1107:1148  reserve1 = IERC20(token1).balanceOf(pair) */\n      swap4\n      pop\n        /* \"contracts/Reserves.sol\":909:1156  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":816:1156  function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/ArbCalc.sol\":1788:2120  function getBorrowAmountV2(address lowerPool, address higherPool) external view returns(uint256 amount){... */\n    tag_44:\n        /* \"contracts/ArbCalc.sol\":1876:1890  uint256 amount */\n      0x00\n        /* \"contracts/ArbCalc.sol\":1902:1933  OrderedReserves memory reserves */\n      tag_119\n      tag_98\n      jump\t// in\n    tag_119:\n        /* \"contracts/ArbCalc.sol\":1975:1999  getReservesV2(lowerPool) */\n      tag_120\n        /* \"contracts/ArbCalc.sol\":1989:1998  lowerPool */\n      dup5\n        /* \"contracts/ArbCalc.sol\":1975:1988  getReservesV2 */\n      tag_56\n        /* \"contracts/ArbCalc.sol\":1975:1999  getReservesV2(lowerPool) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ArbCalc.sol\":1947:1955  reserves */\n      dup3\n        /* \"contracts/ArbCalc.sol\":1947:1958  reserves.a1 */\n      0x00\n      add\n        /* \"contracts/ArbCalc.sol\":1960:1968  reserves */\n      dup4\n        /* \"contracts/ArbCalc.sol\":1960:1971  reserves.b1 */\n      0x20\n      add\n        /* \"contracts/ArbCalc.sol\":1946:1999  (reserves.a1, reserves.b1) = getReservesV2(lowerPool) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":2039:2064  getReservesV2(higherPool) */\n      tag_121\n        /* \"contracts/ArbCalc.sol\":2053:2063  higherPool */\n      dup4\n        /* \"contracts/ArbCalc.sol\":2039:2052  getReservesV2 */\n      tag_56\n        /* \"contracts/ArbCalc.sol\":2039:2064  getReservesV2(higherPool) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/ArbCalc.sol\":2011:2019  reserves */\n      dup3\n        /* \"contracts/ArbCalc.sol\":2011:2022  reserves.a2 */\n      0x40\n      add\n        /* \"contracts/ArbCalc.sol\":2024:2032  reserves */\n      dup4\n        /* \"contracts/ArbCalc.sol\":2024:2035  reserves.b2 */\n      0x60\n      add\n        /* \"contracts/ArbCalc.sol\":2010:2064  (reserves.a2, reserves.b2) = getReservesV2(higherPool) */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":2086:2112  calcBorrowAmount(reserves) */\n      tag_122\n        /* \"contracts/ArbCalc.sol\":2103:2111  reserves */\n      dup2\n        /* \"contracts/ArbCalc.sol\":2086:2102  calcBorrowAmount */\n      tag_102\n        /* \"contracts/ArbCalc.sol\":2086:2112  calcBorrowAmount(reserves) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/ArbCalc.sol\":2077:2112  amount = calcBorrowAmount(reserves) */\n      swap2\n      pop\n        /* \"contracts/ArbCalc.sol\":1891:2120  {... */\n      pop\n        /* \"contracts/ArbCalc.sol\":1788:2120  function getBorrowAmountV2(address lowerPool, address higherPool) external view returns(uint256 amount){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ArbCalc.sol\":1102:1451  function getRelativeLiquidity(address poolA, address poolB) public view returns (uint256 _rel)... */\n    tag_48:\n        /* \"contracts/ArbCalc.sol\":1183:1195  uint256 _rel */\n      0x00\n        /* \"contracts/ArbCalc.sol\":1214:1236  uint256 liquidityPoolA */\n      dup1\n        /* \"contracts/ArbCalc.sol\":1241:1268  getLiquidityAndPrice(poolA) */\n      tag_124\n        /* \"contracts/ArbCalc.sol\":1262:1267  poolA */\n      dup5\n        /* \"contracts/ArbCalc.sol\":1241:1261  getLiquidityAndPrice */\n      tag_23\n        /* \"contracts/ArbCalc.sol\":1241:1268  getLiquidityAndPrice(poolA) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/ArbCalc.sol\":1213:1268  (uint256 liquidityPoolA,) = getLiquidityAndPrice(poolA) */\n      pop\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":1280:1302  uint256 liquidityPoolB */\n      0x00\n        /* \"contracts/ArbCalc.sol\":1307:1334  getLiquidityAndPrice(poolB) */\n      tag_125\n        /* \"contracts/ArbCalc.sol\":1328:1333  poolB */\n      dup5\n        /* \"contracts/ArbCalc.sol\":1307:1327  getLiquidityAndPrice */\n      tag_23\n        /* \"contracts/ArbCalc.sol\":1307:1334  getLiquidityAndPrice(poolB) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/ArbCalc.sol\":1279:1334  (uint256 liquidityPoolB,) = getLiquidityAndPrice(poolB) */\n      pop\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":1440:1441  2 */\n      0x02\n        /* \"contracts/ArbCalc.sol\":1425:1439  liquidityPoolA */\n      dup3\n        /* \"contracts/ArbCalc.sol\":1425:1441  liquidityPoolA/2 */\n      tag_126\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_126:\n        /* \"contracts/ArbCalc.sol\":1408:1422  liquidityPoolB */\n      dup2\n        /* \"contracts/ArbCalc.sol\":1408:1441  liquidityPoolB + liquidityPoolA/2 */\n      tag_127\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_127:\n        /* \"contracts/ArbCalc.sol\":1389:1403  liquidityPoolB */\n      dup2\n        /* \"contracts/ArbCalc.sol\":1379:1386  1000000 */\n      0x0f4240\n        /* \"contracts/ArbCalc.sol\":1372:1376  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ArbCalc.sol\":1355:1369  liquidityPoolA */\n      dup6\n        /* \"contracts/ArbCalc.sol\":1355:1376  liquidityPoolA / 1e18 */\n      tag_128\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_128:\n        /* \"contracts/ArbCalc.sol\":1355:1386  liquidityPoolA / 1e18 * 1000000 */\n      tag_129\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_129:\n        /* \"contracts/ArbCalc.sol\":1355:1403  liquidityPoolA / 1e18 * 1000000 - liquidityPoolB */\n      tag_130\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_130:\n        /* \"contracts/ArbCalc.sol\":1354:1442  (liquidityPoolA / 1e18 * 1000000 - liquidityPoolB) / (liquidityPoolB + liquidityPoolA/2) */\n      tag_131\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_131:\n        /* \"contracts/ArbCalc.sol\":1347:1442  return (liquidityPoolA / 1e18 * 1000000 - liquidityPoolB) / (liquidityPoolB + liquidityPoolA/2) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":1102:1451  function getRelativeLiquidity(address poolA, address poolB) public view returns (uint256 _rel)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Reserves.sol\":581:808  function reserves1(address pair) external view returns ( uint256 reserve) {... */\n    tag_52:\n        /* \"contracts/Reserves.sol\":638:653  uint256 reserve */\n      0x00\n        /* \"contracts/Reserves.sol\":666:685  IUniswapV3Pool pool */\n      dup1\n        /* \"contracts/Reserves.sol\":703:707  pair */\n      dup3\n        /* \"contracts/Reserves.sol\":666:708  IUniswapV3Pool pool = IUniswapV3Pool(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":719:733  address token1 */\n      0x00\n        /* \"contracts/Reserves.sol\":736:740  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":736:747  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/Reserves.sol\":736:749  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_135:\n        /* \"contracts/Reserves.sol\":719:749  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":777:783  token1 */\n      dup1\n        /* \"contracts/Reserves.sol\":770:794  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":795:799  pair */\n      dup6\n        /* \"contracts/Reserves.sol\":770:800  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_136:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_139:\n        /* \"contracts/Reserves.sol\":760:800  reserve = IERC20(token1).balanceOf(pair) */\n      swap3\n      pop\n        /* \"contracts/Reserves.sol\":655:808  {... */\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":581:808  function reserves1(address pair) external view returns ( uint256 reserve) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Reserves.sol\":1164:1504  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_56:\n        /* \"contracts/Reserves.sol\":1222:1238  uint256 reserve0 */\n      0x00\n        /* \"contracts/Reserves.sol\":1240:1256  uint256 reserve1 */\n      dup1\n        /* \"contracts/Reserves.sol\":1268:1287  IUniswapV2Pair pool */\n      0x00\n        /* \"contracts/Reserves.sol\":1305:1309  pair */\n      dup4\n        /* \"contracts/Reserves.sol\":1268:1310  IUniswapV2Pair pool = IUniswapV2Pair(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1321:1335  address token0 */\n      0x00\n        /* \"contracts/Reserves.sol\":1338:1342  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":1338:1349  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/Reserves.sol\":1338:1351  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_143:\n        /* \"contracts/Reserves.sol\":1321:1351  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1362:1376  address token1 */\n      0x00\n        /* \"contracts/Reserves.sol\":1379:1383  pool */\n      dup3\n        /* \"contracts/Reserves.sol\":1379:1390  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/Reserves.sol\":1379:1392  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_146:\n        /* \"contracts/Reserves.sol\":1362:1392  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1421:1427  token0 */\n      dup2\n        /* \"contracts/Reserves.sol\":1414:1438  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1439:1443  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1414:1444  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_147:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_150:\n        /* \"contracts/Reserves.sol\":1403:1444  reserve0 = IERC20(token0).balanceOf(pair) */\n      swap5\n      pop\n        /* \"contracts/Reserves.sol\":1473:1479  token1 */\n      dup1\n        /* \"contracts/Reserves.sol\":1466:1490  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1491:1495  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1466:1496  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_151:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_154:\n        /* \"contracts/Reserves.sol\":1455:1496  reserve1 = IERC20(token1).balanceOf(pair) */\n      swap4\n      pop\n        /* \"contracts/Reserves.sol\":1257:1504  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":1164:1504  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/ArbCalc.sol\":2468:4572  function calcBorrowAmount(OrderedReserves memory reserves) internal pure returns (uint256 amount) {... */\n    tag_102:\n        /* \"contracts/ArbCalc.sol\":2550:2564  uint256 amount */\n      0x00\n        /* \"contracts/ArbCalc.sol\":3042:3054  uint256 min1 */\n      dup1\n        /* \"contracts/ArbCalc.sol\":3071:3079  reserves */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3071:3082  reserves.b1 */\n      0x20\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":3057:3065  reserves */\n      dup4\n        /* \"contracts/ArbCalc.sol\":3057:3068  reserves.a1 */\n      0x00\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":3057:3082  reserves.a1 < reserves.b1 */\n      lt\n        /* \"contracts/ArbCalc.sol\":3057:3110  reserves.a1 < reserves.b1 ? reserves.a1 : reserves.b1 */\n      tag_156\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3099:3107  reserves */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3099:3110  reserves.b1 */\n      0x20\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":3057:3110  reserves.a1 < reserves.b1 ? reserves.a1 : reserves.b1 */\n      jump(tag_157)\n    tag_156:\n        /* \"contracts/ArbCalc.sol\":3085:3093  reserves */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3085:3096  reserves.a1 */\n      0x00\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":3057:3110  reserves.a1 < reserves.b1 ? reserves.a1 : reserves.b1 */\n    tag_157:\n        /* \"contracts/ArbCalc.sol\":3042:3110  uint256 min1 = reserves.a1 < reserves.b1 ? reserves.a1 : reserves.b1 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3121:3133  uint256 min2 */\n      0x00\n        /* \"contracts/ArbCalc.sol\":3150:3158  reserves */\n      dup4\n        /* \"contracts/ArbCalc.sol\":3150:3161  reserves.b2 */\n      0x60\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":3136:3144  reserves */\n      dup5\n        /* \"contracts/ArbCalc.sol\":3136:3147  reserves.a2 */\n      0x40\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":3136:3161  reserves.a2 < reserves.b2 */\n      lt\n        /* \"contracts/ArbCalc.sol\":3136:3189  reserves.a2 < reserves.b2 ? reserves.a2 : reserves.b2 */\n      tag_158\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3178:3186  reserves */\n      dup4\n        /* \"contracts/ArbCalc.sol\":3178:3189  reserves.b2 */\n      0x60\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":3136:3189  reserves.a2 < reserves.b2 ? reserves.a2 : reserves.b2 */\n      jump(tag_159)\n    tag_158:\n        /* \"contracts/ArbCalc.sol\":3164:3172  reserves */\n      dup4\n        /* \"contracts/ArbCalc.sol\":3164:3175  reserves.a2 */\n      0x40\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":3136:3189  reserves.a2 < reserves.b2 ? reserves.a2 : reserves.b2 */\n    tag_159:\n        /* \"contracts/ArbCalc.sol\":3121:3189  uint256 min2 = reserves.a2 < reserves.b2 ? reserves.a2 : reserves.b2 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3200:3211  uint256 min */\n      0x00\n        /* \"contracts/ArbCalc.sol\":3221:3225  min2 */\n      dup2\n        /* \"contracts/ArbCalc.sol\":3214:3218  min1 */\n      dup4\n        /* \"contracts/ArbCalc.sol\":3214:3225  min1 < min2 */\n      lt\n        /* \"contracts/ArbCalc.sol\":3214:3239  min1 < min2 ? min1 : min2 */\n      tag_160\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3235:3239  min2 */\n      dup2\n        /* \"contracts/ArbCalc.sol\":3214:3239  min1 < min2 ? min1 : min2 */\n      jump(tag_161)\n    tag_160:\n        /* \"contracts/ArbCalc.sol\":3228:3232  min1 */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3214:3239  min1 < min2 ? min1 : min2 */\n    tag_161:\n        /* \"contracts/ArbCalc.sol\":3200:3239  uint256 min = min1 < min2 ? min1 : min2 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3328:3337  uint256 d */\n      0x00\n        /* \"contracts/ArbCalc.sol\":3358:3362  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/ArbCalc.sol\":3352:3355  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3352:3362  min > 1e24 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3348:3953  if (min > 1e24) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3383:3387  1e20 */\n      0x056bc75e2d63100000\n        /* \"contracts/ArbCalc.sol\":3379:3387  d = 1e20 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3348:3953  if (min > 1e24) {... */\n      jump(tag_163)\n    tag_162:\n        /* \"contracts/ArbCalc.sol\":3415:3419  1e23 */\n      0x152d02c7e14af6800000\n        /* \"contracts/ArbCalc.sol\":3409:3412  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3409:3419  min > 1e23 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3405:3953  if (min > 1e23) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3440:3444  1e19 */\n      0x8ac7230489e80000\n        /* \"contracts/ArbCalc.sol\":3436:3444  d = 1e19 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3405:3953  if (min > 1e23) {... */\n      jump(tag_165)\n    tag_164:\n        /* \"contracts/ArbCalc.sol\":3472:3476  1e22 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/ArbCalc.sol\":3466:3469  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3466:3476  min > 1e22 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3462:3953  if (min > 1e22) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3497:3501  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ArbCalc.sol\":3493:3501  d = 1e18 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3462:3953  if (min > 1e22) {... */\n      jump(tag_167)\n    tag_166:\n        /* \"contracts/ArbCalc.sol\":3529:3533  1e21 */\n      0x3635c9adc5dea00000\n        /* \"contracts/ArbCalc.sol\":3523:3526  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3523:3533  min > 1e21 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3519:3953  if (min > 1e21) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3554:3558  1e17 */\n      0x016345785d8a0000\n        /* \"contracts/ArbCalc.sol\":3550:3558  d = 1e17 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3519:3953  if (min > 1e21) {... */\n      jump(tag_169)\n    tag_168:\n        /* \"contracts/ArbCalc.sol\":3586:3590  1e20 */\n      0x056bc75e2d63100000\n        /* \"contracts/ArbCalc.sol\":3580:3583  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3580:3590  min > 1e20 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3576:3953  if (min > 1e20) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3611:3615  1e16 */\n      0x2386f26fc10000\n        /* \"contracts/ArbCalc.sol\":3607:3615  d = 1e16 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3576:3953  if (min > 1e20) {... */\n      jump(tag_171)\n    tag_170:\n        /* \"contracts/ArbCalc.sol\":3643:3647  1e19 */\n      0x8ac7230489e80000\n        /* \"contracts/ArbCalc.sol\":3637:3640  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3637:3647  min > 1e19 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3633:3953  if (min > 1e19) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3668:3672  1e15 */\n      0x038d7ea4c68000\n        /* \"contracts/ArbCalc.sol\":3664:3672  d = 1e15 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3633:3953  if (min > 1e19) {... */\n      jump(tag_173)\n    tag_172:\n        /* \"contracts/ArbCalc.sol\":3700:3704  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ArbCalc.sol\":3694:3697  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3694:3704  min > 1e18 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3690:3953  if (min > 1e18) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3725:3729  1e14 */\n      0x5af3107a4000\n        /* \"contracts/ArbCalc.sol\":3721:3729  d = 1e14 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3690:3953  if (min > 1e18) {... */\n      jump(tag_175)\n    tag_174:\n        /* \"contracts/ArbCalc.sol\":3757:3761  1e17 */\n      0x016345785d8a0000\n        /* \"contracts/ArbCalc.sol\":3751:3754  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3751:3761  min > 1e17 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3747:3953  if (min > 1e17) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3782:3786  1e13 */\n      0x09184e72a000\n        /* \"contracts/ArbCalc.sol\":3778:3786  d = 1e13 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3747:3953  if (min > 1e17) {... */\n      jump(tag_177)\n    tag_176:\n        /* \"contracts/ArbCalc.sol\":3814:3818  1e16 */\n      0x2386f26fc10000\n        /* \"contracts/ArbCalc.sol\":3808:3811  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3808:3818  min > 1e16 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3804:3953  if (min > 1e16) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3839:3843  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ArbCalc.sol\":3835:3843  d = 1e12 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3804:3953  if (min > 1e16) {... */\n      jump(tag_179)\n    tag_178:\n        /* \"contracts/ArbCalc.sol\":3871:3875  1e15 */\n      0x038d7ea4c68000\n        /* \"contracts/ArbCalc.sol\":3865:3868  min */\n      dup3\n        /* \"contracts/ArbCalc.sol\":3865:3875  min > 1e15 */\n      gt\n        /* \"contracts/ArbCalc.sol\":3861:3953  if (min > 1e15) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"contracts/ArbCalc.sol\":3896:3900  1e11 */\n      0x174876e800\n        /* \"contracts/ArbCalc.sol\":3892:3900  d = 1e11 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3861:3953  if (min > 1e15) {... */\n      jump(tag_181)\n    tag_180:\n        /* \"contracts/ArbCalc.sol\":3937:3941  1e10 */\n      0x02540be400\n        /* \"contracts/ArbCalc.sol\":3933:3941  d = 1e10 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":3861:3953  if (min > 1e15) {... */\n    tag_181:\n        /* \"contracts/ArbCalc.sol\":3804:3953  if (min > 1e16) {... */\n    tag_179:\n        /* \"contracts/ArbCalc.sol\":3747:3953  if (min > 1e17) {... */\n    tag_177:\n        /* \"contracts/ArbCalc.sol\":3690:3953  if (min > 1e18) {... */\n    tag_175:\n        /* \"contracts/ArbCalc.sol\":3633:3953  if (min > 1e19) {... */\n    tag_173:\n        /* \"contracts/ArbCalc.sol\":3576:3953  if (min > 1e20) {... */\n    tag_171:\n        /* \"contracts/ArbCalc.sol\":3519:3953  if (min > 1e21) {... */\n    tag_169:\n        /* \"contracts/ArbCalc.sol\":3462:3953  if (min > 1e22) {... */\n    tag_167:\n        /* \"contracts/ArbCalc.sol\":3405:3953  if (min > 1e23) {... */\n    tag_165:\n        /* \"contracts/ArbCalc.sol\":3348:3953  if (min > 1e24) {... */\n    tag_163:\n        /* \"contracts/ArbCalc.sol\":3966:3975  int256 a1 */\n      0x00\n        /* \"contracts/ArbCalc.sol\":3977:3986  int256 a2 */\n      dup1\n        /* \"contracts/ArbCalc.sol\":3988:3997  int256 b1 */\n      0x00\n        /* \"contracts/ArbCalc.sol\":3999:4008  int256 b2 */\n      dup1\n        /* \"contracts/ArbCalc.sol\":4047:4048  d */\n      dup5\n        /* \"contracts/ArbCalc.sol\":4033:4041  reserves */\n      dup11\n        /* \"contracts/ArbCalc.sol\":4033:4044  reserves.a1 */\n      0x00\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":4033:4048  reserves.a1 / d */\n      tag_182\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_182:\n        /* \"contracts/ArbCalc.sol\":4072:4073  d */\n      dup6\n        /* \"contracts/ArbCalc.sol\":4058:4066  reserves */\n      dup12\n        /* \"contracts/ArbCalc.sol\":4058:4069  reserves.a2 */\n      0x40\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":4058:4073  reserves.a2 / d */\n      tag_183\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_183:\n        /* \"contracts/ArbCalc.sol\":4097:4098  d */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4083:4091  reserves */\n      dup13\n        /* \"contracts/ArbCalc.sol\":4083:4094  reserves.b1 */\n      0x20\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":4083:4098  reserves.b1 / d */\n      tag_184\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_184:\n        /* \"contracts/ArbCalc.sol\":4122:4123  d */\n      dup8\n        /* \"contracts/ArbCalc.sol\":4108:4116  reserves */\n      dup14\n        /* \"contracts/ArbCalc.sol\":4108:4119  reserves.b2 */\n      0x60\n      add\n      mload\n        /* \"contracts/ArbCalc.sol\":4108:4123  reserves.b2 / d */\n      tag_185\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_185:\n        /* \"contracts/ArbCalc.sol\":3965:4125  (int256 a1, int256 a2, int256 b1, int256 b2) =... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/ArbCalc.sol\":4138:4146  int256 a */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4164:4166  b2 */\n      dup2\n        /* \"contracts/ArbCalc.sol\":4159:4161  a2 */\n      dup5\n        /* \"contracts/ArbCalc.sol\":4159:4166  a2 * b2 */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"contracts/ArbCalc.sol\":4154:4156  b1 */\n      dup4\n        /* \"contracts/ArbCalc.sol\":4149:4151  a1 */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4149:4156  a1 * b1 */\n      tag_188\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_188:\n        /* \"contracts/ArbCalc.sol\":4149:4166  a1 * b1 - a2 * b2 */\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/ArbCalc.sol\":4138:4166  int256 a = a1 * b1 - a2 * b2 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":4177:4185  int256 b */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4208:4210  a2 */\n      dup5\n        /* \"contracts/ArbCalc.sol\":4203:4205  a1 */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4203:4210  a1 + a2 */\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/ArbCalc.sol\":4197:4199  b2 */\n      dup4\n        /* \"contracts/ArbCalc.sol\":4192:4194  b1 */\n      dup6\n        /* \"contracts/ArbCalc.sol\":4188:4189  2 */\n      0x02\n        /* \"contracts/ArbCalc.sol\":4188:4194  2 * b1 */\n      tag_193\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_193:\n        /* \"contracts/ArbCalc.sol\":4188:4199  2 * b1 * b2 */\n      tag_194\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_194:\n        /* \"contracts/ArbCalc.sol\":4188:4211  2 * b1 * b2 * (a1 + a2) */\n      tag_195\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_195:\n        /* \"contracts/ArbCalc.sol\":4177:4211  int256 b = 2 * b1 * b2 * (a1 + a2) */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":4222:4230  int256 c */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4259:4261  b1 */\n      dup5\n        /* \"contracts/ArbCalc.sol\":4254:4256  a2 */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4254:4261  a2 * b1 */\n      tag_196\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_196:\n        /* \"contracts/ArbCalc.sol\":4249:4251  b2 */\n      dup5\n        /* \"contracts/ArbCalc.sol\":4244:4246  a1 */\n      dup9\n        /* \"contracts/ArbCalc.sol\":4244:4251  a1 * b2 */\n      tag_197\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_197:\n        /* \"contracts/ArbCalc.sol\":4244:4261  a1 * b2 - a2 * b1 */\n      tag_198\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_198:\n        /* \"contracts/ArbCalc.sol\":4238:4240  b2 */\n      dup5\n        /* \"contracts/ArbCalc.sol\":4233:4235  b1 */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4233:4240  b1 * b2 */\n      tag_199\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_199:\n        /* \"contracts/ArbCalc.sol\":4233:4262  b1 * b2 * (a1 * b2 - a2 * b1) */\n      tag_200\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_200:\n        /* \"contracts/ArbCalc.sol\":4222:4262  int256 c = b1 * b2 * (a1 * b2 - a2 * b1) */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":4276:4285  int256 x1 */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4287:4296  int256 x2 */\n      dup1\n        /* \"contracts/ArbCalc.sol\":4300:4333  calcSolutionForQuadratic(a, b, c) */\n      tag_201\n        /* \"contracts/ArbCalc.sol\":4325:4326  a */\n      dup6\n        /* \"contracts/ArbCalc.sol\":4328:4329  b */\n      dup6\n        /* \"contracts/ArbCalc.sol\":4331:4332  c */\n      dup6\n        /* \"contracts/ArbCalc.sol\":4300:4324  calcSolutionForQuadratic */\n      tag_202\n        /* \"contracts/ArbCalc.sol\":4300:4333  calcSolutionForQuadratic(a, b, c) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/ArbCalc.sol\":4275:4333  (int256 x1, int256 x2) = calcSolutionForQuadratic(a, b, c) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/ArbCalc.sol\":4398:4399  0 */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4393:4395  x1 */\n      dup3\n        /* \"contracts/ArbCalc.sol\":4393:4399  x1 > 0 */\n      sgt\n        /* \"contracts/ArbCalc.sol\":4393:4410  x1 > 0 && x1 < b1 */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n        /* \"contracts/ArbCalc.sol\":4408:4410  b1 */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4403:4405  x1 */\n      dup3\n        /* \"contracts/ArbCalc.sol\":4403:4410  x1 < b1 */\n      slt\n        /* \"contracts/ArbCalc.sol\":4393:4410  x1 > 0 && x1 < b1 */\n    tag_203:\n        /* \"contracts/ArbCalc.sol\":4393:4421  x1 > 0 && x1 < b1 && x1 < b2 */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"contracts/ArbCalc.sol\":4419:4421  b2 */\n      dup6\n        /* \"contracts/ArbCalc.sol\":4414:4416  x1 */\n      dup3\n        /* \"contracts/ArbCalc.sol\":4414:4421  x1 < b2 */\n      slt\n        /* \"contracts/ArbCalc.sol\":4393:4421  x1 > 0 && x1 < b1 && x1 < b2 */\n    tag_204:\n        /* \"contracts/ArbCalc.sol\":4392:4456  (x1 > 0 && x1 < b1 && x1 < b2) || (x2 > 0 && x2 < b1 && x2 < b2) */\n      dup1\n      tag_205\n      jumpi\n      pop\n        /* \"contracts/ArbCalc.sol\":4432:4433  0 */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4427:4429  x2 */\n      dup2\n        /* \"contracts/ArbCalc.sol\":4427:4433  x2 > 0 */\n      sgt\n        /* \"contracts/ArbCalc.sol\":4427:4444  x2 > 0 && x2 < b1 */\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n        /* \"contracts/ArbCalc.sol\":4442:4444  b1 */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4437:4439  x2 */\n      dup2\n        /* \"contracts/ArbCalc.sol\":4437:4444  x2 < b1 */\n      slt\n        /* \"contracts/ArbCalc.sol\":4427:4444  x2 > 0 && x2 < b1 */\n    tag_206:\n        /* \"contracts/ArbCalc.sol\":4427:4455  x2 > 0 && x2 < b1 && x2 < b2 */\n      dup1\n      iszero\n      tag_207\n      jumpi\n      pop\n        /* \"contracts/ArbCalc.sol\":4453:4455  b2 */\n      dup6\n        /* \"contracts/ArbCalc.sol\":4448:4450  x2 */\n      dup2\n        /* \"contracts/ArbCalc.sol\":4448:4455  x2 < b2 */\n      slt\n        /* \"contracts/ArbCalc.sol\":4427:4455  x2 > 0 && x2 < b1 && x2 < b2 */\n    tag_207:\n        /* \"contracts/ArbCalc.sol\":4392:4456  (x1 > 0 && x1 < b1 && x1 < b2) || (x2 > 0 && x2 < b1 && x2 < b2) */\n    tag_205:\n        /* \"contracts/ArbCalc.sol\":4384:4478  require((x1 > 0 && x1 < b1 && x1 < b2) || (x2 > 0 && x2 < b1 && x2 < b2), 'Wrong input order') */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/ArbCalc.sol\":4504:4505  0 */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4499:4501  x1 */\n      dup3\n        /* \"contracts/ArbCalc.sol\":4499:4505  x1 > 0 */\n      sgt\n        /* \"contracts/ArbCalc.sol\":4499:4516  x1 > 0 && x1 < b1 */\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"contracts/ArbCalc.sol\":4514:4516  b1 */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4509:4511  x1 */\n      dup3\n        /* \"contracts/ArbCalc.sol\":4509:4516  x1 < b1 */\n      slt\n        /* \"contracts/ArbCalc.sol\":4499:4516  x1 > 0 && x1 < b1 */\n    tag_211:\n        /* \"contracts/ArbCalc.sol\":4499:4527  x1 > 0 && x1 < b1 && x1 < b2 */\n      dup1\n      iszero\n      tag_212\n      jumpi\n      pop\n        /* \"contracts/ArbCalc.sol\":4525:4527  b2 */\n      dup6\n        /* \"contracts/ArbCalc.sol\":4520:4522  x1 */\n      dup3\n        /* \"contracts/ArbCalc.sol\":4520:4527  x1 < b2 */\n      slt\n        /* \"contracts/ArbCalc.sol\":4499:4527  x1 > 0 && x1 < b1 && x1 < b2 */\n    tag_212:\n        /* \"contracts/ArbCalc.sol\":4498:4564  (x1 > 0 && x1 < b1 && x1 < b2) ? uint256(x1) * d : uint256(x2) * d */\n      tag_213\n      jumpi\n        /* \"contracts/ArbCalc.sol\":4563:4564  d */\n      dup10\n        /* \"contracts/ArbCalc.sol\":4557:4559  x2 */\n      dup2\n        /* \"contracts/ArbCalc.sol\":4549:4564  uint256(x2) * d */\n      tag_214\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_214:\n        /* \"contracts/ArbCalc.sol\":4498:4564  (x1 > 0 && x1 < b1 && x1 < b2) ? uint256(x1) * d : uint256(x2) * d */\n      jump(tag_215)\n    tag_213:\n        /* \"contracts/ArbCalc.sol\":4545:4546  d */\n      dup10\n        /* \"contracts/ArbCalc.sol\":4539:4541  x1 */\n      dup3\n        /* \"contracts/ArbCalc.sol\":4531:4546  uint256(x1) * d */\n      tag_216\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_216:\n        /* \"contracts/ArbCalc.sol\":4498:4564  (x1 > 0 && x1 < b1 && x1 < b2) ? uint256(x1) * d : uint256(x2) * d */\n    tag_215:\n        /* \"contracts/ArbCalc.sol\":4489:4564  amount = (x1 > 0 && x1 < b1 && x1 < b2) ? uint256(x1) * d : uint256(x2) * d */\n      swap14\n      pop\n        /* \"contracts/ArbCalc.sol\":2566:4572  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":2468:4572  function calcBorrowAmount(OrderedReserves memory reserves) internal pure returns (uint256 amount) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ArbCalc.sol\":4684:5086  function calcSolutionForQuadratic(... */\n    tag_202:\n        /* \"contracts/ArbCalc.sol\":4805:4814  int256 x1 */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4816:4825  int256 x2 */\n      dup1\n        /* \"contracts/ArbCalc.sol\":4838:4846  int256 m */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4864:4865  c */\n      dup4\n        /* \"contracts/ArbCalc.sol\":4860:4861  a */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4856:4857  4 */\n      0x04\n        /* \"contracts/ArbCalc.sol\":4856:4861  4 * a */\n      tag_218\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_218:\n        /* \"contracts/ArbCalc.sol\":4856:4865  4 * a * c */\n      tag_219\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_219:\n        /* \"contracts/ArbCalc.sol\":4852:4853  2 */\n      0x02\n        /* \"contracts/ArbCalc.sol\":4849:4850  b */\n      dup7\n        /* \"contracts/ArbCalc.sol\":4849:4853  b**2 */\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"contracts/ArbCalc.sol\":4849:4865  b**2 - 4 * a * c */\n      tag_222\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_222:\n        /* \"contracts/ArbCalc.sol\":4838:4865  int256 m = b**2 - 4 * a * c */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":4930:4931  0 */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4926:4927  m */\n      dup2\n        /* \"contracts/ArbCalc.sol\":4926:4931  m > 0 */\n      sgt\n        /* \"contracts/ArbCalc.sol\":4918:4950  require(m > 0, 'Complex number') */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"contracts/ArbCalc.sol\":4963:4975  int256 sqrtM */\n      0x00\n        /* \"contracts/ArbCalc.sol\":4985:5001  sqrt(uint256(m)) */\n      tag_226\n        /* \"contracts/ArbCalc.sol\":4998:4999  m */\n      dup3\n        /* \"contracts/ArbCalc.sol\":4985:4989  sqrt */\n      tag_227\n        /* \"contracts/ArbCalc.sol\":4985:5001  sqrt(uint256(m)) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/ArbCalc.sol\":4963:5002  int256 sqrtM = int256(sqrt(uint256(m))) */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":5038:5039  a */\n      dup7\n        /* \"contracts/ArbCalc.sol\":5034:5035  2 */\n      0x02\n        /* \"contracts/ArbCalc.sol\":5034:5039  2 * a */\n      tag_228\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_228:\n        /* \"contracts/ArbCalc.sol\":5024:5029  sqrtM */\n      dup2\n        /* \"contracts/ArbCalc.sol\":5020:5021  b */\n      dup8\n        /* \"contracts/ArbCalc.sol\":5019:5021  -b */\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"contracts/ArbCalc.sol\":5019:5029  -b + sqrtM */\n      tag_231\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_231:\n        /* \"contracts/ArbCalc.sol\":5018:5040  (-b + sqrtM) / (2 * a) */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"contracts/ArbCalc.sol\":5013:5040  x1 = (-b + sqrtM) / (2 * a) */\n      swap4\n      pop\n        /* \"contracts/ArbCalc.sol\":5076:5077  a */\n      dup7\n        /* \"contracts/ArbCalc.sol\":5072:5073  2 */\n      0x02\n        /* \"contracts/ArbCalc.sol\":5072:5077  2 * a */\n      tag_234\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_234:\n        /* \"contracts/ArbCalc.sol\":5062:5067  sqrtM */\n      dup2\n        /* \"contracts/ArbCalc.sol\":5058:5059  b */\n      dup8\n        /* \"contracts/ArbCalc.sol\":5057:5059  -b */\n      tag_235\n      swap1\n      tag_230\n      jump\t// in\n    tag_235:\n        /* \"contracts/ArbCalc.sol\":5057:5067  -b - sqrtM */\n      tag_236\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_236:\n        /* \"contracts/ArbCalc.sol\":5056:5078  (-b - sqrtM) / (2 * a) */\n      tag_237\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_237:\n        /* \"contracts/ArbCalc.sol\":5051:5078  x2 = (-b - sqrtM) / (2 * a) */\n      swap3\n      pop\n        /* \"contracts/ArbCalc.sol\":4827:5086  {... */\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":4684:5086  function calcSolutionForQuadratic(... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ArbCalc.sol\":5158:5735  function sqrt(uint256 n) internal pure returns (uint256 res) {... */\n    tag_227:\n        /* \"contracts/ArbCalc.sol\":5206:5217  uint256 res */\n      0x00\n        /* \"contracts/ArbCalc.sol\":5241:5242  1 */\n      0x01\n        /* \"contracts/ArbCalc.sol\":5237:5238  n */\n      dup3\n        /* \"contracts/ArbCalc.sol\":5237:5242  n > 1 */\n      gt\n        /* \"contracts/ArbCalc.sol\":5230:5243  assert(n > 1) */\n      tag_239\n      jumpi\n      tag_240\n      tag_241\n      jump\t// in\n    tag_240:\n    tag_239:\n        /* \"contracts/ArbCalc.sol\":5384:5394  uint256 _n */\n      0x00\n        /* \"contracts/ArbCalc.sol\":5401:5406  10**6 */\n      0x0f4240\n        /* \"contracts/ArbCalc.sol\":5397:5398  n */\n      dup4\n        /* \"contracts/ArbCalc.sol\":5397:5406  n * 10**6 */\n      tag_242\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_242:\n        /* \"contracts/ArbCalc.sol\":5384:5406  uint256 _n = n * 10**6 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":5417:5426  uint256 c */\n      0x00\n        /* \"contracts/ArbCalc.sol\":5429:5431  _n */\n      dup2\n        /* \"contracts/ArbCalc.sol\":5417:5431  uint256 c = _n */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":5448:5450  _n */\n      dup2\n        /* \"contracts/ArbCalc.sol\":5442:5450  res = _n */\n      swap3\n      pop\n        /* \"contracts/ArbCalc.sol\":5463:5473  uint256 xi */\n      0x00\n        /* \"contracts/ArbCalc.sol\":5484:5700  while (true) {... */\n    tag_243:\n        /* \"contracts/ArbCalc.sol\":5491:5495  true */\n      0x01\n        /* \"contracts/ArbCalc.sol\":5484:5700  while (true) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/ArbCalc.sol\":5535:5536  2 */\n      0x02\n        /* \"contracts/ArbCalc.sol\":5528:5531  res */\n      dup5\n        /* \"contracts/ArbCalc.sol\":5524:5525  c */\n      dup4\n        /* \"contracts/ArbCalc.sol\":5524:5531  c / res */\n      tag_245\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_245:\n        /* \"contracts/ArbCalc.sol\":5518:5521  res */\n      dup6\n        /* \"contracts/ArbCalc.sol\":5518:5531  res + c / res */\n      tag_246\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_246:\n        /* \"contracts/ArbCalc.sol\":5517:5536  (res + c / res) / 2 */\n      tag_247\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_247:\n        /* \"contracts/ArbCalc.sol\":5512:5536  xi = (res + c / res) / 2 */\n      swap1\n      pop\n        /* \"contracts/ArbCalc.sol\":5620:5624  1000 */\n      0x03e8\n        /* \"contracts/ArbCalc.sol\":5615:5617  xi */\n      dup2\n        /* \"contracts/ArbCalc.sol\":5609:5612  res */\n      dup6\n        /* \"contracts/ArbCalc.sol\":5609:5617  res - xi */\n      tag_248\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_248:\n        /* \"contracts/ArbCalc.sol\":5609:5624  res - xi < 1000 */\n      lt\n        /* \"contracts/ArbCalc.sol\":5645:5650  break */\n      tag_244\n        /* \"contracts/ArbCalc.sol\":5605:5666  if (res - xi < 1000) {... */\n      jumpi\n        /* \"contracts/ArbCalc.sol\":5686:5688  xi */\n      dup1\n        /* \"contracts/ArbCalc.sol\":5680:5688  res = xi */\n      swap4\n      pop\n        /* \"contracts/ArbCalc.sol\":5484:5700  while (true) {... */\n      jump(tag_243)\n    tag_244:\n        /* \"contracts/ArbCalc.sol\":5722:5727  10**3 */\n      0x03e8\n        /* \"contracts/ArbCalc.sol\":5716:5719  res */\n      dup5\n        /* \"contracts/ArbCalc.sol\":5716:5727  res / 10**3 */\n      tag_250\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_250:\n        /* \"contracts/ArbCalc.sol\":5710:5727  res = res / 10**3 */\n      swap4\n      pop\n        /* \"contracts/ArbCalc.sol\":5219:5735  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ArbCalc.sol\":5158:5735  function sqrt(uint256 n) internal pure returns (uint256 res) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_98:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_252:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_254:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_255:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_298\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_254\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_256:\n        /* \"#utility.yul\":641:665   */\n      tag_300\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_255\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_301:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_257:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_303\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_256\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1315   */\n    tag_16:\n        /* \"#utility.yul\":909:915   */\n      0x00\n        /* \"#utility.yul\":917:923   */\n      dup1\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":954:963   */\n      dup4\n        /* \"#utility.yul\":945:952   */\n      dup6\n        /* \"#utility.yul\":941:964   */\n      sub\n        /* \"#utility.yul\":937:969   */\n      slt\n        /* \"#utility.yul\":934:1053   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":972:1051   */\n      tag_306\n      tag_252\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":934:1053   */\n    tag_305:\n        /* \"#utility.yul\":1092:1093   */\n      0x00\n        /* \"#utility.yul\":1117:1170   */\n      tag_307\n        /* \"#utility.yul\":1162:1169   */\n      dup6\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1142:1151   */\n      dup7\n        /* \"#utility.yul\":1138:1160   */\n      add\n        /* \"#utility.yul\":1117:1170   */\n      tag_257\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1107:1170   */\n      swap3\n      pop\n        /* \"#utility.yul\":1063:1180   */\n      pop\n        /* \"#utility.yul\":1219:1221   */\n      0x20\n        /* \"#utility.yul\":1245:1298   */\n      tag_308\n        /* \"#utility.yul\":1290:1297   */\n      dup6\n        /* \"#utility.yul\":1281:1287   */\n      dup3\n        /* \"#utility.yul\":1270:1279   */\n      dup7\n        /* \"#utility.yul\":1266:1288   */\n      add\n        /* \"#utility.yul\":1245:1298   */\n      tag_257\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":1235:1298   */\n      swap2\n      pop\n        /* \"#utility.yul\":1190:1308   */\n      pop\n        /* \"#utility.yul\":841:1315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1321:1398   */\n    tag_258:\n        /* \"#utility.yul\":1358:1365   */\n      0x00\n        /* \"#utility.yul\":1387:1392   */\n      dup2\n        /* \"#utility.yul\":1376:1392   */\n      swap1\n      pop\n        /* \"#utility.yul\":1321:1398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1522   */\n    tag_259:\n        /* \"#utility.yul\":1491:1515   */\n      tag_311\n        /* \"#utility.yul\":1509:1514   */\n      dup2\n        /* \"#utility.yul\":1491:1515   */\n      tag_258\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1486:1489   */\n      dup3\n        /* \"#utility.yul\":1479:1516   */\n      mstore\n        /* \"#utility.yul\":1404:1522   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1750   */\n    tag_19:\n        /* \"#utility.yul\":1621:1625   */\n      0x00\n        /* \"#utility.yul\":1659:1661   */\n      0x20\n        /* \"#utility.yul\":1648:1657   */\n      dup3\n        /* \"#utility.yul\":1644:1662   */\n      add\n        /* \"#utility.yul\":1636:1662   */\n      swap1\n      pop\n        /* \"#utility.yul\":1672:1743   */\n      tag_313\n        /* \"#utility.yul\":1740:1741   */\n      0x00\n        /* \"#utility.yul\":1729:1738   */\n      dup4\n        /* \"#utility.yul\":1725:1742   */\n      add\n        /* \"#utility.yul\":1716:1722   */\n      dup5\n        /* \"#utility.yul\":1672:1743   */\n      tag_259\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1528:1750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:2085   */\n    tag_22:\n        /* \"#utility.yul\":1815:1821   */\n      0x00\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1852:1861   */\n      dup3\n        /* \"#utility.yul\":1843:1850   */\n      dup5\n        /* \"#utility.yul\":1839:1862   */\n      sub\n        /* \"#utility.yul\":1835:1867   */\n      slt\n        /* \"#utility.yul\":1832:1951   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":1870:1949   */\n      tag_316\n      tag_252\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1832:1951   */\n    tag_315:\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":2015:2068   */\n      tag_317\n        /* \"#utility.yul\":2060:2067   */\n      dup5\n        /* \"#utility.yul\":2051:2057   */\n      dup3\n        /* \"#utility.yul\":2040:2049   */\n      dup6\n        /* \"#utility.yul\":2036:2058   */\n      add\n        /* \"#utility.yul\":2015:2068   */\n      tag_257\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2005:2068   */\n      swap2\n      pop\n        /* \"#utility.yul\":1961:2078   */\n      pop\n        /* \"#utility.yul\":1756:2085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2423   */\n    tag_25:\n        /* \"#utility.yul\":2212:2216   */\n      0x00\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2239:2248   */\n      dup3\n        /* \"#utility.yul\":2235:2253   */\n      add\n        /* \"#utility.yul\":2227:2253   */\n      swap1\n      pop\n        /* \"#utility.yul\":2263:2334   */\n      tag_319\n        /* \"#utility.yul\":2331:2332   */\n      0x00\n        /* \"#utility.yul\":2320:2329   */\n      dup4\n        /* \"#utility.yul\":2316:2333   */\n      add\n        /* \"#utility.yul\":2307:2313   */\n      dup6\n        /* \"#utility.yul\":2263:2334   */\n      tag_259\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2344:2416   */\n      tag_320\n        /* \"#utility.yul\":2412:2414   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup4\n        /* \"#utility.yul\":2397:2415   */\n      add\n        /* \"#utility.yul\":2388:2394   */\n      dup5\n        /* \"#utility.yul\":2344:2416   */\n      tag_259\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2091:2423   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2429:2609   */\n    tag_260:\n        /* \"#utility.yul\":2477:2554   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2474:2475   */\n      0x00\n        /* \"#utility.yul\":2467:2555   */\n      mstore\n        /* \"#utility.yul\":2574:2578   */\n      0x11\n        /* \"#utility.yul\":2571:2572   */\n      0x04\n        /* \"#utility.yul\":2564:2579   */\n      mstore\n        /* \"#utility.yul\":2598:2602   */\n      0x24\n        /* \"#utility.yul\":2595:2596   */\n      0x00\n        /* \"#utility.yul\":2588:2603   */\n      revert\n        /* \"#utility.yul\":2615:2806   */\n    tag_62:\n        /* \"#utility.yul\":2655:2658   */\n      0x00\n        /* \"#utility.yul\":2674:2694   */\n      tag_323\n        /* \"#utility.yul\":2692:2693   */\n      dup3\n        /* \"#utility.yul\":2674:2694   */\n      tag_258\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2669:2694   */\n      swap2\n      pop\n        /* \"#utility.yul\":2708:2728   */\n      tag_324\n        /* \"#utility.yul\":2726:2727   */\n      dup4\n        /* \"#utility.yul\":2708:2728   */\n      tag_258\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2703:2728   */\n      swap3\n      pop\n        /* \"#utility.yul\":2751:2752   */\n      dup3\n        /* \"#utility.yul\":2748:2749   */\n      dup3\n        /* \"#utility.yul\":2744:2753   */\n      add\n        /* \"#utility.yul\":2737:2753   */\n      swap1\n      pop\n        /* \"#utility.yul\":2772:2775   */\n      dup1\n        /* \"#utility.yul\":2769:2770   */\n      dup3\n        /* \"#utility.yul\":2766:2776   */\n      gt\n        /* \"#utility.yul\":2763:2799   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":2779:2797   */\n      tag_326\n      tag_260\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2763:2799   */\n    tag_325:\n        /* \"#utility.yul\":2615:2806   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2812:2992   */\n    tag_261:\n        /* \"#utility.yul\":2860:2937   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2857:2858   */\n      0x00\n        /* \"#utility.yul\":2850:2938   */\n      mstore\n        /* \"#utility.yul\":2957:2961   */\n      0x12\n        /* \"#utility.yul\":2954:2955   */\n      0x04\n        /* \"#utility.yul\":2947:2962   */\n      mstore\n        /* \"#utility.yul\":2981:2985   */\n      0x24\n        /* \"#utility.yul\":2978:2979   */\n      0x00\n        /* \"#utility.yul\":2971:2986   */\n      revert\n        /* \"#utility.yul\":2998:3183   */\n    tag_64:\n        /* \"#utility.yul\":3038:3039   */\n      0x00\n        /* \"#utility.yul\":3055:3075   */\n      tag_329\n        /* \"#utility.yul\":3073:3074   */\n      dup3\n        /* \"#utility.yul\":3055:3075   */\n      tag_258\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3050:3075   */\n      swap2\n      pop\n        /* \"#utility.yul\":3089:3109   */\n      tag_330\n        /* \"#utility.yul\":3107:3108   */\n      dup4\n        /* \"#utility.yul\":3089:3109   */\n      tag_258\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3084:3109   */\n      swap3\n      pop\n        /* \"#utility.yul\":3128:3129   */\n      dup3\n        /* \"#utility.yul\":3118:3153   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":3133:3151   */\n      tag_332\n      tag_261\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3118:3153   */\n    tag_331:\n        /* \"#utility.yul\":3175:3176   */\n      dup3\n        /* \"#utility.yul\":3172:3173   */\n      dup3\n        /* \"#utility.yul\":3168:3177   */\n      div\n        /* \"#utility.yul\":3163:3177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2998:3183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3189:3599   */\n    tag_66:\n        /* \"#utility.yul\":3229:3236   */\n      0x00\n        /* \"#utility.yul\":3252:3272   */\n      tag_334\n        /* \"#utility.yul\":3270:3271   */\n      dup3\n        /* \"#utility.yul\":3252:3272   */\n      tag_258\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3247:3272   */\n      swap2\n      pop\n        /* \"#utility.yul\":3286:3306   */\n      tag_335\n        /* \"#utility.yul\":3304:3305   */\n      dup4\n        /* \"#utility.yul\":3286:3306   */\n      tag_258\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3281:3306   */\n      swap3\n      pop\n        /* \"#utility.yul\":3341:3342   */\n      dup3\n        /* \"#utility.yul\":3338:3339   */\n      dup3\n        /* \"#utility.yul\":3334:3343   */\n      mul\n        /* \"#utility.yul\":3363:3393   */\n      tag_336\n        /* \"#utility.yul\":3381:3392   */\n      dup2\n        /* \"#utility.yul\":3363:3393   */\n      tag_258\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3352:3393   */\n      swap2\n      pop\n        /* \"#utility.yul\":3542:3543   */\n      dup3\n        /* \"#utility.yul\":3533:3540   */\n      dup3\n        /* \"#utility.yul\":3529:3544   */\n      div\n        /* \"#utility.yul\":3526:3527   */\n      dup5\n        /* \"#utility.yul\":3523:3545   */\n      eq\n        /* \"#utility.yul\":3503:3504   */\n      dup4\n        /* \"#utility.yul\":3496:3505   */\n      iszero\n        /* \"#utility.yul\":3476:3559   */\n      or\n        /* \"#utility.yul\":3453:3592   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":3572:3590   */\n      tag_338\n      tag_260\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3453:3592   */\n    tag_337:\n        /* \"#utility.yul\":3237:3599   */\n      pop\n        /* \"#utility.yul\":3189:3599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3605:3799   */\n    tag_68:\n        /* \"#utility.yul\":3645:3649   */\n      0x00\n        /* \"#utility.yul\":3665:3685   */\n      tag_340\n        /* \"#utility.yul\":3683:3684   */\n      dup3\n        /* \"#utility.yul\":3665:3685   */\n      tag_258\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3660:3685   */\n      swap2\n      pop\n        /* \"#utility.yul\":3699:3719   */\n      tag_341\n        /* \"#utility.yul\":3717:3718   */\n      dup4\n        /* \"#utility.yul\":3699:3719   */\n      tag_258\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3694:3719   */\n      swap3\n      pop\n        /* \"#utility.yul\":3743:3744   */\n      dup3\n        /* \"#utility.yul\":3740:3741   */\n      dup3\n        /* \"#utility.yul\":3736:3745   */\n      sub\n        /* \"#utility.yul\":3728:3745   */\n      swap1\n      pop\n        /* \"#utility.yul\":3767:3768   */\n      dup2\n        /* \"#utility.yul\":3761:3765   */\n      dup2\n        /* \"#utility.yul\":3758:3769   */\n      gt\n        /* \"#utility.yul\":3755:3792   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3772:3790   */\n      tag_343\n      tag_260\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3755:3792   */\n    tag_342:\n        /* \"#utility.yul\":3605:3799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3805:3927   */\n    tag_262:\n        /* \"#utility.yul\":3878:3902   */\n      tag_345\n        /* \"#utility.yul\":3896:3901   */\n      dup2\n        /* \"#utility.yul\":3878:3902   */\n      tag_254\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3871:3876   */\n      dup2\n        /* \"#utility.yul\":3868:3903   */\n      eq\n        /* \"#utility.yul\":3858:3921   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":3917:3918   */\n      0x00\n        /* \"#utility.yul\":3914:3915   */\n      dup1\n        /* \"#utility.yul\":3907:3919   */\n      revert\n        /* \"#utility.yul\":3858:3921   */\n    tag_346:\n        /* \"#utility.yul\":3805:3927   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3933:4076   */\n    tag_263:\n        /* \"#utility.yul\":3990:3995   */\n      0x00\n        /* \"#utility.yul\":4021:4027   */\n      dup2\n        /* \"#utility.yul\":4015:4028   */\n      mload\n        /* \"#utility.yul\":4006:4028   */\n      swap1\n      pop\n        /* \"#utility.yul\":4037:4070   */\n      tag_348\n        /* \"#utility.yul\":4064:4069   */\n      dup2\n        /* \"#utility.yul\":4037:4070   */\n      tag_262\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3933:4076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4082:4172   */\n    tag_264:\n        /* \"#utility.yul\":4117:4124   */\n      0x00\n        /* \"#utility.yul\":4160:4165   */\n      dup2\n        /* \"#utility.yul\":4157:4158   */\n      0x02\n        /* \"#utility.yul\":4146:4166   */\n      signextend\n        /* \"#utility.yul\":4135:4166   */\n      swap1\n      pop\n        /* \"#utility.yul\":4082:4172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4178:4296   */\n    tag_265:\n        /* \"#utility.yul\":4249:4271   */\n      tag_351\n        /* \"#utility.yul\":4265:4270   */\n      dup2\n        /* \"#utility.yul\":4249:4271   */\n      tag_264\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4242:4247   */\n      dup2\n        /* \"#utility.yul\":4239:4272   */\n      eq\n        /* \"#utility.yul\":4229:4290   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":4286:4287   */\n      0x00\n        /* \"#utility.yul\":4283:4284   */\n      dup1\n        /* \"#utility.yul\":4276:4288   */\n      revert\n        /* \"#utility.yul\":4229:4290   */\n    tag_352:\n        /* \"#utility.yul\":4178:4296   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4302:4441   */\n    tag_266:\n        /* \"#utility.yul\":4357:4362   */\n      0x00\n        /* \"#utility.yul\":4388:4394   */\n      dup2\n        /* \"#utility.yul\":4382:4395   */\n      mload\n        /* \"#utility.yul\":4373:4395   */\n      swap1\n      pop\n        /* \"#utility.yul\":4404:4435   */\n      tag_354\n        /* \"#utility.yul\":4429:4434   */\n      dup2\n        /* \"#utility.yul\":4404:4435   */\n      tag_265\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4302:4441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4447:4536   */\n    tag_267:\n        /* \"#utility.yul\":4483:4490   */\n      0x00\n        /* \"#utility.yul\":4523:4529   */\n      0xffff\n        /* \"#utility.yul\":4516:4521   */\n      dup3\n        /* \"#utility.yul\":4512:4530   */\n      and\n        /* \"#utility.yul\":4501:4530   */\n      swap1\n      pop\n        /* \"#utility.yul\":4447:4536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4542:4662   */\n    tag_268:\n        /* \"#utility.yul\":4614:4637   */\n      tag_357\n        /* \"#utility.yul\":4631:4636   */\n      dup2\n        /* \"#utility.yul\":4614:4637   */\n      tag_267\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4607:4612   */\n      dup2\n        /* \"#utility.yul\":4604:4638   */\n      eq\n        /* \"#utility.yul\":4594:4656   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":4652:4653   */\n      0x00\n        /* \"#utility.yul\":4649:4650   */\n      dup1\n        /* \"#utility.yul\":4642:4654   */\n      revert\n        /* \"#utility.yul\":4594:4656   */\n    tag_358:\n        /* \"#utility.yul\":4542:4662   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4668:4809   */\n    tag_269:\n        /* \"#utility.yul\":4724:4729   */\n      0x00\n        /* \"#utility.yul\":4755:4761   */\n      dup2\n        /* \"#utility.yul\":4749:4762   */\n      mload\n        /* \"#utility.yul\":4740:4762   */\n      swap1\n      pop\n        /* \"#utility.yul\":4771:4803   */\n      tag_360\n        /* \"#utility.yul\":4797:4802   */\n      dup2\n        /* \"#utility.yul\":4771:4803   */\n      tag_268\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4668:4809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4815:4901   */\n    tag_270:\n        /* \"#utility.yul\":4850:4857   */\n      0x00\n        /* \"#utility.yul\":4890:4894   */\n      0xff\n        /* \"#utility.yul\":4883:4888   */\n      dup3\n        /* \"#utility.yul\":4879:4895   */\n      and\n        /* \"#utility.yul\":4868:4895   */\n      swap1\n      pop\n        /* \"#utility.yul\":4815:4901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4907:5025   */\n    tag_271:\n        /* \"#utility.yul\":4978:5000   */\n      tag_363\n        /* \"#utility.yul\":4994:4999   */\n      dup2\n        /* \"#utility.yul\":4978:5000   */\n      tag_270\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4971:4976   */\n      dup2\n        /* \"#utility.yul\":4968:5001   */\n      eq\n        /* \"#utility.yul\":4958:5019   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":5015:5016   */\n      0x00\n        /* \"#utility.yul\":5012:5013   */\n      dup1\n        /* \"#utility.yul\":5005:5017   */\n      revert\n        /* \"#utility.yul\":4958:5019   */\n    tag_364:\n        /* \"#utility.yul\":4907:5025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5031:5170   */\n    tag_272:\n        /* \"#utility.yul\":5086:5091   */\n      0x00\n        /* \"#utility.yul\":5117:5123   */\n      dup2\n        /* \"#utility.yul\":5111:5124   */\n      mload\n        /* \"#utility.yul\":5102:5124   */\n      swap1\n      pop\n        /* \"#utility.yul\":5133:5164   */\n      tag_366\n        /* \"#utility.yul\":5158:5163   */\n      dup2\n        /* \"#utility.yul\":5133:5164   */\n      tag_271\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5031:5170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5176:5266   */\n    tag_273:\n        /* \"#utility.yul\":5210:5217   */\n      0x00\n        /* \"#utility.yul\":5253:5258   */\n      dup2\n        /* \"#utility.yul\":5246:5259   */\n      iszero\n        /* \"#utility.yul\":5239:5260   */\n      iszero\n        /* \"#utility.yul\":5228:5260   */\n      swap1\n      pop\n        /* \"#utility.yul\":5176:5266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5272:5388   */\n    tag_274:\n        /* \"#utility.yul\":5342:5363   */\n      tag_369\n        /* \"#utility.yul\":5357:5362   */\n      dup2\n        /* \"#utility.yul\":5342:5363   */\n      tag_273\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5335:5340   */\n      dup2\n        /* \"#utility.yul\":5332:5364   */\n      eq\n        /* \"#utility.yul\":5322:5382   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5378:5379   */\n      0x00\n        /* \"#utility.yul\":5375:5376   */\n      dup1\n        /* \"#utility.yul\":5368:5380   */\n      revert\n        /* \"#utility.yul\":5322:5382   */\n    tag_370:\n        /* \"#utility.yul\":5272:5388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5531   */\n    tag_275:\n        /* \"#utility.yul\":5448:5453   */\n      0x00\n        /* \"#utility.yul\":5479:5485   */\n      dup2\n        /* \"#utility.yul\":5473:5486   */\n      mload\n        /* \"#utility.yul\":5464:5486   */\n      swap1\n      pop\n        /* \"#utility.yul\":5495:5525   */\n      tag_372\n        /* \"#utility.yul\":5519:5524   */\n      dup2\n        /* \"#utility.yul\":5495:5525   */\n      tag_274\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5394:5531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5537:6808   */\n    tag_75:\n        /* \"#utility.yul\":5651:5657   */\n      0x00\n        /* \"#utility.yul\":5659:5665   */\n      dup1\n        /* \"#utility.yul\":5667:5673   */\n      0x00\n        /* \"#utility.yul\":5675:5681   */\n      dup1\n        /* \"#utility.yul\":5683:5689   */\n      0x00\n        /* \"#utility.yul\":5691:5697   */\n      dup1\n        /* \"#utility.yul\":5699:5705   */\n      0x00\n        /* \"#utility.yul\":5748:5751   */\n      0xe0\n        /* \"#utility.yul\":5736:5745   */\n      dup9\n        /* \"#utility.yul\":5727:5734   */\n      dup11\n        /* \"#utility.yul\":5723:5746   */\n      sub\n        /* \"#utility.yul\":5719:5752   */\n      slt\n        /* \"#utility.yul\":5716:5836   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":5755:5834   */\n      tag_375\n      tag_252\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5716:5836   */\n    tag_374:\n        /* \"#utility.yul\":5875:5876   */\n      0x00\n        /* \"#utility.yul\":5900:5964   */\n      tag_376\n        /* \"#utility.yul\":5956:5963   */\n      dup11\n        /* \"#utility.yul\":5947:5953   */\n      dup3\n        /* \"#utility.yul\":5936:5945   */\n      dup12\n        /* \"#utility.yul\":5932:5954   */\n      add\n        /* \"#utility.yul\":5900:5964   */\n      tag_263\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5890:5964   */\n      swap8\n      pop\n        /* \"#utility.yul\":5846:5974   */\n      pop\n        /* \"#utility.yul\":6013:6015   */\n      0x20\n        /* \"#utility.yul\":6039:6101   */\n      tag_377\n        /* \"#utility.yul\":6093:6100   */\n      dup11\n        /* \"#utility.yul\":6084:6090   */\n      dup3\n        /* \"#utility.yul\":6073:6082   */\n      dup12\n        /* \"#utility.yul\":6069:6091   */\n      add\n        /* \"#utility.yul\":6039:6101   */\n      tag_266\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6029:6101   */\n      swap7\n      pop\n        /* \"#utility.yul\":5984:6111   */\n      pop\n        /* \"#utility.yul\":6150:6152   */\n      0x40\n        /* \"#utility.yul\":6176:6239   */\n      tag_378\n        /* \"#utility.yul\":6231:6238   */\n      dup11\n        /* \"#utility.yul\":6222:6228   */\n      dup3\n        /* \"#utility.yul\":6211:6220   */\n      dup12\n        /* \"#utility.yul\":6207:6229   */\n      add\n        /* \"#utility.yul\":6176:6239   */\n      tag_269\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6166:6239   */\n      swap6\n      pop\n        /* \"#utility.yul\":6121:6249   */\n      pop\n        /* \"#utility.yul\":6288:6290   */\n      0x60\n        /* \"#utility.yul\":6314:6377   */\n      tag_379\n        /* \"#utility.yul\":6369:6376   */\n      dup11\n        /* \"#utility.yul\":6360:6366   */\n      dup3\n        /* \"#utility.yul\":6349:6358   */\n      dup12\n        /* \"#utility.yul\":6345:6367   */\n      add\n        /* \"#utility.yul\":6314:6377   */\n      tag_269\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6304:6377   */\n      swap5\n      pop\n        /* \"#utility.yul\":6259:6387   */\n      pop\n        /* \"#utility.yul\":6426:6429   */\n      0x80\n        /* \"#utility.yul\":6453:6516   */\n      tag_380\n        /* \"#utility.yul\":6508:6515   */\n      dup11\n        /* \"#utility.yul\":6499:6505   */\n      dup3\n        /* \"#utility.yul\":6488:6497   */\n      dup12\n        /* \"#utility.yul\":6484:6506   */\n      add\n        /* \"#utility.yul\":6453:6516   */\n      tag_269\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6443:6516   */\n      swap4\n      pop\n        /* \"#utility.yul\":6397:6526   */\n      pop\n        /* \"#utility.yul\":6565:6568   */\n      0xa0\n        /* \"#utility.yul\":6592:6654   */\n      tag_381\n        /* \"#utility.yul\":6646:6653   */\n      dup11\n        /* \"#utility.yul\":6637:6643   */\n      dup3\n        /* \"#utility.yul\":6626:6635   */\n      dup12\n        /* \"#utility.yul\":6622:6644   */\n      add\n        /* \"#utility.yul\":6592:6654   */\n      tag_272\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6582:6654   */\n      swap3\n      pop\n        /* \"#utility.yul\":6536:6664   */\n      pop\n        /* \"#utility.yul\":6703:6706   */\n      0xc0\n        /* \"#utility.yul\":6730:6791   */\n      tag_382\n        /* \"#utility.yul\":6783:6790   */\n      dup11\n        /* \"#utility.yul\":6774:6780   */\n      dup3\n        /* \"#utility.yul\":6763:6772   */\n      dup12\n        /* \"#utility.yul\":6759:6781   */\n      add\n        /* \"#utility.yul\":6730:6791   */\n      tag_275\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6720:6791   */\n      swap2\n      pop\n        /* \"#utility.yul\":6674:6801   */\n      pop\n        /* \"#utility.yul\":5537:6808   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6814:6932   */\n    tag_276:\n        /* \"#utility.yul\":6851:6858   */\n      0x00\n        /* \"#utility.yul\":6891:6925   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6884:6889   */\n      dup3\n        /* \"#utility.yul\":6880:6926   */\n      and\n        /* \"#utility.yul\":6869:6926   */\n      swap1\n      pop\n        /* \"#utility.yul\":6814:6932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6938:7060   */\n    tag_277:\n        /* \"#utility.yul\":7011:7035   */\n      tag_385\n        /* \"#utility.yul\":7029:7034   */\n      dup2\n        /* \"#utility.yul\":7011:7035   */\n      tag_276\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7004:7009   */\n      dup2\n        /* \"#utility.yul\":7001:7036   */\n      eq\n        /* \"#utility.yul\":6991:7054   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":7050:7051   */\n      0x00\n        /* \"#utility.yul\":7047:7048   */\n      dup1\n        /* \"#utility.yul\":7040:7052   */\n      revert\n        /* \"#utility.yul\":6991:7054   */\n    tag_386:\n        /* \"#utility.yul\":6938:7060   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7066:7209   */\n    tag_278:\n        /* \"#utility.yul\":7123:7128   */\n      0x00\n        /* \"#utility.yul\":7154:7160   */\n      dup2\n        /* \"#utility.yul\":7148:7161   */\n      mload\n        /* \"#utility.yul\":7139:7161   */\n      swap1\n      pop\n        /* \"#utility.yul\":7170:7203   */\n      tag_388\n        /* \"#utility.yul\":7197:7202   */\n      dup2\n        /* \"#utility.yul\":7170:7203   */\n      tag_277\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7066:7209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7215:7566   */\n    tag_79:\n        /* \"#utility.yul\":7285:7291   */\n      0x00\n        /* \"#utility.yul\":7334:7336   */\n      0x20\n        /* \"#utility.yul\":7322:7331   */\n      dup3\n        /* \"#utility.yul\":7313:7320   */\n      dup5\n        /* \"#utility.yul\":7309:7332   */\n      sub\n        /* \"#utility.yul\":7305:7337   */\n      slt\n        /* \"#utility.yul\":7302:7421   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":7340:7419   */\n      tag_391\n      tag_252\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7302:7421   */\n    tag_390:\n        /* \"#utility.yul\":7460:7461   */\n      0x00\n        /* \"#utility.yul\":7485:7549   */\n      tag_392\n        /* \"#utility.yul\":7541:7548   */\n      dup5\n        /* \"#utility.yul\":7532:7538   */\n      dup3\n        /* \"#utility.yul\":7521:7530   */\n      dup6\n        /* \"#utility.yul\":7517:7539   */\n      add\n        /* \"#utility.yul\":7485:7549   */\n      tag_278\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7475:7549   */\n      swap2\n      pop\n        /* \"#utility.yul\":7431:7559   */\n      pop\n        /* \"#utility.yul\":7215:7566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7572:7715   */\n    tag_279:\n        /* \"#utility.yul\":7629:7634   */\n      0x00\n        /* \"#utility.yul\":7660:7666   */\n      dup2\n        /* \"#utility.yul\":7654:7667   */\n      mload\n        /* \"#utility.yul\":7645:7667   */\n      swap1\n      pop\n        /* \"#utility.yul\":7676:7709   */\n      tag_394\n        /* \"#utility.yul\":7703:7708   */\n      dup2\n        /* \"#utility.yul\":7676:7709   */\n      tag_256\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7572:7715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7721:8072   */\n    tag_84:\n        /* \"#utility.yul\":7791:7797   */\n      0x00\n        /* \"#utility.yul\":7840:7842   */\n      0x20\n        /* \"#utility.yul\":7828:7837   */\n      dup3\n        /* \"#utility.yul\":7819:7826   */\n      dup5\n        /* \"#utility.yul\":7815:7838   */\n      sub\n        /* \"#utility.yul\":7811:7843   */\n      slt\n        /* \"#utility.yul\":7808:7927   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":7846:7925   */\n      tag_397\n      tag_252\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7808:7927   */\n    tag_396:\n        /* \"#utility.yul\":7966:7967   */\n      0x00\n        /* \"#utility.yul\":7991:8055   */\n      tag_398\n        /* \"#utility.yul\":8047:8054   */\n      dup5\n        /* \"#utility.yul\":8038:8044   */\n      dup3\n        /* \"#utility.yul\":8027:8036   */\n      dup6\n        /* \"#utility.yul\":8023:8045   */\n      add\n        /* \"#utility.yul\":7991:8055   */\n      tag_279\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":7981:8055   */\n      swap2\n      pop\n        /* \"#utility.yul\":7937:8065   */\n      pop\n        /* \"#utility.yul\":7721:8072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8078:8196   */\n    tag_280:\n        /* \"#utility.yul\":8165:8189   */\n      tag_400\n        /* \"#utility.yul\":8183:8188   */\n      dup2\n        /* \"#utility.yul\":8165:8189   */\n      tag_255\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8160:8163   */\n      dup3\n        /* \"#utility.yul\":8153:8190   */\n      mstore\n        /* \"#utility.yul\":8078:8196   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8202:8424   */\n    tag_86:\n        /* \"#utility.yul\":8295:8299   */\n      0x00\n        /* \"#utility.yul\":8333:8335   */\n      0x20\n        /* \"#utility.yul\":8322:8331   */\n      dup3\n        /* \"#utility.yul\":8318:8336   */\n      add\n        /* \"#utility.yul\":8310:8336   */\n      swap1\n      pop\n        /* \"#utility.yul\":8346:8417   */\n      tag_402\n        /* \"#utility.yul\":8414:8415   */\n      0x00\n        /* \"#utility.yul\":8403:8412   */\n      dup4\n        /* \"#utility.yul\":8399:8416   */\n      add\n        /* \"#utility.yul\":8390:8396   */\n      dup5\n        /* \"#utility.yul\":8346:8417   */\n      tag_280\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8202:8424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8430:8552   */\n    tag_281:\n        /* \"#utility.yul\":8503:8527   */\n      tag_404\n        /* \"#utility.yul\":8521:8526   */\n      dup2\n        /* \"#utility.yul\":8503:8527   */\n      tag_258\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":8496:8501   */\n      dup2\n        /* \"#utility.yul\":8493:8528   */\n      eq\n        /* \"#utility.yul\":8483:8546   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":8542:8543   */\n      0x00\n        /* \"#utility.yul\":8539:8540   */\n      dup1\n        /* \"#utility.yul\":8532:8544   */\n      revert\n        /* \"#utility.yul\":8483:8546   */\n    tag_405:\n        /* \"#utility.yul\":8430:8552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8558:8701   */\n    tag_282:\n        /* \"#utility.yul\":8615:8620   */\n      0x00\n        /* \"#utility.yul\":8646:8652   */\n      dup2\n        /* \"#utility.yul\":8640:8653   */\n      mload\n        /* \"#utility.yul\":8631:8653   */\n      swap1\n      pop\n        /* \"#utility.yul\":8662:8695   */\n      tag_407\n        /* \"#utility.yul\":8689:8694   */\n      dup2\n        /* \"#utility.yul\":8662:8695   */\n      tag_281\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8558:8701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8707:9058   */\n    tag_90:\n        /* \"#utility.yul\":8777:8783   */\n      0x00\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8814:8823   */\n      dup3\n        /* \"#utility.yul\":8805:8812   */\n      dup5\n        /* \"#utility.yul\":8801:8824   */\n      sub\n        /* \"#utility.yul\":8797:8829   */\n      slt\n        /* \"#utility.yul\":8794:8913   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":8832:8911   */\n      tag_410\n      tag_252\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8794:8913   */\n    tag_409:\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8977:9041   */\n      tag_411\n        /* \"#utility.yul\":9033:9040   */\n      dup5\n        /* \"#utility.yul\":9024:9030   */\n      dup3\n        /* \"#utility.yul\":9013:9022   */\n      dup6\n        /* \"#utility.yul\":9009:9031   */\n      add\n        /* \"#utility.yul\":8977:9041   */\n      tag_282\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8967:9041   */\n      swap2\n      pop\n        /* \"#utility.yul\":8923:9051   */\n      pop\n        /* \"#utility.yul\":8707:9058   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9064:9140   */\n    tag_283:\n        /* \"#utility.yul\":9100:9107   */\n      0x00\n        /* \"#utility.yul\":9129:9134   */\n      dup2\n        /* \"#utility.yul\":9118:9134   */\n      swap1\n      pop\n        /* \"#utility.yul\":9064:9140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9146:9702   */\n    tag_187:\n        /* \"#utility.yul\":9185:9192   */\n      0x00\n        /* \"#utility.yul\":9208:9227   */\n      tag_414\n        /* \"#utility.yul\":9225:9226   */\n      dup3\n        /* \"#utility.yul\":9208:9227   */\n      tag_283\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9203:9227   */\n      swap2\n      pop\n        /* \"#utility.yul\":9241:9260   */\n      tag_415\n        /* \"#utility.yul\":9258:9259   */\n      dup4\n        /* \"#utility.yul\":9241:9260   */\n      tag_283\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9236:9260   */\n      swap3\n      pop\n        /* \"#utility.yul\":9295:9296   */\n      dup3\n        /* \"#utility.yul\":9292:9293   */\n      dup3\n        /* \"#utility.yul\":9288:9297   */\n      mul\n        /* \"#utility.yul\":9317:9346   */\n      tag_416\n        /* \"#utility.yul\":9334:9345   */\n      dup2\n        /* \"#utility.yul\":9317:9346   */\n      tag_283\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9306:9346   */\n      swap2\n      pop\n        /* \"#utility.yul\":9404:9470   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9401:9402   */\n      dup5\n        /* \"#utility.yul\":9398:9471   */\n      eq\n        /* \"#utility.yul\":9394:9395   */\n      0x00\n        /* \"#utility.yul\":9391:9392   */\n      dup5\n        /* \"#utility.yul\":9387:9396   */\n      slt\n        /* \"#utility.yul\":9383:9472   */\n      and\n        /* \"#utility.yul\":9380:9495   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":9475:9493   */\n      tag_418\n      tag_260\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9380:9495   */\n    tag_417:\n        /* \"#utility.yul\":9645:9646   */\n      dup3\n        /* \"#utility.yul\":9636:9643   */\n      dup3\n        /* \"#utility.yul\":9631:9647   */\n      sdiv\n        /* \"#utility.yul\":9628:9629   */\n      dup5\n        /* \"#utility.yul\":9625:9648   */\n      eq\n        /* \"#utility.yul\":9605:9606   */\n      dup4\n        /* \"#utility.yul\":9598:9607   */\n      iszero\n        /* \"#utility.yul\":9578:9662   */\n      or\n        /* \"#utility.yul\":9555:9695   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":9675:9693   */\n      tag_420\n      tag_260\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9555:9695   */\n    tag_419:\n        /* \"#utility.yul\":9193:9702   */\n      pop\n        /* \"#utility.yul\":9146:9702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9708:10080   */\n    tag_190:\n        /* \"#utility.yul\":9747:9751   */\n      0x00\n        /* \"#utility.yul\":9767:9786   */\n      tag_422\n        /* \"#utility.yul\":9784:9785   */\n      dup3\n        /* \"#utility.yul\":9767:9786   */\n      tag_283\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9762:9786   */\n      swap2\n      pop\n        /* \"#utility.yul\":9800:9819   */\n      tag_423\n        /* \"#utility.yul\":9817:9818   */\n      dup4\n        /* \"#utility.yul\":9800:9819   */\n      tag_283\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9795:9819   */\n      swap3\n      pop\n        /* \"#utility.yul\":9843:9844   */\n      dup3\n        /* \"#utility.yul\":9840:9841   */\n      dup3\n        /* \"#utility.yul\":9836:9845   */\n      sub\n        /* \"#utility.yul\":9828:9845   */\n      swap1\n      pop\n        /* \"#utility.yul\":10037:10038   */\n      dup2\n        /* \"#utility.yul\":10031:10035   */\n      dup2\n        /* \"#utility.yul\":10027:10039   */\n      slt\n        /* \"#utility.yul\":10023:10024   */\n      0x00\n        /* \"#utility.yul\":10020:10021   */\n      dup5\n        /* \"#utility.yul\":10016:10025   */\n      slt\n        /* \"#utility.yul\":10012:10040   */\n      and\n        /* \"#utility.yul\":9995:9996   */\n      dup3\n        /* \"#utility.yul\":9989:9993   */\n      dup3\n        /* \"#utility.yul\":9985:9997   */\n      sgt\n        /* \"#utility.yul\":9980:9981   */\n      0x00\n        /* \"#utility.yul\":9977:9978   */\n      dup6\n        /* \"#utility.yul\":9973:9982   */\n      slt\n        /* \"#utility.yul\":9966:9983   */\n      iszero\n        /* \"#utility.yul\":9962:9998   */\n      and\n        /* \"#utility.yul\":9946:10050   */\n      or\n        /* \"#utility.yul\":9943:10073   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":10053:10071   */\n      tag_425\n      tag_260\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9943:10073   */\n    tag_424:\n        /* \"#utility.yul\":9708:10080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10086:10461   */\n    tag_192:\n        /* \"#utility.yul\":10125:10128   */\n      0x00\n        /* \"#utility.yul\":10144:10163   */\n      tag_427\n        /* \"#utility.yul\":10161:10162   */\n      dup3\n        /* \"#utility.yul\":10144:10163   */\n      tag_283\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":10139:10163   */\n      swap2\n      pop\n        /* \"#utility.yul\":10177:10196   */\n      tag_428\n        /* \"#utility.yul\":10194:10195   */\n      dup4\n        /* \"#utility.yul\":10177:10196   */\n      tag_283\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10172:10196   */\n      swap3\n      pop\n        /* \"#utility.yul\":10219:10220   */\n      dup3\n        /* \"#utility.yul\":10216:10217   */\n      dup3\n        /* \"#utility.yul\":10212:10221   */\n      add\n        /* \"#utility.yul\":10205:10221   */\n      swap1\n      pop\n        /* \"#utility.yul\":10417:10418   */\n      dup3\n        /* \"#utility.yul\":10412:10415   */\n      dup2\n        /* \"#utility.yul\":10408:10419   */\n      slt\n        /* \"#utility.yul\":10401:10420   */\n      iszero\n        /* \"#utility.yul\":10397:10398   */\n      0x00\n        /* \"#utility.yul\":10394:10395   */\n      dup4\n        /* \"#utility.yul\":10390:10399   */\n      slt\n        /* \"#utility.yul\":10386:10421   */\n      and\n        /* \"#utility.yul\":10369:10370   */\n      dup4\n        /* \"#utility.yul\":10364:10367   */\n      dup3\n        /* \"#utility.yul\":10360:10371   */\n      slt\n        /* \"#utility.yul\":10355:10356   */\n      0x00\n        /* \"#utility.yul\":10352:10353   */\n      dup5\n        /* \"#utility.yul\":10348:10357   */\n      slt\n        /* \"#utility.yul\":10341:10358   */\n      iszero\n        /* \"#utility.yul\":10337:10372   */\n      and\n        /* \"#utility.yul\":10321:10431   */\n      or\n        /* \"#utility.yul\":10318:10454   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":10434:10452   */\n      tag_430\n      tag_260\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":10318:10454   */\n    tag_429:\n        /* \"#utility.yul\":10086:10461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10467:10636   */\n    tag_284:\n        /* \"#utility.yul\":10551:10562   */\n      0x00\n        /* \"#utility.yul\":10585:10591   */\n      dup3\n        /* \"#utility.yul\":10580:10583   */\n      dup3\n        /* \"#utility.yul\":10573:10592   */\n      mstore\n        /* \"#utility.yul\":10625:10629   */\n      0x20\n        /* \"#utility.yul\":10620:10623   */\n      dup3\n        /* \"#utility.yul\":10616:10630   */\n      add\n        /* \"#utility.yul\":10601:10630   */\n      swap1\n      pop\n        /* \"#utility.yul\":10467:10636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10642:10809   */\n    tag_285:\n        /* \"#utility.yul\":10782:10801   */\n      0x57726f6e6720696e707574206f72646572000000000000000000000000000000\n        /* \"#utility.yul\":10778:10779   */\n      0x00\n        /* \"#utility.yul\":10770:10776   */\n      dup3\n        /* \"#utility.yul\":10766:10780   */\n      add\n        /* \"#utility.yul\":10759:10802   */\n      mstore\n        /* \"#utility.yul\":10642:10809   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10815:11181   */\n    tag_286:\n        /* \"#utility.yul\":10957:10960   */\n      0x00\n        /* \"#utility.yul\":10978:11045   */\n      tag_434\n        /* \"#utility.yul\":11042:11044   */\n      0x11\n        /* \"#utility.yul\":11037:11040   */\n      dup4\n        /* \"#utility.yul\":10978:11045   */\n      tag_284\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10971:11045   */\n      swap2\n      pop\n        /* \"#utility.yul\":11054:11147   */\n      tag_435\n        /* \"#utility.yul\":11143:11146   */\n      dup3\n        /* \"#utility.yul\":11054:11147   */\n      tag_285\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":11172:11174   */\n      0x20\n        /* \"#utility.yul\":11167:11170   */\n      dup3\n        /* \"#utility.yul\":11163:11175   */\n      add\n        /* \"#utility.yul\":11156:11175   */\n      swap1\n      pop\n        /* \"#utility.yul\":10815:11181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11187:11606   */\n    tag_210:\n        /* \"#utility.yul\":11353:11357   */\n      0x00\n        /* \"#utility.yul\":11391:11393   */\n      0x20\n        /* \"#utility.yul\":11380:11389   */\n      dup3\n        /* \"#utility.yul\":11376:11394   */\n      add\n        /* \"#utility.yul\":11368:11394   */\n      swap1\n      pop\n        /* \"#utility.yul\":11440:11449   */\n      dup2\n        /* \"#utility.yul\":11434:11438   */\n      dup2\n        /* \"#utility.yul\":11430:11450   */\n      sub\n        /* \"#utility.yul\":11426:11427   */\n      0x00\n        /* \"#utility.yul\":11415:11424   */\n      dup4\n        /* \"#utility.yul\":11411:11428   */\n      add\n        /* \"#utility.yul\":11404:11451   */\n      mstore\n        /* \"#utility.yul\":11468:11599   */\n      tag_437\n        /* \"#utility.yul\":11594:11598   */\n      dup2\n        /* \"#utility.yul\":11468:11599   */\n      tag_286\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":11460:11599   */\n      swap1\n      pop\n        /* \"#utility.yul\":11187:11606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11612:11714   */\n    tag_287:\n        /* \"#utility.yul\":11654:11662   */\n      0x00\n        /* \"#utility.yul\":11701:11706   */\n      dup2\n        /* \"#utility.yul\":11698:11699   */\n      0x01\n        /* \"#utility.yul\":11694:11707   */\n      shr\n        /* \"#utility.yul\":11673:11707   */\n      swap1\n      pop\n        /* \"#utility.yul\":11612:11714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11720:12568   */\n    tag_288:\n        /* \"#utility.yul\":11781:11786   */\n      0x00\n        /* \"#utility.yul\":11788:11792   */\n      dup1\n        /* \"#utility.yul\":11812:11818   */\n      dup3\n        /* \"#utility.yul\":11803:11818   */\n      swap2\n      pop\n        /* \"#utility.yul\":11836:11841   */\n      dup4\n        /* \"#utility.yul\":11827:11841   */\n      swap1\n      pop\n        /* \"#utility.yul\":11850:12562   */\n    tag_440:\n        /* \"#utility.yul\":11871:11872   */\n      0x01\n        /* \"#utility.yul\":11861:11869   */\n      dup6\n        /* \"#utility.yul\":11858:11873   */\n      gt\n        /* \"#utility.yul\":11850:12562   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":11966:11970   */\n      dup1\n        /* \"#utility.yul\":11961:11964   */\n      dup7\n        /* \"#utility.yul\":11957:11971   */\n      div\n        /* \"#utility.yul\":11951:11955   */\n      dup2\n        /* \"#utility.yul\":11948:11972   */\n      gt\n        /* \"#utility.yul\":11945:11995   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":11975:11993   */\n      tag_444\n      tag_260\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11945:11995   */\n    tag_443:\n        /* \"#utility.yul\":12025:12026   */\n      0x01\n        /* \"#utility.yul\":12015:12023   */\n      dup6\n        /* \"#utility.yul\":12011:12027   */\n      and\n        /* \"#utility.yul\":12008:12459   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":12440:12444   */\n      dup1\n        /* \"#utility.yul\":12433:12438   */\n      dup3\n        /* \"#utility.yul\":12429:12445   */\n      mul\n        /* \"#utility.yul\":12420:12445   */\n      swap2\n      pop\n        /* \"#utility.yul\":12008:12459   */\n    tag_445:\n        /* \"#utility.yul\":12490:12494   */\n      dup1\n        /* \"#utility.yul\":12484:12488   */\n      dup2\n        /* \"#utility.yul\":12480:12495   */\n      mul\n        /* \"#utility.yul\":12472:12495   */\n      swap1\n      pop\n        /* \"#utility.yul\":12520:12552   */\n      tag_446\n        /* \"#utility.yul\":12543:12551   */\n      dup6\n        /* \"#utility.yul\":12520:12552   */\n      tag_287\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":12508:12552   */\n      swap5\n      pop\n        /* \"#utility.yul\":11850:12562   */\n      jump(tag_440)\n    tag_442:\n        /* \"#utility.yul\":11720:12568   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12574:13799   */\n    tag_289:\n        /* \"#utility.yul\":12631:12636   */\n      0x00\n        /* \"#utility.yul\":12797:12805   */\n      dup3\n        /* \"#utility.yul\":12819:12820   */\n      0x00\n        /* \"#utility.yul\":12814:12841   */\n      dup2\n      eq\n      tag_449\n      jumpi\n        /* \"#utility.yul\":12855:12856   */\n      0x01\n        /* \"#utility.yul\":12850:12880   */\n      dup2\n      eq\n      tag_450\n      jumpi\n        /* \"#utility.yul\":12790:12880   */\n      jump(tag_448)\n        /* \"#utility.yul\":12814:12841   */\n    tag_449:\n        /* \"#utility.yul\":12832:12833   */\n      0x01\n        /* \"#utility.yul\":12823:12833   */\n      swap2\n      pop\n        /* \"#utility.yul\":12834:12839   */\n      pop\n      jump(tag_447)\n        /* \"#utility.yul\":12850:12880   */\n    tag_450:\n        /* \"#utility.yul\":12868:12872   */\n      dup3\n        /* \"#utility.yul\":12859:12872   */\n      swap2\n      pop\n        /* \"#utility.yul\":12873:12878   */\n      pop\n      jump(tag_447)\n        /* \"#utility.yul\":12790:12880   */\n    tag_448:\n      pop\n        /* \"#utility.yul\":12899:12903   */\n      dup2\n        /* \"#utility.yul\":12889:12925   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":12916:12917   */\n      0x00\n        /* \"#utility.yul\":12907:12917   */\n      swap1\n      pop\n        /* \"#utility.yul\":12918:12923   */\n      jump(tag_447)\n        /* \"#utility.yul\":12889:12925   */\n    tag_451:\n        /* \"#utility.yul\":12944:12945   */\n      0x01\n        /* \"#utility.yul\":12935:12945   */\n      swap1\n      pop\n        /* \"#utility.yul\":13167:13168   */\n      0x00\n        /* \"#utility.yul\":13161:13165   */\n      dup3\n        /* \"#utility.yul\":13157:13169   */\n      sgt\n        /* \"#utility.yul\":13183:13184   */\n      0x01\n        /* \"#utility.yul\":13178:13239   */\n      dup2\n      eq\n      tag_453\n      jumpi\n        /* \"#utility.yul\":13253:13254   */\n      0x00\n        /* \"#utility.yul\":13248:13311   */\n      dup2\n      eq\n      tag_454\n      jumpi\n        /* \"#utility.yul\":13150:13311   */\n      jump(tag_452)\n        /* \"#utility.yul\":13178:13239   */\n    tag_453:\n        /* \"#utility.yul\":13208:13212   */\n      dup3\n        /* \"#utility.yul\":13203:13206   */\n      dup7\n        /* \"#utility.yul\":13199:13213   */\n      div\n        /* \"#utility.yul\":13193:13197   */\n      dup4\n        /* \"#utility.yul\":13190:13214   */\n      gt\n        /* \"#utility.yul\":13187:13237   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":13217:13235   */\n      tag_456\n      tag_260\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13187:13237   */\n    tag_455:\n        /* \"#utility.yul\":13178:13239   */\n      jump(tag_452)\n        /* \"#utility.yul\":13248:13311   */\n    tag_454:\n        /* \"#utility.yul\":13280:13284   */\n      dup3\n        /* \"#utility.yul\":13275:13278   */\n      dup7\n        /* \"#utility.yul\":13270:13285   */\n      sdiv\n        /* \"#utility.yul\":13264:13268   */\n      dup4\n        /* \"#utility.yul\":13260:13286   */\n      slt\n        /* \"#utility.yul\":13257:13309   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":13289:13307   */\n      tag_458\n      tag_260\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13257:13309   */\n    tag_457:\n        /* \"#utility.yul\":13150:13311   */\n    tag_452:\n      pop\n        /* \"#utility.yul\":13337:13338   */\n      0x01\n        /* \"#utility.yul\":13327:13335   */\n      dup4\n        /* \"#utility.yul\":13323:13339   */\n      and\n        /* \"#utility.yul\":13320:13385   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":13371:13375   */\n      dup2\n        /* \"#utility.yul\":13362:13375   */\n      swap1\n      pop\n        /* \"#utility.yul\":13320:13385   */\n    tag_459:\n        /* \"#utility.yul\":13412:13416   */\n      dup2\n        /* \"#utility.yul\":13406:13410   */\n      dup3\n        /* \"#utility.yul\":13402:13417   */\n      mul\n        /* \"#utility.yul\":13394:13417   */\n      swap2\n      pop\n        /* \"#utility.yul\":13438:13470   */\n      tag_460\n        /* \"#utility.yul\":13461:13469   */\n      dup4\n        /* \"#utility.yul\":13438:13470   */\n      tag_287\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13426:13470   */\n      swap3\n      pop\n        /* \"#utility.yul\":13550:13596   */\n      tag_461\n        /* \"#utility.yul\":13592:13595   */\n      dup6\n        /* \"#utility.yul\":13582:13590   */\n      dup5\n        /* \"#utility.yul\":13576:13580   */\n      dup5\n        /* \"#utility.yul\":13569:13574   */\n      dup5\n        /* \"#utility.yul\":13550:13596   */\n      tag_288\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":13535:13596   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":13647:13651   */\n      dup2\n        /* \"#utility.yul\":13642:13645   */\n      dup6\n        /* \"#utility.yul\":13638:13652   */\n      div\n        /* \"#utility.yul\":13631:13636   */\n      dup2\n        /* \"#utility.yul\":13628:13653   */\n      gt\n        /* \"#utility.yul\":13624:13625   */\n      0x00\n        /* \"#utility.yul\":13617:13622   */\n      dup3\n        /* \"#utility.yul\":13613:13626   */\n      sgt\n        /* \"#utility.yul\":13609:13654   */\n      and\n        /* \"#utility.yul\":13606:13677   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":13657:13675   */\n      tag_463\n      tag_260\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":13606:13677   */\n    tag_462:\n        /* \"#utility.yul\":13729:13733   */\n      dup2\n        /* \"#utility.yul\":13724:13727   */\n      dup5\n        /* \"#utility.yul\":13719:13734   */\n      sdiv\n        /* \"#utility.yul\":13712:13717   */\n      dup2\n        /* \"#utility.yul\":13708:13735   */\n      slt\n        /* \"#utility.yul\":13704:13705   */\n      0x00\n        /* \"#utility.yul\":13697:13702   */\n      dup3\n        /* \"#utility.yul\":13693:13706   */\n      slt\n        /* \"#utility.yul\":13689:13736   */\n      and\n        /* \"#utility.yul\":13686:13759   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":13739:13757   */\n      tag_465\n      tag_260\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13686:13759   */\n    tag_464:\n        /* \"#utility.yul\":13788:13792   */\n      dup2\n        /* \"#utility.yul\":13781:13786   */\n      dup2\n        /* \"#utility.yul\":13777:13793   */\n      mul\n        /* \"#utility.yul\":13768:13793   */\n      swap1\n      pop\n        /* \"#utility.yul\":12574:13799   */\n    tag_447:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13805:14150   */\n    tag_221:\n        /* \"#utility.yul\":13862:13867   */\n      0x00\n        /* \"#utility.yul\":13886:13908   */\n      tag_467\n        /* \"#utility.yul\":13903:13907   */\n      dup3\n        /* \"#utility.yul\":13886:13908   */\n      tag_283\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13878:13908   */\n      swap2\n      pop\n        /* \"#utility.yul\":13929:13954   */\n      tag_468\n        /* \"#utility.yul\":13945:13953   */\n      dup4\n        /* \"#utility.yul\":13929:13954   */\n      tag_270\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13917:13954   */\n      swap3\n      pop\n        /* \"#utility.yul\":13973:14143   */\n      tag_469\n        /* \"#utility.yul\":14076:14142   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14008:14074   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13998:14006   */\n      dup6\n        /* \"#utility.yul\":13992:13996   */\n      dup6\n        /* \"#utility.yul\":13973:14143   */\n      tag_289\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13964:14143   */\n      swap1\n      pop\n        /* \"#utility.yul\":13805:14150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14156:14320   */\n    tag_290:\n        /* \"#utility.yul\":14296:14312   */\n      0x436f6d706c6578206e756d626572000000000000000000000000000000000000\n        /* \"#utility.yul\":14292:14293   */\n      0x00\n        /* \"#utility.yul\":14284:14290   */\n      dup3\n        /* \"#utility.yul\":14280:14294   */\n      add\n        /* \"#utility.yul\":14273:14313   */\n      mstore\n        /* \"#utility.yul\":14156:14320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14326:14692   */\n    tag_291:\n        /* \"#utility.yul\":14468:14471   */\n      0x00\n        /* \"#utility.yul\":14489:14556   */\n      tag_472\n        /* \"#utility.yul\":14553:14555   */\n      0x0e\n        /* \"#utility.yul\":14548:14551   */\n      dup4\n        /* \"#utility.yul\":14489:14556   */\n      tag_284\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14482:14556   */\n      swap2\n      pop\n        /* \"#utility.yul\":14565:14658   */\n      tag_473\n        /* \"#utility.yul\":14654:14657   */\n      dup3\n        /* \"#utility.yul\":14565:14658   */\n      tag_290\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14683:14685   */\n      0x20\n        /* \"#utility.yul\":14678:14681   */\n      dup3\n        /* \"#utility.yul\":14674:14686   */\n      add\n        /* \"#utility.yul\":14667:14686   */\n      swap1\n      pop\n        /* \"#utility.yul\":14326:14692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14698:15117   */\n    tag_225:\n        /* \"#utility.yul\":14864:14868   */\n      0x00\n        /* \"#utility.yul\":14902:14904   */\n      0x20\n        /* \"#utility.yul\":14891:14900   */\n      dup3\n        /* \"#utility.yul\":14887:14905   */\n      add\n        /* \"#utility.yul\":14879:14905   */\n      swap1\n      pop\n        /* \"#utility.yul\":14951:14960   */\n      dup2\n        /* \"#utility.yul\":14945:14949   */\n      dup2\n        /* \"#utility.yul\":14941:14961   */\n      sub\n        /* \"#utility.yul\":14937:14938   */\n      0x00\n        /* \"#utility.yul\":14926:14935   */\n      dup4\n        /* \"#utility.yul\":14922:14939   */\n      add\n        /* \"#utility.yul\":14915:14962   */\n      mstore\n        /* \"#utility.yul\":14979:15110   */\n      tag_475\n        /* \"#utility.yul\":15105:15109   */\n      dup2\n        /* \"#utility.yul\":14979:15110   */\n      tag_291\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14971:15110   */\n      swap1\n      pop\n        /* \"#utility.yul\":14698:15117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15123:15351   */\n    tag_230:\n        /* \"#utility.yul\":15158:15161   */\n      0x00\n        /* \"#utility.yul\":15181:15204   */\n      tag_477\n        /* \"#utility.yul\":15198:15203   */\n      dup3\n        /* \"#utility.yul\":15181:15204   */\n      tag_283\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":15172:15204   */\n      swap2\n      pop\n        /* \"#utility.yul\":15226:15292   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15219:15224   */\n      dup3\n        /* \"#utility.yul\":15216:15293   */\n      sub\n        /* \"#utility.yul\":15213:15316   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":15296:15314   */\n      tag_479\n      tag_260\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15213:15316   */\n    tag_478:\n        /* \"#utility.yul\":15339:15344   */\n      dup2\n        /* \"#utility.yul\":15336:15337   */\n      0x00\n        /* \"#utility.yul\":15332:15345   */\n      sub\n        /* \"#utility.yul\":15325:15345   */\n      swap1\n      pop\n        /* \"#utility.yul\":15123:15351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15357:15742   */\n    tag_233:\n        /* \"#utility.yul\":15396:15397   */\n      0x00\n        /* \"#utility.yul\":15413:15432   */\n      tag_481\n        /* \"#utility.yul\":15430:15431   */\n      dup3\n        /* \"#utility.yul\":15413:15432   */\n      tag_283\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":15408:15432   */\n      swap2\n      pop\n        /* \"#utility.yul\":15446:15465   */\n      tag_482\n        /* \"#utility.yul\":15463:15464   */\n      dup4\n        /* \"#utility.yul\":15446:15465   */\n      tag_283\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":15441:15465   */\n      swap3\n      pop\n        /* \"#utility.yul\":15484:15485   */\n      dup3\n        /* \"#utility.yul\":15474:15509   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":15489:15507   */\n      tag_484\n      tag_261\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":15474:15509   */\n    tag_483:\n        /* \"#utility.yul\":15675:15676   */\n      0x01\n        /* \"#utility.yul\":15672:15673   */\n      0x00\n        /* \"#utility.yul\":15668:15677   */\n      sub\n        /* \"#utility.yul\":15665:15666   */\n      dup4\n        /* \"#utility.yul\":15662:15678   */\n      eq\n        /* \"#utility.yul\":15581:15647   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15578:15579   */\n      dup4\n        /* \"#utility.yul\":15575:15648   */\n      eq\n        /* \"#utility.yul\":15558:15688   */\n      and\n        /* \"#utility.yul\":15555:15711   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":15691:15709   */\n      tag_486\n      tag_260\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":15555:15711   */\n    tag_485:\n        /* \"#utility.yul\":15734:15735   */\n      dup3\n        /* \"#utility.yul\":15731:15732   */\n      dup3\n        /* \"#utility.yul\":15726:15736   */\n      sdiv\n        /* \"#utility.yul\":15721:15736   */\n      swap1\n      pop\n        /* \"#utility.yul\":15357:15742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15748:15928   */\n    tag_241:\n        /* \"#utility.yul\":15796:15873   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15793:15794   */\n      0x00\n        /* \"#utility.yul\":15786:15874   */\n      mstore\n        /* \"#utility.yul\":15893:15897   */\n      0x01\n        /* \"#utility.yul\":15890:15891   */\n      0x04\n        /* \"#utility.yul\":15883:15898   */\n      mstore\n        /* \"#utility.yul\":15917:15921   */\n      0x24\n        /* \"#utility.yul\":15914:15915   */\n      0x00\n        /* \"#utility.yul\":15907:15922   */\n      revert\n\n    auxdata: 0xa26469706673582212209d27755a611b1b6c5b93708a8fca26e6041474f350fc0152ddb055a7258a8eb164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506119d88061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c80637232688e116100645780637232688e146101915780637d9ada3e146101c25780639872971a146101f2578063b49bbce514610222578063ec0a63d8146102525761009c565b80630d83825b146100a05780631e953b15146100d05780631fdd03cb1461010157806321fef8811461013157806344401a2414610161575b5f80fd5b6100ba60048036038101906100b59190611079565b610283565b6040516100c791906110cf565b60405180910390f35b6100ea60048036038101906100e591906110e8565b6102f7565b6040516100f8929190611113565b60405180910390f35b61011b600480360381019061011691906110e8565b610423565b60405161012891906110cf565b60405180910390f35b61014b60048036038101906101469190611079565b610519565b60405161015891906110cf565b60405180910390f35b61017b60048036038101906101769190611079565b61055d565b60405161018891906110cf565b60405180910390f35b6101ab60048036038101906101a691906110e8565b6105ad565b6040516101b9929190611113565b60405180910390f35b6101dc60048036038101906101d79190611079565b61078f565b6040516101e991906110cf565b60405180910390f35b61020c60048036038101906102079190611079565b6107df565b60405161021991906110cf565b60405180910390f35b61023c600480360381019061023791906110e8565b610853565b60405161024991906110cf565b60405180910390f35b61026c600480360381019061026791906110e8565b610949565b60405161027a929190611113565b60405180910390f35b5f8061028e846102f7565b9150505f61029b846102f7565b915050600282826102ac9190611167565b82620f4240670de0b6b3a7640000866102c591906111c7565b6102cf91906111f7565b6102d99190611238565b6102e391906111c7565b6102ed91906111c7565b9250505092915050565b5f805f8390508073ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610346573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036a919061136d565b8673ffffffffffffffffffffffffffffffffffffffff169650909192939450909192935090919250909150905050809250508073ffffffffffffffffffffffffffffffffffffffff16631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610409919061144f565b6fffffffffffffffffffffffffffffffff16925050915091565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610472573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610496919061148e565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016104d191906114c8565b602060405180830381865afa1580156104ec573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610510919061150b565b92505050919050565b5f8061052584846107df565b90505f6105328486610283565b9050670de0b6b3a7640000818361054991906111f7565b61055391906111c7565b9250505092915050565b5f610566610ff7565b61056f846105ad565b825f018360200182815250828152505050610589836105ad565b8260400183606001828152508281525050506105a481610b2b565b91505092915050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105fd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610621919061148e565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561066d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610691919061148e565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016106cc91906114c8565b602060405180830381865afa1580156106e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070b919061150b565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161074691906114c8565b602060405180830381865afa158015610761573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610785919061150b565b9350505050915091565b5f610798610ff7565b6107a184610949565b825f0183602001828152508281525050506107bb83610949565b8260400183606001828152508281525050506107d681610b2b565b91505092915050565b5f806107ea846102f7565b5090505f6107f7846102f7565b50905060028261080791906111c7565b816108129190611167565b81620f4240670de0b6b3a76400008561082b91906111c7565b61083591906111f7565b61083f9190611238565b61084991906111c7565b9250505092915050565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c6919061148e565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161090191906114c8565b602060405180830381865afa15801561091c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610940919061150b565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610999573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109bd919061148e565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2d919061148e565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b8152600401610a6891906114c8565b602060405180830381865afa158015610a83573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aa7919061150b565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b8152600401610ae291906114c8565b602060405180830381865afa158015610afd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b21919061150b565b9350505050915091565b5f808260200151835f015110610b45578260200151610b4a565b825f01515b90505f8360600151846040015110610b66578360600151610b6c565b83604001515b90505f818310610b7c5781610b7e565b825b90505f69d3c21bcecceda1000000821115610ba45768056bc75e2d631000009050610cce565b69152d02c7e14af6800000821115610bc657678ac7230489e800009050610ccd565b69021e19e0c9bab2400000821115610be857670de0b6b3a76400009050610ccc565b683635c9adc5dea00000821115610c095767016345785d8a00009050610ccb565b68056bc75e2d63100000821115610c2957662386f26fc100009050610cca565b678ac7230489e80000821115610c485766038d7ea4c680009050610cc9565b670de0b6b3a7640000821115610c6657655af3107a40009050610cc8565b67016345785d8a0000821115610c84576509184e72a0009050610cc7565b662386f26fc10000821115610ca05764e8d4a510009050610cc6565b66038d7ea4c68000821115610cbc5764174876e8009050610cc5565b6402540be40090505b5b5b5b5b5b5b5b5b5b5f805f80848a5f0151610ce191906111c7565b858b60400151610cf191906111c7565b868c60200151610d0191906111c7565b878d60600151610d1191906111c7565b93509350935093505f8184610d26919061153f565b8386610d32919061153f565b610d3c91906115b5565b90505f8486610d4b91906115f5565b83856002610d59919061153f565b610d63919061153f565b610d6d919061153f565b90505f8486610d7c919061153f565b8488610d88919061153f565b610d9291906115b5565b8486610d9e919061153f565b610da8919061153f565b90505f80610db7858585610e82565b915091505f82138015610dc957508682125b8015610dd457508582125b80610df457505f81138015610de857508681125b8015610df357508581125b5b610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90611690565b60405180910390fd5b5f82138015610e4157508682125b8015610e4c57508582125b610e61578981610e5c91906111f7565b610e6e565b8982610e6d91906111f7565b5b9d5050505050505050505050505050919050565b5f805f83866004610e93919061153f565b610e9d919061153f565b600286610eaa91906117f4565b610eb491906115b5565b90505f8113610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef906118a9565b60405180910390fd5b5f610f0282610f6a565b9050866002610f11919061153f565b8187610f1c906118c7565b610f2691906115f5565b610f30919061190d565b9350866002610f3f919061153f565b8187610f4a906118c7565b610f5491906115b5565b610f5e919061190d565b92505050935093915050565b5f60018211610f7c57610f7b611975565b5b5f620f424083610f8c91906111f7565b90505f8190508192505f5b600115610fdf5760028483610fac91906111c7565b85610fb79190611167565b610fc191906111c7565b90506103e88185610fd29190611238565b10610fdf57809350610f97565b6103e884610fed91906111c7565b9350505050919050565b60405180608001604052805f81526020015f81526020015f81526020015f81525090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110488261101f565b9050919050565b6110588161103e565b8114611062575f80fd5b50565b5f813590506110738161104f565b92915050565b5f806040838503121561108f5761108e61101b565b5b5f61109c85828601611065565b92505060206110ad85828601611065565b9150509250929050565b5f819050919050565b6110c9816110b7565b82525050565b5f6020820190506110e25f8301846110c0565b92915050565b5f602082840312156110fd576110fc61101b565b5b5f61110a84828501611065565b91505092915050565b5f6040820190506111265f8301856110c0565b61113360208301846110c0565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611171826110b7565b915061117c836110b7565b92508282019050808211156111945761119361113a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6111d1826110b7565b91506111dc836110b7565b9250826111ec576111eb61119a565b5b828204905092915050565b5f611201826110b7565b915061120c836110b7565b925082820261121a816110b7565b915082820484148315176112315761123061113a565b5b5092915050565b5f611242826110b7565b915061124d836110b7565b92508282039050818111156112655761126461113a565b5b92915050565b6112748161101f565b811461127e575f80fd5b50565b5f8151905061128f8161126b565b92915050565b5f8160020b9050919050565b6112aa81611295565b81146112b4575f80fd5b50565b5f815190506112c5816112a1565b92915050565b5f61ffff82169050919050565b6112e1816112cb565b81146112eb575f80fd5b50565b5f815190506112fc816112d8565b92915050565b5f60ff82169050919050565b61131781611302565b8114611321575f80fd5b50565b5f815190506113328161130e565b92915050565b5f8115159050919050565b61134c81611338565b8114611356575f80fd5b50565b5f8151905061136781611343565b92915050565b5f805f805f805f60e0888a0312156113885761138761101b565b5b5f6113958a828b01611281565b97505060206113a68a828b016112b7565b96505060406113b78a828b016112ee565b95505060606113c88a828b016112ee565b94505060806113d98a828b016112ee565b93505060a06113ea8a828b01611324565b92505060c06113fb8a828b01611359565b91505092959891949750929550565b5f6fffffffffffffffffffffffffffffffff82169050919050565b61142e8161140a565b8114611438575f80fd5b50565b5f8151905061144981611425565b92915050565b5f602082840312156114645761146361101b565b5b5f6114718482850161143b565b91505092915050565b5f815190506114888161104f565b92915050565b5f602082840312156114a3576114a261101b565b5b5f6114b08482850161147a565b91505092915050565b6114c28161103e565b82525050565b5f6020820190506114db5f8301846114b9565b92915050565b6114ea816110b7565b81146114f4575f80fd5b50565b5f81519050611505816114e1565b92915050565b5f602082840312156115205761151f61101b565b5b5f61152d848285016114f7565b91505092915050565b5f819050919050565b5f61154982611536565b915061155483611536565b925082820261156281611536565b91507f800000000000000000000000000000000000000000000000000000000000000084145f841216156115995761159861113a565b5b82820584148315176115ae576115ad61113a565b5b5092915050565b5f6115bf82611536565b91506115ca83611536565b925082820390508181125f8412168282135f8512151617156115ef576115ee61113a565b5b92915050565b5f6115ff82611536565b915061160a83611536565b92508282019050828112155f8312168382125f8412151617156116305761162f61113a565b5b92915050565b5f82825260208201905092915050565b7f57726f6e6720696e707574206f726465720000000000000000000000000000005f82015250565b5f61167a601183611636565b915061168582611646565b602082019050919050565b5f6020820190508181035f8301526116a78161166e565b9050919050565b5f8160011c9050919050565b5f808291508390505b6001851115611703578086048111156116df576116de61113a565b5b60018516156116ee5780820291505b80810290506116fc856116ae565b94506116c3565b94509492505050565b5f825f8114611722576001811461172c57611735565b60019150506117ec565b829150506117ec565b5081611743575f90506117ec565b600190505f82136001811461175e575f81146117765761178a565b8286048311156117715761177061113a565b5b61178a565b8286058312156117895761178861113a565b5b5b506001831615611798578190505b81820291506117a6836116ae565b92506117b4858484846116ba565b9250905081850481115f821316156117cf576117ce61113a565b5b81840581125f821216156117e6576117e561113a565b5b81810290505b949350505050565b5f6117fe82611536565b915061180983611302565b92506118577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f8000000000000000000000000000000000000000000000000000000000000000858561170c565b905092915050565b7f436f6d706c6578206e756d6265720000000000000000000000000000000000005f82015250565b5f611893600e83611636565b915061189e8261185f565b602082019050919050565b5f6020820190508181035f8301526118c081611887565b9050919050565b5f6118d182611536565b91507f800000000000000000000000000000000000000000000000000000000000000082036119035761190261113a565b5b815f039050919050565b5f61191782611536565b915061192283611536565b9250826119325761193161119a565b5b60015f0383147f80000000000000000000000000000000000000000000000000000000000000008314161561196a5761196961113a565b5b828205905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffdfea26469706673582212209d27755a611b1b6c5b93708a8fca26e6041474f350fc0152ddb055a7258a8eb164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D8 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7232688E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7232688E EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7D9ADA3E EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x9872971A EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xB49BBCE5 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xEC0A63D8 EQ PUSH2 0x252 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0xD83825B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x1E953B15 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x1FDD03CB EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x21FEF881 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x44401A24 EQ PUSH2 0x161 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP3 SWAP2 SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP3 SWAP2 SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0x28E DUP5 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x29B DUP5 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x2 DUP3 DUP3 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST DUP3 PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A686502 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x525 DUP5 DUP5 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x532 DUP5 DUP7 PUSH2 0x283 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP4 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x566 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x56F DUP5 PUSH2 0x5AD JUMP JUMPDEST DUP3 PUSH0 ADD DUP4 PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x589 DUP4 PUSH2 0x5AD JUMP JUMPDEST DUP3 PUSH1 0x40 ADD DUP4 PUSH1 0x60 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x5A4 DUP2 PUSH2 0xB2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x785 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x798 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x7A1 DUP5 PUSH2 0x949 JUMP JUMPDEST DUP3 PUSH0 ADD DUP4 PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x7BB DUP4 PUSH2 0x949 JUMP JUMPDEST DUP3 PUSH1 0x40 ADD DUP4 PUSH1 0x60 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x7D6 DUP2 PUSH2 0xB2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7EA DUP5 PUSH2 0x2F7 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x7F7 DUP5 PUSH2 0x2F7 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x2 DUP3 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP2 PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST DUP2 PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x901 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x940 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x999 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAFD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD LT PUSH2 0xB45 JUMPI DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xB4A JUMP JUMPDEST DUP3 PUSH0 ADD MLOAD JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD LT PUSH2 0xB66 JUMPI DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xB6C JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 LT PUSH2 0xB7C JUMPI DUP2 PUSH2 0xB7E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH10 0xD3C21BCECCEDA1000000 DUP3 GT ISZERO PUSH2 0xBA4 JUMPI PUSH9 0x56BC75E2D63100000 SWAP1 POP PUSH2 0xCCE JUMP JUMPDEST PUSH10 0x152D02C7E14AF6800000 DUP3 GT ISZERO PUSH2 0xBC6 JUMPI PUSH8 0x8AC7230489E80000 SWAP1 POP PUSH2 0xCCD JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP3 GT ISZERO PUSH2 0xBE8 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH2 0xCCC JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP3 GT ISZERO PUSH2 0xC09 JUMPI PUSH8 0x16345785D8A0000 SWAP1 POP PUSH2 0xCCB JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP3 GT ISZERO PUSH2 0xC29 JUMPI PUSH7 0x2386F26FC10000 SWAP1 POP PUSH2 0xCCA JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP3 GT ISZERO PUSH2 0xC48 JUMPI PUSH7 0x38D7EA4C68000 SWAP1 POP PUSH2 0xCC9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0xC66 JUMPI PUSH6 0x5AF3107A4000 SWAP1 POP PUSH2 0xCC8 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH2 0xC84 JUMPI PUSH6 0x9184E72A000 SWAP1 POP PUSH2 0xCC7 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 GT ISZERO PUSH2 0xCA0 JUMPI PUSH5 0xE8D4A51000 SWAP1 POP PUSH2 0xCC6 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 GT ISZERO PUSH2 0xCBC JUMPI PUSH5 0x174876E800 SWAP1 POP PUSH2 0xCC5 JUMP JUMPDEST PUSH5 0x2540BE400 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP5 DUP11 PUSH0 ADD MLOAD PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP6 DUP12 PUSH1 0x40 ADD MLOAD PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP7 DUP13 PUSH1 0x20 ADD MLOAD PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP8 DUP14 PUSH1 0x60 ADD MLOAD PUSH2 0xD11 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH0 DUP2 DUP5 PUSH2 0xD26 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST DUP4 DUP7 PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP7 PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST DUP4 DUP6 PUSH1 0x2 PUSH2 0xD59 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xD6D SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP7 PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST DUP5 DUP9 PUSH2 0xD88 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST DUP5 DUP7 PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xDB7 DUP6 DUP6 DUP6 PUSH2 0xE82 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 SGT DUP1 ISZERO PUSH2 0xDC9 JUMPI POP DUP7 DUP3 SLT JUMPDEST DUP1 ISZERO PUSH2 0xDD4 JUMPI POP DUP6 DUP3 SLT JUMPDEST DUP1 PUSH2 0xDF4 JUMPI POP PUSH0 DUP2 SGT DUP1 ISZERO PUSH2 0xDE8 JUMPI POP DUP7 DUP2 SLT JUMPDEST DUP1 ISZERO PUSH2 0xDF3 JUMPI POP DUP6 DUP2 SLT JUMPDEST JUMPDEST PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SGT DUP1 ISZERO PUSH2 0xE41 JUMPI POP DUP7 DUP3 SLT JUMPDEST DUP1 ISZERO PUSH2 0xE4C JUMPI POP DUP6 DUP3 SLT JUMPDEST PUSH2 0xE61 JUMPI DUP10 DUP2 PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0xE6E JUMP JUMPDEST DUP10 DUP3 PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP7 PUSH1 0x4 PUSH2 0xE93 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xE9D SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x2 DUP7 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x17F4 JUMP JUMPDEST PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SGT PUSH2 0xEF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEF SWAP1 PUSH2 0x18A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF02 DUP3 PUSH2 0xF6A JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x2 PUSH2 0xF11 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST DUP2 DUP8 PUSH2 0xF1C SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0xF30 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST SWAP4 POP DUP7 PUSH1 0x2 PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST DUP2 DUP8 PUSH2 0xF4A SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST SWAP3 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 GT PUSH2 0xF7C JUMPI PUSH2 0xF7B PUSH2 0x1975 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0xF4240 DUP4 PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SWAP1 POP DUP2 SWAP3 POP PUSH0 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xFDF JUMPI PUSH1 0x2 DUP5 DUP4 PUSH2 0xFAC SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP6 PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 DUP6 PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST LT PUSH2 0xFDF JUMPI DUP1 SWAP4 POP PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x3E8 DUP5 PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1048 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1058 DUP2 PUSH2 0x103E JUMP JUMPDEST DUP2 EQ PUSH2 0x1062 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1073 DUP2 PUSH2 0x104F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109C DUP6 DUP3 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10AD DUP6 DUP3 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C9 DUP2 PUSH2 0x10B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FD JUMPI PUSH2 0x10FC PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110A DUP5 DUP3 DUP6 ADD PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1126 PUSH0 DUP4 ADD DUP6 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x1133 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1171 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x117C DUP4 PUSH2 0x10B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11D1 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DC DUP4 PUSH2 0x10B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0x119A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1201 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x120C DUP4 PUSH2 0x10B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x121A DUP2 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1231 JUMPI PUSH2 0x1230 PUSH2 0x113A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1242 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x124D DUP4 PUSH2 0x10B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1265 JUMPI PUSH2 0x1264 PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1274 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x127E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x128F DUP2 PUSH2 0x126B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AA DUP2 PUSH2 0x1295 JUMP JUMPDEST DUP2 EQ PUSH2 0x12B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12C5 DUP2 PUSH2 0x12A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E1 DUP2 PUSH2 0x12CB JUMP JUMPDEST DUP2 EQ PUSH2 0x12EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12FC DUP2 PUSH2 0x12D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1317 DUP2 PUSH2 0x1302 JUMP JUMPDEST DUP2 EQ PUSH2 0x1321 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1332 DUP2 PUSH2 0x130E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134C DUP2 PUSH2 0x1338 JUMP JUMPDEST DUP2 EQ PUSH2 0x1356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1367 DUP2 PUSH2 0x1343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH2 0x1387 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1395 DUP11 DUP3 DUP12 ADD PUSH2 0x1281 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x13A6 DUP11 DUP3 DUP12 ADD PUSH2 0x12B7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x13B7 DUP11 DUP3 DUP12 ADD PUSH2 0x12EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x13C8 DUP11 DUP3 DUP12 ADD PUSH2 0x12EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x13D9 DUP11 DUP3 DUP12 ADD PUSH2 0x12EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x13EA DUP11 DUP3 DUP12 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x13FB DUP11 DUP3 DUP12 ADD PUSH2 0x1359 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142E DUP2 PUSH2 0x140A JUMP JUMPDEST DUP2 EQ PUSH2 0x1438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1449 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1464 JUMPI PUSH2 0x1463 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1471 DUP5 DUP3 DUP6 ADD PUSH2 0x143B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1488 DUP2 PUSH2 0x104F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A2 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B0 DUP5 DUP3 DUP6 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C2 DUP2 PUSH2 0x103E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DB PUSH0 DUP4 ADD DUP5 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14EA DUP2 PUSH2 0x10B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1505 DUP2 PUSH2 0x14E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1520 JUMPI PUSH2 0x151F PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152D DUP5 DUP3 DUP6 ADD PUSH2 0x14F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1549 DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x1554 DUP4 PUSH2 0x1536 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1562 DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x1599 JUMPI PUSH2 0x1598 PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x15AE JUMPI PUSH2 0x15AD PUSH2 0x113A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15BF DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CA DUP4 PUSH2 0x1536 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH0 DUP5 SLT AND DUP3 DUP3 SGT PUSH0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x15EF JUMPI PUSH2 0x15EE PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15FF DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x160A DUP4 PUSH2 0x1536 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH0 DUP4 SLT AND DUP4 DUP3 SLT PUSH0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x1630 JUMPI PUSH2 0x162F PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x57726F6E6720696E707574206F72646572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x167A PUSH1 0x11 DUP4 PUSH2 0x1636 JUMP JUMPDEST SWAP2 POP PUSH2 0x1685 DUP3 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A7 DUP2 PUSH2 0x166E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1703 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x113A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x16EE JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x16FC DUP6 PUSH2 0x16AE JUMP JUMPDEST SWAP5 POP PUSH2 0x16C3 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 DUP2 EQ PUSH2 0x1722 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x172C JUMPI PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x17EC JUMP JUMPDEST DUP3 SWAP2 POP POP PUSH2 0x17EC JUMP JUMPDEST POP DUP2 PUSH2 0x1743 JUMPI PUSH0 SWAP1 POP PUSH2 0x17EC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP PUSH0 DUP3 SGT PUSH1 0x1 DUP2 EQ PUSH2 0x175E JUMPI PUSH0 DUP2 EQ PUSH2 0x1776 JUMPI PUSH2 0x178A JUMP JUMPDEST DUP3 DUP7 DIV DUP4 GT ISZERO PUSH2 0x1771 JUMPI PUSH2 0x1770 PUSH2 0x113A JUMP JUMPDEST JUMPDEST PUSH2 0x178A JUMP JUMPDEST DUP3 DUP7 SDIV DUP4 SLT ISZERO PUSH2 0x1789 JUMPI PUSH2 0x1788 PUSH2 0x113A JUMP JUMPDEST JUMPDEST JUMPDEST POP PUSH1 0x1 DUP4 AND ISZERO PUSH2 0x1798 JUMPI DUP2 SWAP1 POP JUMPDEST DUP2 DUP3 MUL SWAP2 POP PUSH2 0x17A6 DUP4 PUSH2 0x16AE JUMP JUMPDEST SWAP3 POP PUSH2 0x17B4 DUP6 DUP5 DUP5 DUP5 PUSH2 0x16BA JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP6 DIV DUP2 GT PUSH0 DUP3 SGT AND ISZERO PUSH2 0x17CF JUMPI PUSH2 0x17CE PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP2 DUP5 SDIV DUP2 SLT PUSH0 DUP3 SLT AND ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x17E5 PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17FE DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x1809 DUP4 PUSH2 0x1302 JUMP JUMPDEST SWAP3 POP PUSH2 0x1857 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP6 DUP6 PUSH2 0x170C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D706C6578206E756D626572000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1893 PUSH1 0xE DUP4 PUSH2 0x1636 JUMP JUMPDEST SWAP2 POP PUSH2 0x189E DUP3 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18C0 DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18D1 DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1917 DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x1922 DUP4 PUSH2 0x1536 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1932 JUMPI PUSH2 0x1931 PUSH2 0x119A JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x27 PUSH22 0x5A611B1B6C5B93708A8FCA26E6041474F350FC0152DD 0xB0 SSTORE 0xA7 0x25 DUP11 DUP15 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "304:5436:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calcBorrowAmount_1225": {
									"entryPoint": 2859,
									"id": 1225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calcSolutionForQuadratic_1297": {
									"entryPoint": 3714,
									"id": 1297,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@getBorrowAmountV2_898": {
									"entryPoint": 1935,
									"id": 898,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getBorrowAmountV3_940": {
									"entryPoint": 1373,
									"id": 940,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getLiquidityAndPrice_746": {
									"entryPoint": 759,
									"id": 746,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getMaxProfitableAmount_778": {
									"entryPoint": 1305,
									"id": 778,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPriceRatio_856": {
									"entryPoint": 643,
									"id": 856,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRelativeLiquidity_816": {
									"entryPoint": 2015,
									"id": 816,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getReservesV2_1527": {
									"entryPoint": 2377,
									"id": 1527,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getReservesV3_1480": {
									"entryPoint": 1453,
									"id": 1480,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserves0_1403": {
									"entryPoint": 1059,
									"id": 1403,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@reserves1_1433": {
									"entryPoint": 2131,
									"id": 1433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sqrt_1365": {
									"entryPoint": 3946,
									"id": 1365,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 5242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128_fromMemory": {
									"entryPoint": 5179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 4846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint128_fromMemory": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 4973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4371,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 5621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5818,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_signed": {
									"entryPoint": 5900,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_exp_t_int256_t_uint8": {
									"entryPoint": 6132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 5430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 5130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 4811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 6343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6": {
									"entryPoint": 5702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf": {
									"entryPoint": 6239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 4769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15931:14",
										"nodeType": "YulBlock",
										"src": "0:15931:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "611:79:14",
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:14",
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:14",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nativeSrc": "670:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nativeSrc": "670:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nativeSrc": "641:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nativeSrc": "631:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nativeSrc": "624:43:14",
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nativeSrc": "621:63:14",
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:14",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nativeSrc": "748:87:14",
													"nodeType": "YulBlock",
													"src": "748:87:14",
													"statements": [
														{
															"nativeSrc": "758:29:14",
															"nodeType": "YulAssignment",
															"src": "758:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:14"
																},
																"nativeSrc": "767:20:14",
																"nodeType": "YulFunctionCall",
																"src": "767:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:14"
																},
																"nativeSrc": "796:33:14",
																"nodeType": "YulFunctionCall",
																"src": "796:33:14"
															},
															"nativeSrc": "796:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:14",
														"nodeType": "YulTypedName",
														"src": "726:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:14",
														"nodeType": "YulTypedName",
														"src": "734:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:14",
														"nodeType": "YulTypedName",
														"src": "742:5:14",
														"type": ""
													}
												],
												"src": "696:139:14"
											},
											{
												"body": {
													"nativeSrc": "924:391:14",
													"nodeType": "YulBlock",
													"src": "924:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "970:83:14",
																"nodeType": "YulBlock",
																"src": "970:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "972:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "972:77:14"
																			},
																			"nativeSrc": "972:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "972:79:14"
																		},
																		"nativeSrc": "972:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "972:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "945:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "945:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "954:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "954:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "941:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:14"
																		},
																		"nativeSrc": "941:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "941:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "966:2:14",
																		"nodeType": "YulLiteral",
																		"src": "966:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "937:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:14"
																},
																"nativeSrc": "937:32:14",
																"nodeType": "YulFunctionCall",
																"src": "937:32:14"
															},
															"nativeSrc": "934:119:14",
															"nodeType": "YulIf",
															"src": "934:119:14"
														},
														{
															"nativeSrc": "1063:117:14",
															"nodeType": "YulBlock",
															"src": "1063:117:14",
															"statements": [
																{
																	"nativeSrc": "1078:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1078:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1092:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1092:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1082:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1082:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1107:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1107:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1142:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1142:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1153:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1153:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1138:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:14"
																				},
																				"nativeSrc": "1138:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1138:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1162:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1117:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1117:20:14"
																		},
																		"nativeSrc": "1117:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1107:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1107:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1190:118:14",
															"nodeType": "YulBlock",
															"src": "1190:118:14",
															"statements": [
																{
																	"nativeSrc": "1205:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1205:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1219:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1209:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1209:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1235:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1235:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1270:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1270:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1281:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1281:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1266:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1266:3:14"
																				},
																				"nativeSrc": "1266:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1266:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1290:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1290:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1245:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1245:20:14"
																		},
																		"nativeSrc": "1245:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1245:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1235:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1235:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "841:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "886:9:14",
														"nodeType": "YulTypedName",
														"src": "886:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "897:7:14",
														"nodeType": "YulTypedName",
														"src": "897:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "909:6:14",
														"nodeType": "YulTypedName",
														"src": "909:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "917:6:14",
														"nodeType": "YulTypedName",
														"src": "917:6:14",
														"type": ""
													}
												],
												"src": "841:474:14"
											},
											{
												"body": {
													"nativeSrc": "1366:32:14",
													"nodeType": "YulBlock",
													"src": "1366:32:14",
													"statements": [
														{
															"nativeSrc": "1376:16:14",
															"nodeType": "YulAssignment",
															"src": "1376:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "1387:5:14",
																"nodeType": "YulIdentifier",
																"src": "1387:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1376:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1376:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1321:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1348:5:14",
														"nodeType": "YulTypedName",
														"src": "1348:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1358:7:14",
														"nodeType": "YulTypedName",
														"src": "1358:7:14",
														"type": ""
													}
												],
												"src": "1321:77:14"
											},
											{
												"body": {
													"nativeSrc": "1469:53:14",
													"nodeType": "YulBlock",
													"src": "1469:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1486:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1486:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1509:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1509:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1491:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "1491:17:14"
																		},
																		"nativeSrc": "1491:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1491:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1479:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1479:6:14"
																},
																"nativeSrc": "1479:37:14",
																"nodeType": "YulFunctionCall",
																"src": "1479:37:14"
															},
															"nativeSrc": "1479:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "1479:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1404:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1457:5:14",
														"nodeType": "YulTypedName",
														"src": "1457:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1464:3:14",
														"nodeType": "YulTypedName",
														"src": "1464:3:14",
														"type": ""
													}
												],
												"src": "1404:118:14"
											},
											{
												"body": {
													"nativeSrc": "1626:124:14",
													"nodeType": "YulBlock",
													"src": "1626:124:14",
													"statements": [
														{
															"nativeSrc": "1636:26:14",
															"nodeType": "YulAssignment",
															"src": "1636:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1648:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1648:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1659:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1659:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1644:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1644:3:14"
																},
																"nativeSrc": "1644:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1644:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1636:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1636:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1716:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1716:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1729:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1729:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1740:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1740:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1725:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1725:3:14"
																		},
																		"nativeSrc": "1725:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1725:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1672:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "1672:43:14"
																},
																"nativeSrc": "1672:71:14",
																"nodeType": "YulFunctionCall",
																"src": "1672:71:14"
															},
															"nativeSrc": "1672:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "1672:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1528:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1598:9:14",
														"nodeType": "YulTypedName",
														"src": "1598:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1610:6:14",
														"nodeType": "YulTypedName",
														"src": "1610:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1621:4:14",
														"nodeType": "YulTypedName",
														"src": "1621:4:14",
														"type": ""
													}
												],
												"src": "1528:222:14"
											},
											{
												"body": {
													"nativeSrc": "1822:263:14",
													"nodeType": "YulBlock",
													"src": "1822:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1868:83:14",
																"nodeType": "YulBlock",
																"src": "1868:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1870:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1870:77:14"
																			},
																			"nativeSrc": "1870:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1870:79:14"
																		},
																		"nativeSrc": "1870:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1870:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1852:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1852:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1839:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1839:3:14"
																		},
																		"nativeSrc": "1839:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1839:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1864:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1835:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1835:3:14"
																},
																"nativeSrc": "1835:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1835:32:14"
															},
															"nativeSrc": "1832:119:14",
															"nodeType": "YulIf",
															"src": "1832:119:14"
														},
														{
															"nativeSrc": "1961:117:14",
															"nodeType": "YulBlock",
															"src": "1961:117:14",
															"statements": [
																{
																	"nativeSrc": "1976:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1976:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1990:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1980:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1980:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2005:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2005:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2040:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2040:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2051:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2036:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2036:3:14"
																				},
																				"nativeSrc": "2036:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2060:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2015:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2015:20:14"
																		},
																		"nativeSrc": "2015:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2005:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2005:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1756:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1792:9:14",
														"nodeType": "YulTypedName",
														"src": "1792:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1803:7:14",
														"nodeType": "YulTypedName",
														"src": "1803:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1815:6:14",
														"nodeType": "YulTypedName",
														"src": "1815:6:14",
														"type": ""
													}
												],
												"src": "1756:329:14"
											},
											{
												"body": {
													"nativeSrc": "2217:206:14",
													"nodeType": "YulBlock",
													"src": "2217:206:14",
													"statements": [
														{
															"nativeSrc": "2227:26:14",
															"nodeType": "YulAssignment",
															"src": "2227:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2239:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2239:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2250:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2235:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2235:3:14"
																},
																"nativeSrc": "2235:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2235:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2227:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2227:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2307:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2307:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2320:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2320:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2331:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2331:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2316:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2316:3:14"
																		},
																		"nativeSrc": "2316:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2316:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2263:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2263:43:14"
																},
																"nativeSrc": "2263:71:14",
																"nodeType": "YulFunctionCall",
																"src": "2263:71:14"
															},
															"nativeSrc": "2263:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "2263:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2388:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2388:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2412:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2412:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2397:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2397:3:14"
																		},
																		"nativeSrc": "2397:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2344:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2344:43:14"
																},
																"nativeSrc": "2344:72:14",
																"nodeType": "YulFunctionCall",
																"src": "2344:72:14"
															},
															"nativeSrc": "2344:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "2344:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2091:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2181:9:14",
														"nodeType": "YulTypedName",
														"src": "2181:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2193:6:14",
														"nodeType": "YulTypedName",
														"src": "2193:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2201:6:14",
														"nodeType": "YulTypedName",
														"src": "2201:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2212:4:14",
														"nodeType": "YulTypedName",
														"src": "2212:4:14",
														"type": ""
													}
												],
												"src": "2091:332:14"
											},
											{
												"body": {
													"nativeSrc": "2457:152:14",
													"nodeType": "YulBlock",
													"src": "2457:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2474:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2474:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2477:77:14",
																		"nodeType": "YulLiteral",
																		"src": "2477:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2467:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:14"
																},
																"nativeSrc": "2467:88:14",
																"nodeType": "YulFunctionCall",
																"src": "2467:88:14"
															},
															"nativeSrc": "2467:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "2467:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2571:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2571:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2574:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2574:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2564:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:14"
																},
																"nativeSrc": "2564:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2564:15:14"
															},
															"nativeSrc": "2564:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2564:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2595:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2595:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2598:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2598:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2588:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:14"
																},
																"nativeSrc": "2588:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2588:15:14"
															},
															"nativeSrc": "2588:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2588:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2429:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2429:180:14"
											},
											{
												"body": {
													"nativeSrc": "2659:147:14",
													"nodeType": "YulBlock",
													"src": "2659:147:14",
													"statements": [
														{
															"nativeSrc": "2669:25:14",
															"nodeType": "YulAssignment",
															"src": "2669:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2692:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2692:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2674:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2674:17:14"
																},
																"nativeSrc": "2674:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2674:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2669:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "2669:1:14"
																}
															]
														},
														{
															"nativeSrc": "2703:25:14",
															"nodeType": "YulAssignment",
															"src": "2703:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2726:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2726:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2708:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2708:17:14"
																},
																"nativeSrc": "2708:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2708:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2703:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "2703:1:14"
																}
															]
														},
														{
															"nativeSrc": "2737:16:14",
															"nodeType": "YulAssignment",
															"src": "2737:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2748:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2748:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2751:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2751:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2744:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2744:3:14"
																},
																"nativeSrc": "2744:9:14",
																"nodeType": "YulFunctionCall",
																"src": "2744:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2737:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2737:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2777:22:14",
																"nodeType": "YulBlock",
																"src": "2777:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2779:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "2779:16:14"
																			},
																			"nativeSrc": "2779:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2779:18:14"
																		},
																		"nativeSrc": "2779:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2779:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2769:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2769:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2772:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2772:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2766:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2766:2:14"
																},
																"nativeSrc": "2766:10:14",
																"nodeType": "YulFunctionCall",
																"src": "2766:10:14"
															},
															"nativeSrc": "2763:36:14",
															"nodeType": "YulIf",
															"src": "2763:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2615:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2646:1:14",
														"nodeType": "YulTypedName",
														"src": "2646:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2649:1:14",
														"nodeType": "YulTypedName",
														"src": "2649:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2655:3:14",
														"nodeType": "YulTypedName",
														"src": "2655:3:14",
														"type": ""
													}
												],
												"src": "2615:191:14"
											},
											{
												"body": {
													"nativeSrc": "2840:152:14",
													"nodeType": "YulBlock",
													"src": "2840:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2857:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2857:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2860:77:14",
																		"nodeType": "YulLiteral",
																		"src": "2860:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2850:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2850:6:14"
																},
																"nativeSrc": "2850:88:14",
																"nodeType": "YulFunctionCall",
																"src": "2850:88:14"
															},
															"nativeSrc": "2850:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "2850:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2954:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2954:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2957:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2957:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2947:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2947:6:14"
																},
																"nativeSrc": "2947:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2947:15:14"
															},
															"nativeSrc": "2947:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2947:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2978:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2978:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2981:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2981:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2971:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2971:6:14"
																},
																"nativeSrc": "2971:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2971:15:14"
															},
															"nativeSrc": "2971:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2971:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "2812:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2812:180:14"
											},
											{
												"body": {
													"nativeSrc": "3040:143:14",
													"nodeType": "YulBlock",
													"src": "3040:143:14",
													"statements": [
														{
															"nativeSrc": "3050:25:14",
															"nodeType": "YulAssignment",
															"src": "3050:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3073:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3073:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3055:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3055:17:14"
																},
																"nativeSrc": "3055:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3055:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3050:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "3050:1:14"
																}
															]
														},
														{
															"nativeSrc": "3084:25:14",
															"nodeType": "YulAssignment",
															"src": "3084:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3107:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3107:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3089:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3089:17:14"
																},
																"nativeSrc": "3089:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3089:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3084:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "3084:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3131:22:14",
																"nodeType": "YulBlock",
																"src": "3131:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "3133:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "3133:16:14"
																			},
																			"nativeSrc": "3133:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:18:14"
																		},
																		"nativeSrc": "3133:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3128:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3128:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3121:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3121:6:14"
																},
																"nativeSrc": "3121:9:14",
																"nodeType": "YulFunctionCall",
																"src": "3121:9:14"
															},
															"nativeSrc": "3118:35:14",
															"nodeType": "YulIf",
															"src": "3118:35:14"
														},
														{
															"nativeSrc": "3163:14:14",
															"nodeType": "YulAssignment",
															"src": "3163:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3172:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3172:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3175:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3175:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3168:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3168:3:14"
																},
																"nativeSrc": "3168:9:14",
																"nodeType": "YulFunctionCall",
																"src": "3168:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3163:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "3163:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2998:185:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3029:1:14",
														"nodeType": "YulTypedName",
														"src": "3029:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3032:1:14",
														"nodeType": "YulTypedName",
														"src": "3032:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3038:1:14",
														"nodeType": "YulTypedName",
														"src": "3038:1:14",
														"type": ""
													}
												],
												"src": "2998:185:14"
											},
											{
												"body": {
													"nativeSrc": "3237:362:14",
													"nodeType": "YulBlock",
													"src": "3237:362:14",
													"statements": [
														{
															"nativeSrc": "3247:25:14",
															"nodeType": "YulAssignment",
															"src": "3247:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3270:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3270:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3252:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3252:17:14"
																},
																"nativeSrc": "3252:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3252:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3247:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "3247:1:14"
																}
															]
														},
														{
															"nativeSrc": "3281:25:14",
															"nodeType": "YulAssignment",
															"src": "3281:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3304:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3304:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3286:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3286:17:14"
																},
																"nativeSrc": "3286:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3286:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3281:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "3281:1:14"
																}
															]
														},
														{
															"nativeSrc": "3315:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3315:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3338:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3338:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3341:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3341:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3334:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3334:3:14"
																},
																"nativeSrc": "3334:9:14",
																"nodeType": "YulFunctionCall",
																"src": "3334:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3319:11:14",
																	"nodeType": "YulTypedName",
																	"src": "3319:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3352:41:14",
															"nodeType": "YulAssignment",
															"src": "3352:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3381:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "3381:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3363:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3363:17:14"
																},
																"nativeSrc": "3363:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3363:30:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3352:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3352:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3570:22:14",
																"nodeType": "YulBlock",
																"src": "3570:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3572:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "3572:16:14"
																			},
																			"nativeSrc": "3572:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3572:18:14"
																		},
																		"nativeSrc": "3572:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3572:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3503:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "3503:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3496:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "3496:6:14"
																				},
																				"nativeSrc": "3496:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3526:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "3526:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3533:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "3533:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3542:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "3542:1:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3529:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3529:3:14"
																						},
																						"nativeSrc": "3529:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "3529:15:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3523:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "3523:2:14"
																				},
																				"nativeSrc": "3523:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:22:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3476:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3476:2:14"
																		},
																		"nativeSrc": "3476:83:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3476:83:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3456:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3456:6:14"
																},
																"nativeSrc": "3456:113:14",
																"nodeType": "YulFunctionCall",
																"src": "3456:113:14"
															},
															"nativeSrc": "3453:139:14",
															"nodeType": "YulIf",
															"src": "3453:139:14"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3189:410:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3220:1:14",
														"nodeType": "YulTypedName",
														"src": "3220:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3223:1:14",
														"nodeType": "YulTypedName",
														"src": "3223:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3229:7:14",
														"nodeType": "YulTypedName",
														"src": "3229:7:14",
														"type": ""
													}
												],
												"src": "3189:410:14"
											},
											{
												"body": {
													"nativeSrc": "3650:149:14",
													"nodeType": "YulBlock",
													"src": "3650:149:14",
													"statements": [
														{
															"nativeSrc": "3660:25:14",
															"nodeType": "YulAssignment",
															"src": "3660:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3683:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3683:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3665:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3665:17:14"
																},
																"nativeSrc": "3665:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3665:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3660:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "3660:1:14"
																}
															]
														},
														{
															"nativeSrc": "3694:25:14",
															"nodeType": "YulAssignment",
															"src": "3694:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3717:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3717:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3699:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3699:17:14"
																},
																"nativeSrc": "3699:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3699:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3694:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "3694:1:14"
																}
															]
														},
														{
															"nativeSrc": "3728:17:14",
															"nodeType": "YulAssignment",
															"src": "3728:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3740:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3740:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3743:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3743:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3736:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:14"
																},
																"nativeSrc": "3736:9:14",
																"nodeType": "YulFunctionCall",
																"src": "3736:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3728:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3728:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3770:22:14",
																"nodeType": "YulBlock",
																"src": "3770:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3772:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "3772:16:14"
																			},
																			"nativeSrc": "3772:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3772:18:14"
																		},
																		"nativeSrc": "3772:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3772:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3761:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3761:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3767:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3767:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3758:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3758:2:14"
																},
																"nativeSrc": "3758:11:14",
																"nodeType": "YulFunctionCall",
																"src": "3758:11:14"
															},
															"nativeSrc": "3755:37:14",
															"nodeType": "YulIf",
															"src": "3755:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3605:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3636:1:14",
														"nodeType": "YulTypedName",
														"src": "3636:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3639:1:14",
														"nodeType": "YulTypedName",
														"src": "3639:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3645:4:14",
														"nodeType": "YulTypedName",
														"src": "3645:4:14",
														"type": ""
													}
												],
												"src": "3605:194:14"
											},
											{
												"body": {
													"nativeSrc": "3848:79:14",
													"nodeType": "YulBlock",
													"src": "3848:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3905:16:14",
																"nodeType": "YulBlock",
																"src": "3905:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3914:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3914:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3917:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3917:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3907:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3907:6:14"
																			},
																			"nativeSrc": "3907:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3907:12:14"
																		},
																		"nativeSrc": "3907:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3907:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3871:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3871:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3896:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3896:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3878:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3878:17:14"
																				},
																				"nativeSrc": "3878:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3878:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3868:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3868:2:14"
																		},
																		"nativeSrc": "3868:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3868:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3861:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3861:6:14"
																},
																"nativeSrc": "3861:43:14",
																"nodeType": "YulFunctionCall",
																"src": "3861:43:14"
															},
															"nativeSrc": "3858:63:14",
															"nodeType": "YulIf",
															"src": "3858:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "3805:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3841:5:14",
														"nodeType": "YulTypedName",
														"src": "3841:5:14",
														"type": ""
													}
												],
												"src": "3805:122:14"
											},
											{
												"body": {
													"nativeSrc": "3996:80:14",
													"nodeType": "YulBlock",
													"src": "3996:80:14",
													"statements": [
														{
															"nativeSrc": "4006:22:14",
															"nodeType": "YulAssignment",
															"src": "4006:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4021:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4021:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4015:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4015:5:14"
																},
																"nativeSrc": "4015:13:14",
																"nodeType": "YulFunctionCall",
																"src": "4015:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4006:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4006:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4064:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4064:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "4037:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "4037:26:14"
																},
																"nativeSrc": "4037:33:14",
																"nodeType": "YulFunctionCall",
																"src": "4037:33:14"
															},
															"nativeSrc": "4037:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "4037:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "3933:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3974:6:14",
														"nodeType": "YulTypedName",
														"src": "3974:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3982:3:14",
														"nodeType": "YulTypedName",
														"src": "3982:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3990:5:14",
														"nodeType": "YulTypedName",
														"src": "3990:5:14",
														"type": ""
													}
												],
												"src": "3933:143:14"
											},
											{
												"body": {
													"nativeSrc": "4125:47:14",
													"nodeType": "YulBlock",
													"src": "4125:47:14",
													"statements": [
														{
															"nativeSrc": "4135:31:14",
															"nodeType": "YulAssignment",
															"src": "4135:31:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4157:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4157:1:14",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4160:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4160:5:14"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "4146:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "4146:10:14"
																},
																"nativeSrc": "4146:20:14",
																"nodeType": "YulFunctionCall",
																"src": "4146:20:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4135:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4135:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "4082:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4107:5:14",
														"nodeType": "YulTypedName",
														"src": "4107:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4117:7:14",
														"nodeType": "YulTypedName",
														"src": "4117:7:14",
														"type": ""
													}
												],
												"src": "4082:90:14"
											},
											{
												"body": {
													"nativeSrc": "4219:77:14",
													"nodeType": "YulBlock",
													"src": "4219:77:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4274:16:14",
																"nodeType": "YulBlock",
																"src": "4274:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4283:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4283:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4286:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4286:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4276:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4276:6:14"
																			},
																			"nativeSrc": "4276:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4276:12:14"
																		},
																		"nativeSrc": "4276:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4276:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4242:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4242:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4265:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4265:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "4249:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "4249:15:14"
																				},
																				"nativeSrc": "4249:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4249:22:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4239:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4239:2:14"
																		},
																		"nativeSrc": "4239:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4239:33:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4232:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4232:6:14"
																},
																"nativeSrc": "4232:41:14",
																"nodeType": "YulFunctionCall",
																"src": "4232:41:14"
															},
															"nativeSrc": "4229:61:14",
															"nodeType": "YulIf",
															"src": "4229:61:14"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "4178:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4212:5:14",
														"nodeType": "YulTypedName",
														"src": "4212:5:14",
														"type": ""
													}
												],
												"src": "4178:118:14"
											},
											{
												"body": {
													"nativeSrc": "4363:78:14",
													"nodeType": "YulBlock",
													"src": "4363:78:14",
													"statements": [
														{
															"nativeSrc": "4373:22:14",
															"nodeType": "YulAssignment",
															"src": "4373:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4388:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4388:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4382:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4382:5:14"
																},
																"nativeSrc": "4382:13:14",
																"nodeType": "YulFunctionCall",
																"src": "4382:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4373:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4373:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4429:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4429:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "4404:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "4404:24:14"
																},
																"nativeSrc": "4404:31:14",
																"nodeType": "YulFunctionCall",
																"src": "4404:31:14"
															},
															"nativeSrc": "4404:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "4404:31:14"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "4302:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4341:6:14",
														"nodeType": "YulTypedName",
														"src": "4341:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4349:3:14",
														"nodeType": "YulTypedName",
														"src": "4349:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4357:5:14",
														"nodeType": "YulTypedName",
														"src": "4357:5:14",
														"type": ""
													}
												],
												"src": "4302:139:14"
											},
											{
												"body": {
													"nativeSrc": "4491:45:14",
													"nodeType": "YulBlock",
													"src": "4491:45:14",
													"statements": [
														{
															"nativeSrc": "4501:29:14",
															"nodeType": "YulAssignment",
															"src": "4501:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4516:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4516:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4523:6:14",
																		"nodeType": "YulLiteral",
																		"src": "4523:6:14",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4512:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4512:3:14"
																},
																"nativeSrc": "4512:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4512:18:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4501:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4501:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "4447:89:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4473:5:14",
														"nodeType": "YulTypedName",
														"src": "4473:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4483:7:14",
														"nodeType": "YulTypedName",
														"src": "4483:7:14",
														"type": ""
													}
												],
												"src": "4447:89:14"
											},
											{
												"body": {
													"nativeSrc": "4584:78:14",
													"nodeType": "YulBlock",
													"src": "4584:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4640:16:14",
																"nodeType": "YulBlock",
																"src": "4640:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4649:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4649:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4652:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4652:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4642:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4642:6:14"
																			},
																			"nativeSrc": "4642:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4642:12:14"
																		},
																		"nativeSrc": "4642:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4642:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4607:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4607:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4631:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4631:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "4614:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "4614:16:14"
																				},
																				"nativeSrc": "4614:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4614:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4604:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4604:2:14"
																		},
																		"nativeSrc": "4604:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4604:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4597:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4597:6:14"
																},
																"nativeSrc": "4597:42:14",
																"nodeType": "YulFunctionCall",
																"src": "4597:42:14"
															},
															"nativeSrc": "4594:62:14",
															"nodeType": "YulIf",
															"src": "4594:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "4542:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4577:5:14",
														"nodeType": "YulTypedName",
														"src": "4577:5:14",
														"type": ""
													}
												],
												"src": "4542:120:14"
											},
											{
												"body": {
													"nativeSrc": "4730:79:14",
													"nodeType": "YulBlock",
													"src": "4730:79:14",
													"statements": [
														{
															"nativeSrc": "4740:22:14",
															"nodeType": "YulAssignment",
															"src": "4740:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4755:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4755:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4749:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4749:5:14"
																},
																"nativeSrc": "4749:13:14",
																"nodeType": "YulFunctionCall",
																"src": "4749:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4740:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4740:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4797:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4797:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "4771:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "4771:25:14"
																},
																"nativeSrc": "4771:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4771:32:14"
															},
															"nativeSrc": "4771:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "4771:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "4668:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4708:6:14",
														"nodeType": "YulTypedName",
														"src": "4708:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4716:3:14",
														"nodeType": "YulTypedName",
														"src": "4716:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4724:5:14",
														"nodeType": "YulTypedName",
														"src": "4724:5:14",
														"type": ""
													}
												],
												"src": "4668:141:14"
											},
											{
												"body": {
													"nativeSrc": "4858:43:14",
													"nodeType": "YulBlock",
													"src": "4858:43:14",
													"statements": [
														{
															"nativeSrc": "4868:27:14",
															"nodeType": "YulAssignment",
															"src": "4868:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4883:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4883:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4890:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4890:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4879:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4879:3:14"
																},
																"nativeSrc": "4879:16:14",
																"nodeType": "YulFunctionCall",
																"src": "4879:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4868:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4868:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4815:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4840:5:14",
														"nodeType": "YulTypedName",
														"src": "4840:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4850:7:14",
														"nodeType": "YulTypedName",
														"src": "4850:7:14",
														"type": ""
													}
												],
												"src": "4815:86:14"
											},
											{
												"body": {
													"nativeSrc": "4948:77:14",
													"nodeType": "YulBlock",
													"src": "4948:77:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5003:16:14",
																"nodeType": "YulBlock",
																"src": "5003:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5012:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5012:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5015:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5015:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5005:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5005:6:14"
																			},
																			"nativeSrc": "5005:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5005:12:14"
																		},
																		"nativeSrc": "5005:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5005:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4971:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4971:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4994:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4994:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "4978:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "4978:15:14"
																				},
																				"nativeSrc": "4978:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4978:22:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4968:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4968:2:14"
																		},
																		"nativeSrc": "4968:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4968:33:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4961:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4961:6:14"
																},
																"nativeSrc": "4961:41:14",
																"nodeType": "YulFunctionCall",
																"src": "4961:41:14"
															},
															"nativeSrc": "4958:61:14",
															"nodeType": "YulIf",
															"src": "4958:61:14"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "4907:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4941:5:14",
														"nodeType": "YulTypedName",
														"src": "4941:5:14",
														"type": ""
													}
												],
												"src": "4907:118:14"
											},
											{
												"body": {
													"nativeSrc": "5092:78:14",
													"nodeType": "YulBlock",
													"src": "5092:78:14",
													"statements": [
														{
															"nativeSrc": "5102:22:14",
															"nodeType": "YulAssignment",
															"src": "5102:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5117:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5117:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5111:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5111:5:14"
																},
																"nativeSrc": "5111:13:14",
																"nodeType": "YulFunctionCall",
																"src": "5111:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5102:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5102:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5158:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5158:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "5133:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "5133:24:14"
																},
																"nativeSrc": "5133:31:14",
																"nodeType": "YulFunctionCall",
																"src": "5133:31:14"
															},
															"nativeSrc": "5133:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "5133:31:14"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "5031:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5070:6:14",
														"nodeType": "YulTypedName",
														"src": "5070:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5078:3:14",
														"nodeType": "YulTypedName",
														"src": "5078:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5086:5:14",
														"nodeType": "YulTypedName",
														"src": "5086:5:14",
														"type": ""
													}
												],
												"src": "5031:139:14"
											},
											{
												"body": {
													"nativeSrc": "5218:48:14",
													"nodeType": "YulBlock",
													"src": "5218:48:14",
													"statements": [
														{
															"nativeSrc": "5228:32:14",
															"nodeType": "YulAssignment",
															"src": "5228:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5253:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5253:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5246:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5246:6:14"
																		},
																		"nativeSrc": "5246:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5246:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5239:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:14"
																},
																"nativeSrc": "5239:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5239:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5228:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5228:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5176:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5200:5:14",
														"nodeType": "YulTypedName",
														"src": "5200:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5210:7:14",
														"nodeType": "YulTypedName",
														"src": "5210:7:14",
														"type": ""
													}
												],
												"src": "5176:90:14"
											},
											{
												"body": {
													"nativeSrc": "5312:76:14",
													"nodeType": "YulBlock",
													"src": "5312:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5366:16:14",
																"nodeType": "YulBlock",
																"src": "5366:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5375:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5375:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5378:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5378:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5368:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5368:6:14"
																			},
																			"nativeSrc": "5368:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5368:12:14"
																		},
																		"nativeSrc": "5368:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5368:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5335:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5335:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5357:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5357:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5342:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "5342:14:14"
																				},
																				"nativeSrc": "5342:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5342:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5332:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5332:2:14"
																		},
																		"nativeSrc": "5332:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5325:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5325:6:14"
																},
																"nativeSrc": "5325:40:14",
																"nodeType": "YulFunctionCall",
																"src": "5325:40:14"
															},
															"nativeSrc": "5322:60:14",
															"nodeType": "YulIf",
															"src": "5322:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5272:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5305:5:14",
														"nodeType": "YulTypedName",
														"src": "5305:5:14",
														"type": ""
													}
												],
												"src": "5272:116:14"
											},
											{
												"body": {
													"nativeSrc": "5454:77:14",
													"nodeType": "YulBlock",
													"src": "5454:77:14",
													"statements": [
														{
															"nativeSrc": "5464:22:14",
															"nodeType": "YulAssignment",
															"src": "5464:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5479:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5479:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5473:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5473:5:14"
																},
																"nativeSrc": "5473:13:14",
																"nodeType": "YulFunctionCall",
																"src": "5473:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5464:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5464:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5519:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5519:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5495:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "5495:23:14"
																},
																"nativeSrc": "5495:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5495:30:14"
															},
															"nativeSrc": "5495:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "5495:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5394:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5432:6:14",
														"nodeType": "YulTypedName",
														"src": "5432:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5440:3:14",
														"nodeType": "YulTypedName",
														"src": "5440:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5448:5:14",
														"nodeType": "YulTypedName",
														"src": "5448:5:14",
														"type": ""
													}
												],
												"src": "5394:137:14"
											},
											{
												"body": {
													"nativeSrc": "5706:1102:14",
													"nodeType": "YulBlock",
													"src": "5706:1102:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5753:83:14",
																"nodeType": "YulBlock",
																"src": "5753:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5755:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5755:77:14"
																			},
																			"nativeSrc": "5755:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5755:79:14"
																		},
																		"nativeSrc": "5755:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5755:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5727:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5727:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5736:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5736:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5723:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5723:3:14"
																		},
																		"nativeSrc": "5723:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5723:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5748:3:14",
																		"nodeType": "YulLiteral",
																		"src": "5748:3:14",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5719:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5719:3:14"
																},
																"nativeSrc": "5719:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5719:33:14"
															},
															"nativeSrc": "5716:120:14",
															"nodeType": "YulIf",
															"src": "5716:120:14"
														},
														{
															"nativeSrc": "5846:128:14",
															"nodeType": "YulBlock",
															"src": "5846:128:14",
															"statements": [
																{
																	"nativeSrc": "5861:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5861:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5875:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5865:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5865:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5890:74:14",
																	"nodeType": "YulAssignment",
																	"src": "5890:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5936:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5936:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5947:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5947:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5932:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5932:3:14"
																				},
																				"nativeSrc": "5932:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5932:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5956:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5956:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "5900:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "5900:31:14"
																		},
																		"nativeSrc": "5900:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5900:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5890:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5890:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5984:127:14",
															"nodeType": "YulBlock",
															"src": "5984:127:14",
															"statements": [
																{
																	"nativeSrc": "5999:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5999:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6013:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6013:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6003:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6003:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6029:72:14",
																	"nodeType": "YulAssignment",
																	"src": "6029:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6073:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6073:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6084:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6084:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6069:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6069:3:14"
																				},
																				"nativeSrc": "6069:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6069:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6093:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6093:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "6039:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "6039:29:14"
																		},
																		"nativeSrc": "6039:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6039:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6029:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6029:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6121:128:14",
															"nodeType": "YulBlock",
															"src": "6121:128:14",
															"statements": [
																{
																	"nativeSrc": "6136:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6136:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6150:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6150:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6140:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6140:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6166:73:14",
																	"nodeType": "YulAssignment",
																	"src": "6166:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6211:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6211:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6222:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6222:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6207:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6207:3:14"
																				},
																				"nativeSrc": "6207:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6207:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6231:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6231:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "6176:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "6176:30:14"
																		},
																		"nativeSrc": "6176:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6176:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6166:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6166:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6259:128:14",
															"nodeType": "YulBlock",
															"src": "6259:128:14",
															"statements": [
																{
																	"nativeSrc": "6274:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6274:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6288:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6288:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6278:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6278:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6304:73:14",
																	"nodeType": "YulAssignment",
																	"src": "6304:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6349:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6349:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6360:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6360:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6345:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6345:3:14"
																				},
																				"nativeSrc": "6345:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6345:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6369:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6369:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "6314:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "6314:30:14"
																		},
																		"nativeSrc": "6314:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6314:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "6304:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6304:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6397:129:14",
															"nodeType": "YulBlock",
															"src": "6397:129:14",
															"statements": [
																{
																	"nativeSrc": "6412:17:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6412:17:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6426:3:14",
																		"nodeType": "YulLiteral",
																		"src": "6426:3:14",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6416:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6416:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6443:73:14",
																	"nodeType": "YulAssignment",
																	"src": "6443:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6488:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6488:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6499:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6499:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6484:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6484:3:14"
																				},
																				"nativeSrc": "6484:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6484:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6508:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6508:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "6453:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "6453:30:14"
																		},
																		"nativeSrc": "6453:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "6443:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6443:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6536:128:14",
															"nodeType": "YulBlock",
															"src": "6536:128:14",
															"statements": [
																{
																	"nativeSrc": "6551:17:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6551:17:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6565:3:14",
																		"nodeType": "YulLiteral",
																		"src": "6565:3:14",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6555:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6555:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6582:72:14",
																	"nodeType": "YulAssignment",
																	"src": "6582:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6626:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6626:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6637:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6637:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6622:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6622:3:14"
																				},
																				"nativeSrc": "6622:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6622:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6646:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6646:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "6592:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "6592:29:14"
																		},
																		"nativeSrc": "6592:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6592:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "6582:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6582:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6674:127:14",
															"nodeType": "YulBlock",
															"src": "6674:127:14",
															"statements": [
																{
																	"nativeSrc": "6689:17:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6689:17:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6703:3:14",
																		"nodeType": "YulLiteral",
																		"src": "6703:3:14",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6693:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6693:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6720:71:14",
																	"nodeType": "YulAssignment",
																	"src": "6720:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6763:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6763:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6774:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6774:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6759:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6759:3:14"
																				},
																				"nativeSrc": "6759:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6759:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6783:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6783:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6730:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "6730:28:14"
																		},
																		"nativeSrc": "6730:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6730:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "6720:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6720:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "5537:1271:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5628:9:14",
														"nodeType": "YulTypedName",
														"src": "5628:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5639:7:14",
														"nodeType": "YulTypedName",
														"src": "5639:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5651:6:14",
														"nodeType": "YulTypedName",
														"src": "5651:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5659:6:14",
														"nodeType": "YulTypedName",
														"src": "5659:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5667:6:14",
														"nodeType": "YulTypedName",
														"src": "5667:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5675:6:14",
														"nodeType": "YulTypedName",
														"src": "5675:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5683:6:14",
														"nodeType": "YulTypedName",
														"src": "5683:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5691:6:14",
														"nodeType": "YulTypedName",
														"src": "5691:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "5699:6:14",
														"nodeType": "YulTypedName",
														"src": "5699:6:14",
														"type": ""
													}
												],
												"src": "5537:1271:14"
											},
											{
												"body": {
													"nativeSrc": "6859:73:14",
													"nodeType": "YulBlock",
													"src": "6859:73:14",
													"statements": [
														{
															"nativeSrc": "6869:57:14",
															"nodeType": "YulAssignment",
															"src": "6869:57:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6884:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6884:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6891:34:14",
																		"nodeType": "YulLiteral",
																		"src": "6891:34:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6880:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6880:3:14"
																},
																"nativeSrc": "6880:46:14",
																"nodeType": "YulFunctionCall",
																"src": "6880:46:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6869:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "6869:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "6814:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6841:5:14",
														"nodeType": "YulTypedName",
														"src": "6841:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6851:7:14",
														"nodeType": "YulTypedName",
														"src": "6851:7:14",
														"type": ""
													}
												],
												"src": "6814:118:14"
											},
											{
												"body": {
													"nativeSrc": "6981:79:14",
													"nodeType": "YulBlock",
													"src": "6981:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7038:16:14",
																"nodeType": "YulBlock",
																"src": "7038:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7047:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7047:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7050:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7050:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7040:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7040:6:14"
																			},
																			"nativeSrc": "7040:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7040:12:14"
																		},
																		"nativeSrc": "7040:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7040:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7004:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7004:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7029:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7029:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nativeSrc": "7011:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "7011:17:14"
																				},
																				"nativeSrc": "7011:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7011:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7001:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7001:2:14"
																		},
																		"nativeSrc": "7001:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7001:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6994:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6994:6:14"
																},
																"nativeSrc": "6994:43:14",
																"nodeType": "YulFunctionCall",
																"src": "6994:43:14"
															},
															"nativeSrc": "6991:63:14",
															"nodeType": "YulIf",
															"src": "6991:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nativeSrc": "6938:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6974:5:14",
														"nodeType": "YulTypedName",
														"src": "6974:5:14",
														"type": ""
													}
												],
												"src": "6938:122:14"
											},
											{
												"body": {
													"nativeSrc": "7129:80:14",
													"nodeType": "YulBlock",
													"src": "7129:80:14",
													"statements": [
														{
															"nativeSrc": "7139:22:14",
															"nodeType": "YulAssignment",
															"src": "7139:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7154:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7154:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7148:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7148:5:14"
																},
																"nativeSrc": "7148:13:14",
																"nodeType": "YulFunctionCall",
																"src": "7148:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7139:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7139:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7197:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7197:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nativeSrc": "7170:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "7170:26:14"
																},
																"nativeSrc": "7170:33:14",
																"nodeType": "YulFunctionCall",
																"src": "7170:33:14"
															},
															"nativeSrc": "7170:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "7170:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nativeSrc": "7066:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7107:6:14",
														"nodeType": "YulTypedName",
														"src": "7107:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7115:3:14",
														"nodeType": "YulTypedName",
														"src": "7115:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7123:5:14",
														"nodeType": "YulTypedName",
														"src": "7123:5:14",
														"type": ""
													}
												],
												"src": "7066:143:14"
											},
											{
												"body": {
													"nativeSrc": "7292:274:14",
													"nodeType": "YulBlock",
													"src": "7292:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7338:83:14",
																"nodeType": "YulBlock",
																"src": "7338:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7340:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7340:77:14"
																			},
																			"nativeSrc": "7340:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7340:79:14"
																		},
																		"nativeSrc": "7340:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7340:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7313:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7313:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7322:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7322:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7309:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7309:3:14"
																		},
																		"nativeSrc": "7309:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7309:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7334:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7334:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7305:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7305:3:14"
																},
																"nativeSrc": "7305:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7305:32:14"
															},
															"nativeSrc": "7302:119:14",
															"nodeType": "YulIf",
															"src": "7302:119:14"
														},
														{
															"nativeSrc": "7431:128:14",
															"nodeType": "YulBlock",
															"src": "7431:128:14",
															"statements": [
																{
																	"nativeSrc": "7446:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7446:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7460:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7460:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7450:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7450:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7475:74:14",
																	"nodeType": "YulAssignment",
																	"src": "7475:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7521:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7521:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7532:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7532:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7517:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7517:3:14"
																				},
																				"nativeSrc": "7517:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7517:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7541:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7541:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nativeSrc": "7485:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "7485:31:14"
																		},
																		"nativeSrc": "7485:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7485:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7475:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7475:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128_fromMemory",
												"nativeSrc": "7215:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7262:9:14",
														"nodeType": "YulTypedName",
														"src": "7262:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7273:7:14",
														"nodeType": "YulTypedName",
														"src": "7273:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7285:6:14",
														"nodeType": "YulTypedName",
														"src": "7285:6:14",
														"type": ""
													}
												],
												"src": "7215:351:14"
											},
											{
												"body": {
													"nativeSrc": "7635:80:14",
													"nodeType": "YulBlock",
													"src": "7635:80:14",
													"statements": [
														{
															"nativeSrc": "7645:22:14",
															"nodeType": "YulAssignment",
															"src": "7645:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7660:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7660:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7654:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7654:5:14"
																},
																"nativeSrc": "7654:13:14",
																"nodeType": "YulFunctionCall",
																"src": "7654:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7645:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7645:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7703:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7703:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7676:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "7676:26:14"
																},
																"nativeSrc": "7676:33:14",
																"nodeType": "YulFunctionCall",
																"src": "7676:33:14"
															},
															"nativeSrc": "7676:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "7676:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "7572:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7613:6:14",
														"nodeType": "YulTypedName",
														"src": "7613:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7621:3:14",
														"nodeType": "YulTypedName",
														"src": "7621:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7629:5:14",
														"nodeType": "YulTypedName",
														"src": "7629:5:14",
														"type": ""
													}
												],
												"src": "7572:143:14"
											},
											{
												"body": {
													"nativeSrc": "7798:274:14",
													"nodeType": "YulBlock",
													"src": "7798:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7844:83:14",
																"nodeType": "YulBlock",
																"src": "7844:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7846:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7846:77:14"
																			},
																			"nativeSrc": "7846:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7846:79:14"
																		},
																		"nativeSrc": "7846:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7846:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7819:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7819:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7828:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7828:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7815:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7815:3:14"
																		},
																		"nativeSrc": "7815:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7815:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7840:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7840:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7811:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7811:3:14"
																},
																"nativeSrc": "7811:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7811:32:14"
															},
															"nativeSrc": "7808:119:14",
															"nodeType": "YulIf",
															"src": "7808:119:14"
														},
														{
															"nativeSrc": "7937:128:14",
															"nodeType": "YulBlock",
															"src": "7937:128:14",
															"statements": [
																{
																	"nativeSrc": "7952:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7952:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7966:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7966:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7956:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7956:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7981:74:14",
																	"nodeType": "YulAssignment",
																	"src": "7981:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8027:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8027:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8038:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8038:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8023:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8023:3:14"
																				},
																				"nativeSrc": "8023:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8023:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8047:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8047:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "7991:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "7991:31:14"
																		},
																		"nativeSrc": "7991:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7991:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7981:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7981:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "7721:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7768:9:14",
														"nodeType": "YulTypedName",
														"src": "7768:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7779:7:14",
														"nodeType": "YulTypedName",
														"src": "7779:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7791:6:14",
														"nodeType": "YulTypedName",
														"src": "7791:6:14",
														"type": ""
													}
												],
												"src": "7721:351:14"
											},
											{
												"body": {
													"nativeSrc": "8143:53:14",
													"nodeType": "YulBlock",
													"src": "8143:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8160:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8160:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8183:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8183:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8165:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "8165:17:14"
																		},
																		"nativeSrc": "8165:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8165:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8153:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8153:6:14"
																},
																"nativeSrc": "8153:37:14",
																"nodeType": "YulFunctionCall",
																"src": "8153:37:14"
															},
															"nativeSrc": "8153:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "8153:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8078:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8131:5:14",
														"nodeType": "YulTypedName",
														"src": "8131:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8138:3:14",
														"nodeType": "YulTypedName",
														"src": "8138:3:14",
														"type": ""
													}
												],
												"src": "8078:118:14"
											},
											{
												"body": {
													"nativeSrc": "8300:124:14",
													"nodeType": "YulBlock",
													"src": "8300:124:14",
													"statements": [
														{
															"nativeSrc": "8310:26:14",
															"nodeType": "YulAssignment",
															"src": "8310:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8322:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8322:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8333:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8333:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8318:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8318:3:14"
																},
																"nativeSrc": "8318:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8318:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8310:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8310:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8390:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8390:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8403:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8403:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8414:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8414:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:14"
																		},
																		"nativeSrc": "8399:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8346:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8346:43:14"
																},
																"nativeSrc": "8346:71:14",
																"nodeType": "YulFunctionCall",
																"src": "8346:71:14"
															},
															"nativeSrc": "8346:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "8346:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8202:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8272:9:14",
														"nodeType": "YulTypedName",
														"src": "8272:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8284:6:14",
														"nodeType": "YulTypedName",
														"src": "8284:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8295:4:14",
														"nodeType": "YulTypedName",
														"src": "8295:4:14",
														"type": ""
													}
												],
												"src": "8202:222:14"
											},
											{
												"body": {
													"nativeSrc": "8473:79:14",
													"nodeType": "YulBlock",
													"src": "8473:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8530:16:14",
																"nodeType": "YulBlock",
																"src": "8530:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8539:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8539:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8542:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8542:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8532:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8532:6:14"
																			},
																			"nativeSrc": "8532:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8532:12:14"
																		},
																		"nativeSrc": "8532:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8532:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8496:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8496:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8521:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "8521:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "8503:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "8503:17:14"
																				},
																				"nativeSrc": "8503:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8503:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8493:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8493:2:14"
																		},
																		"nativeSrc": "8493:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8493:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8486:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8486:6:14"
																},
																"nativeSrc": "8486:43:14",
																"nodeType": "YulFunctionCall",
																"src": "8486:43:14"
															},
															"nativeSrc": "8483:63:14",
															"nodeType": "YulIf",
															"src": "8483:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "8430:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8466:5:14",
														"nodeType": "YulTypedName",
														"src": "8466:5:14",
														"type": ""
													}
												],
												"src": "8430:122:14"
											},
											{
												"body": {
													"nativeSrc": "8621:80:14",
													"nodeType": "YulBlock",
													"src": "8621:80:14",
													"statements": [
														{
															"nativeSrc": "8631:22:14",
															"nodeType": "YulAssignment",
															"src": "8631:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8646:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8646:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8640:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8640:5:14"
																},
																"nativeSrc": "8640:13:14",
																"nodeType": "YulFunctionCall",
																"src": "8640:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8631:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8631:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8689:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8689:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8662:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "8662:26:14"
																},
																"nativeSrc": "8662:33:14",
																"nodeType": "YulFunctionCall",
																"src": "8662:33:14"
															},
															"nativeSrc": "8662:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "8662:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8558:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8599:6:14",
														"nodeType": "YulTypedName",
														"src": "8599:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8607:3:14",
														"nodeType": "YulTypedName",
														"src": "8607:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8615:5:14",
														"nodeType": "YulTypedName",
														"src": "8615:5:14",
														"type": ""
													}
												],
												"src": "8558:143:14"
											},
											{
												"body": {
													"nativeSrc": "8784:274:14",
													"nodeType": "YulBlock",
													"src": "8784:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8830:83:14",
																"nodeType": "YulBlock",
																"src": "8830:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8832:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8832:77:14"
																			},
																			"nativeSrc": "8832:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8832:79:14"
																		},
																		"nativeSrc": "8832:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8805:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8805:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8814:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8814:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8801:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:14"
																		},
																		"nativeSrc": "8801:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8801:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8826:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8797:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8797:3:14"
																},
																"nativeSrc": "8797:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8797:32:14"
															},
															"nativeSrc": "8794:119:14",
															"nodeType": "YulIf",
															"src": "8794:119:14"
														},
														{
															"nativeSrc": "8923:128:14",
															"nodeType": "YulBlock",
															"src": "8923:128:14",
															"statements": [
																{
																	"nativeSrc": "8938:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8938:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8952:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8952:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8942:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8942:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8967:74:14",
																	"nodeType": "YulAssignment",
																	"src": "8967:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9013:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9013:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9024:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9024:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9009:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9009:3:14"
																				},
																				"nativeSrc": "9009:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9009:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9033:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9033:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8977:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "8977:31:14"
																		},
																		"nativeSrc": "8977:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8977:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8967:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8967:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8707:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8754:9:14",
														"nodeType": "YulTypedName",
														"src": "8754:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8765:7:14",
														"nodeType": "YulTypedName",
														"src": "8765:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8777:6:14",
														"nodeType": "YulTypedName",
														"src": "8777:6:14",
														"type": ""
													}
												],
												"src": "8707:351:14"
											},
											{
												"body": {
													"nativeSrc": "9108:32:14",
													"nodeType": "YulBlock",
													"src": "9108:32:14",
													"statements": [
														{
															"nativeSrc": "9118:16:14",
															"nodeType": "YulAssignment",
															"src": "9118:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "9129:5:14",
																"nodeType": "YulIdentifier",
																"src": "9129:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9118:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "9118:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "9064:76:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9090:5:14",
														"nodeType": "YulTypedName",
														"src": "9090:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9100:7:14",
														"nodeType": "YulTypedName",
														"src": "9100:7:14",
														"type": ""
													}
												],
												"src": "9064:76:14"
											},
											{
												"body": {
													"nativeSrc": "9193:509:14",
													"nodeType": "YulBlock",
													"src": "9193:509:14",
													"statements": [
														{
															"nativeSrc": "9203:24:14",
															"nodeType": "YulAssignment",
															"src": "9203:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9225:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9225:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "9208:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "9208:16:14"
																},
																"nativeSrc": "9208:19:14",
																"nodeType": "YulFunctionCall",
																"src": "9208:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9203:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "9203:1:14"
																}
															]
														},
														{
															"nativeSrc": "9236:24:14",
															"nodeType": "YulAssignment",
															"src": "9236:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9258:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9258:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "9241:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "9241:16:14"
																},
																"nativeSrc": "9241:19:14",
																"nodeType": "YulFunctionCall",
																"src": "9241:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9236:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "9236:1:14"
																}
															]
														},
														{
															"nativeSrc": "9269:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9269:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9292:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9292:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9295:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9295:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9288:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9288:3:14"
																},
																"nativeSrc": "9288:9:14",
																"nodeType": "YulFunctionCall",
																"src": "9288:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9273:11:14",
																	"nodeType": "YulTypedName",
																	"src": "9273:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9306:40:14",
															"nodeType": "YulAssignment",
															"src": "9306:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9334:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "9334:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "9317:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "9317:16:14"
																},
																"nativeSrc": "9317:29:14",
																"nodeType": "YulFunctionCall",
																"src": "9317:29:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9306:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "9306:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9473:22:14",
																"nodeType": "YulBlock",
																"src": "9473:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9475:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "9475:16:14"
																			},
																			"nativeSrc": "9475:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9475:18:14"
																		},
																		"nativeSrc": "9475:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9475:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "9391:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "9391:1:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9394:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9394:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9387:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9387:3:14"
																		},
																		"nativeSrc": "9387:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9387:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "9401:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "9401:1:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9404:66:14",
																				"nodeType": "YulLiteral",
																				"src": "9404:66:14",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9398:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "9398:2:14"
																		},
																		"nativeSrc": "9398:73:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9398:73:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9383:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9383:3:14"
																},
																"nativeSrc": "9383:89:14",
																"nodeType": "YulFunctionCall",
																"src": "9383:89:14"
															},
															"nativeSrc": "9380:115:14",
															"nodeType": "YulIf",
															"src": "9380:115:14"
														},
														{
															"body": {
																"nativeSrc": "9673:22:14",
																"nodeType": "YulBlock",
																"src": "9673:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9675:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "9675:16:14"
																			},
																			"nativeSrc": "9675:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9675:18:14"
																		},
																		"nativeSrc": "9675:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9675:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9605:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "9605:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9598:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "9598:6:14"
																				},
																				"nativeSrc": "9598:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9598:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9628:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "9628:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9636:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "9636:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9645:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "9645:1:14"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nativeSrc": "9631:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "9631:4:14"
																						},
																						"nativeSrc": "9631:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "9631:16:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9625:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "9625:2:14"
																				},
																				"nativeSrc": "9625:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9625:23:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9578:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "9578:2:14"
																		},
																		"nativeSrc": "9578:84:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9578:84:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9558:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9558:6:14"
																},
																"nativeSrc": "9558:114:14",
																"nodeType": "YulFunctionCall",
																"src": "9558:114:14"
															},
															"nativeSrc": "9555:140:14",
															"nodeType": "YulIf",
															"src": "9555:140:14"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nativeSrc": "9146:556:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9176:1:14",
														"nodeType": "YulTypedName",
														"src": "9176:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9179:1:14",
														"nodeType": "YulTypedName",
														"src": "9179:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9185:7:14",
														"nodeType": "YulTypedName",
														"src": "9185:7:14",
														"type": ""
													}
												],
												"src": "9146:556:14"
											},
											{
												"body": {
													"nativeSrc": "9752:328:14",
													"nodeType": "YulBlock",
													"src": "9752:328:14",
													"statements": [
														{
															"nativeSrc": "9762:24:14",
															"nodeType": "YulAssignment",
															"src": "9762:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9784:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9784:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "9767:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "9767:16:14"
																},
																"nativeSrc": "9767:19:14",
																"nodeType": "YulFunctionCall",
																"src": "9767:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9762:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "9762:1:14"
																}
															]
														},
														{
															"nativeSrc": "9795:24:14",
															"nodeType": "YulAssignment",
															"src": "9795:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9817:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9817:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "9800:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "9800:16:14"
																},
																"nativeSrc": "9800:19:14",
																"nodeType": "YulFunctionCall",
																"src": "9800:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9795:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "9795:1:14"
																}
															]
														},
														{
															"nativeSrc": "9828:17:14",
															"nodeType": "YulAssignment",
															"src": "9828:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9840:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9840:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9843:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9843:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9836:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9836:3:14"
																},
																"nativeSrc": "9836:9:14",
																"nodeType": "YulFunctionCall",
																"src": "9836:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9828:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9828:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10051:22:14",
																"nodeType": "YulBlock",
																"src": "10051:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10053:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "10053:16:14"
																			},
																			"nativeSrc": "10053:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10053:18:14"
																		},
																		"nativeSrc": "10053:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10053:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nativeSrc": "9977:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "9977:1:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9980:1:14",
																								"nodeType": "YulLiteral",
																								"src": "9980:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nativeSrc": "9973:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "9973:3:14"
																						},
																						"nativeSrc": "9973:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "9973:9:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9966:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "9966:6:14"
																				},
																				"nativeSrc": "9966:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9966:17:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "9989:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "9989:4:14"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "9995:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "9995:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nativeSrc": "9985:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9985:3:14"
																				},
																				"nativeSrc": "9985:12:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9985:12:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9962:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9962:3:14"
																		},
																		"nativeSrc": "9962:36:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9962:36:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10020:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "10020:1:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10023:1:14",
																						"nodeType": "YulLiteral",
																						"src": "10023:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "10016:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10016:3:14"
																				},
																				"nativeSrc": "10016:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10016:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "10031:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "10031:4:14"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "10037:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "10037:1:14"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "10027:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10027:3:14"
																				},
																				"nativeSrc": "10027:12:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10027:12:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10012:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10012:3:14"
																		},
																		"nativeSrc": "10012:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10012:28:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9946:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9946:2:14"
																},
																"nativeSrc": "9946:104:14",
																"nodeType": "YulFunctionCall",
																"src": "9946:104:14"
															},
															"nativeSrc": "9943:130:14",
															"nodeType": "YulIf",
															"src": "9943:130:14"
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nativeSrc": "9708:372:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9738:1:14",
														"nodeType": "YulTypedName",
														"src": "9738:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9741:1:14",
														"nodeType": "YulTypedName",
														"src": "9741:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9747:4:14",
														"nodeType": "YulTypedName",
														"src": "9747:4:14",
														"type": ""
													}
												],
												"src": "9708:372:14"
											},
											{
												"body": {
													"nativeSrc": "10129:332:14",
													"nodeType": "YulBlock",
													"src": "10129:332:14",
													"statements": [
														{
															"nativeSrc": "10139:24:14",
															"nodeType": "YulAssignment",
															"src": "10139:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10161:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10161:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "10144:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "10144:16:14"
																},
																"nativeSrc": "10144:19:14",
																"nodeType": "YulFunctionCall",
																"src": "10144:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10139:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "10139:1:14"
																}
															]
														},
														{
															"nativeSrc": "10172:24:14",
															"nodeType": "YulAssignment",
															"src": "10172:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10194:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10194:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "10177:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "10177:16:14"
																},
																"nativeSrc": "10177:19:14",
																"nodeType": "YulFunctionCall",
																"src": "10177:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10172:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "10172:1:14"
																}
															]
														},
														{
															"nativeSrc": "10205:16:14",
															"nodeType": "YulAssignment",
															"src": "10205:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10216:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10216:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10219:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10219:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10212:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10212:3:14"
																},
																"nativeSrc": "10212:9:14",
																"nodeType": "YulFunctionCall",
																"src": "10212:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10205:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10205:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10432:22:14",
																"nodeType": "YulBlock",
																"src": "10432:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10434:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "10434:16:14"
																			},
																			"nativeSrc": "10434:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10434:18:14"
																		},
																		"nativeSrc": "10434:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10434:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "x",
																								"nativeSrc": "10352:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "10352:1:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10355:1:14",
																								"nodeType": "YulLiteral",
																								"src": "10355:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nativeSrc": "10348:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10348:3:14"
																						},
																						"nativeSrc": "10348:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10348:9:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10341:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "10341:6:14"
																				},
																				"nativeSrc": "10341:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10341:17:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "sum",
																						"nativeSrc": "10364:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "10364:3:14"
																					},
																					{
																						"name": "y",
																						"nativeSrc": "10369:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "10369:1:14"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "10360:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10360:3:14"
																				},
																				"nativeSrc": "10360:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10360:11:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10337:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10337:3:14"
																		},
																		"nativeSrc": "10337:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10337:35:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10394:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "10394:1:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10397:1:14",
																						"nodeType": "YulLiteral",
																						"src": "10397:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "10390:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10390:3:14"
																				},
																				"nativeSrc": "10390:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10390:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "sum",
																								"nativeSrc": "10412:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "10412:3:14"
																							},
																							{
																								"name": "y",
																								"nativeSrc": "10417:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "10417:1:14"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nativeSrc": "10408:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10408:3:14"
																						},
																						"nativeSrc": "10408:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10408:11:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10401:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "10401:6:14"
																				},
																				"nativeSrc": "10401:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10401:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10386:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10386:3:14"
																		},
																		"nativeSrc": "10386:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10386:35:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10321:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "10321:2:14"
																},
																"nativeSrc": "10321:110:14",
																"nodeType": "YulFunctionCall",
																"src": "10321:110:14"
															},
															"nativeSrc": "10318:136:14",
															"nodeType": "YulIf",
															"src": "10318:136:14"
														}
													]
												},
												"name": "checked_add_t_int256",
												"nativeSrc": "10086:375:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10116:1:14",
														"nodeType": "YulTypedName",
														"src": "10116:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10119:1:14",
														"nodeType": "YulTypedName",
														"src": "10119:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10125:3:14",
														"nodeType": "YulTypedName",
														"src": "10125:3:14",
														"type": ""
													}
												],
												"src": "10086:375:14"
											},
											{
												"body": {
													"nativeSrc": "10563:73:14",
													"nodeType": "YulBlock",
													"src": "10563:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10580:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10580:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10585:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10585:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10573:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10573:6:14"
																},
																"nativeSrc": "10573:19:14",
																"nodeType": "YulFunctionCall",
																"src": "10573:19:14"
															},
															"nativeSrc": "10573:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "10573:19:14"
														},
														{
															"nativeSrc": "10601:29:14",
															"nodeType": "YulAssignment",
															"src": "10601:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10620:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10620:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10625:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10625:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10616:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10616:3:14"
																},
																"nativeSrc": "10616:14:14",
																"nodeType": "YulFunctionCall",
																"src": "10616:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10601:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "10601:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10467:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10535:3:14",
														"nodeType": "YulTypedName",
														"src": "10535:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10540:6:14",
														"nodeType": "YulTypedName",
														"src": "10540:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10551:11:14",
														"nodeType": "YulTypedName",
														"src": "10551:11:14",
														"type": ""
													}
												],
												"src": "10467:169:14"
											},
											{
												"body": {
													"nativeSrc": "10748:61:14",
													"nodeType": "YulBlock",
													"src": "10748:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10770:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10770:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10778:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10778:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10766:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10766:3:14"
																		},
																		"nativeSrc": "10766:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10766:14:14"
																	},
																	{
																		"hexValue": "57726f6e6720696e707574206f72646572",
																		"kind": "string",
																		"nativeSrc": "10782:19:14",
																		"nodeType": "YulLiteral",
																		"src": "10782:19:14",
																		"type": "",
																		"value": "Wrong input order"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10759:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10759:6:14"
																},
																"nativeSrc": "10759:43:14",
																"nodeType": "YulFunctionCall",
																"src": "10759:43:14"
															},
															"nativeSrc": "10759:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "10759:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6",
												"nativeSrc": "10642:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10740:6:14",
														"nodeType": "YulTypedName",
														"src": "10740:6:14",
														"type": ""
													}
												],
												"src": "10642:167:14"
											},
											{
												"body": {
													"nativeSrc": "10961:220:14",
													"nodeType": "YulBlock",
													"src": "10961:220:14",
													"statements": [
														{
															"nativeSrc": "10971:74:14",
															"nodeType": "YulAssignment",
															"src": "10971:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11037:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11037:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11042:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11042:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10978:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "10978:58:14"
																},
																"nativeSrc": "10978:67:14",
																"nodeType": "YulFunctionCall",
																"src": "10978:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10971:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10971:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11143:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11143:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6",
																	"nativeSrc": "11054:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "11054:88:14"
																},
																"nativeSrc": "11054:93:14",
																"nodeType": "YulFunctionCall",
																"src": "11054:93:14"
															},
															"nativeSrc": "11054:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "11054:93:14"
														},
														{
															"nativeSrc": "11156:19:14",
															"nodeType": "YulAssignment",
															"src": "11156:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11167:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11167:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11172:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11172:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11163:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:14"
																},
																"nativeSrc": "11163:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11163:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11156:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11156:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10815:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10949:3:14",
														"nodeType": "YulTypedName",
														"src": "10949:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10957:3:14",
														"nodeType": "YulTypedName",
														"src": "10957:3:14",
														"type": ""
													}
												],
												"src": "10815:366:14"
											},
											{
												"body": {
													"nativeSrc": "11358:248:14",
													"nodeType": "YulBlock",
													"src": "11358:248:14",
													"statements": [
														{
															"nativeSrc": "11368:26:14",
															"nodeType": "YulAssignment",
															"src": "11368:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11380:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11380:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11391:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11391:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11376:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11376:3:14"
																},
																"nativeSrc": "11376:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11376:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11368:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11368:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11415:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11415:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11426:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11426:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11411:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11411:3:14"
																		},
																		"nativeSrc": "11411:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11411:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11434:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "11434:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11440:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11440:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11430:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11430:3:14"
																		},
																		"nativeSrc": "11430:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11430:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11404:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11404:6:14"
																},
																"nativeSrc": "11404:47:14",
																"nodeType": "YulFunctionCall",
																"src": "11404:47:14"
															},
															"nativeSrc": "11404:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "11404:47:14"
														},
														{
															"nativeSrc": "11460:139:14",
															"nodeType": "YulAssignment",
															"src": "11460:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11594:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11594:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11468:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "11468:124:14"
																},
																"nativeSrc": "11468:131:14",
																"nodeType": "YulFunctionCall",
																"src": "11468:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11460:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11460:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11187:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11338:9:14",
														"nodeType": "YulTypedName",
														"src": "11338:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11353:4:14",
														"nodeType": "YulTypedName",
														"src": "11353:4:14",
														"type": ""
													}
												],
												"src": "11187:419:14"
											},
											{
												"body": {
													"nativeSrc": "11663:51:14",
													"nodeType": "YulBlock",
													"src": "11663:51:14",
													"statements": [
														{
															"nativeSrc": "11673:34:14",
															"nodeType": "YulAssignment",
															"src": "11673:34:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11698:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11698:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11701:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "11701:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11694:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11694:3:14"
																},
																"nativeSrc": "11694:13:14",
																"nodeType": "YulFunctionCall",
																"src": "11694:13:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11673:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "11673:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "11612:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11644:5:14",
														"nodeType": "YulTypedName",
														"src": "11644:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11654:8:14",
														"nodeType": "YulTypedName",
														"src": "11654:8:14",
														"type": ""
													}
												],
												"src": "11612:102:14"
											},
											{
												"body": {
													"nativeSrc": "11793:775:14",
													"nodeType": "YulBlock",
													"src": "11793:775:14",
													"statements": [
														{
															"nativeSrc": "11803:15:14",
															"nodeType": "YulAssignment",
															"src": "11803:15:14",
															"value": {
																"name": "_power",
																"nativeSrc": "11812:6:14",
																"nodeType": "YulIdentifier",
																"src": "11812:6:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11803:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "11803:5:14"
																}
															]
														},
														{
															"nativeSrc": "11827:14:14",
															"nodeType": "YulAssignment",
															"src": "11827:14:14",
															"value": {
																"name": "_base",
																"nativeSrc": "11836:5:14",
																"nodeType": "YulIdentifier",
																"src": "11836:5:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11827:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11827:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11885:677:14",
																"nodeType": "YulBlock",
																"src": "11885:677:14",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "11973:22:14",
																			"nodeType": "YulBlock",
																			"src": "11973:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11975:16:14",
																							"nodeType": "YulIdentifier",
																							"src": "11975:16:14"
																						},
																						"nativeSrc": "11975:18:14",
																						"nodeType": "YulFunctionCall",
																						"src": "11975:18:14"
																					},
																					"nativeSrc": "11975:18:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "11975:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11951:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "11951:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "11961:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11961:3:14"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "11966:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "11966:4:14"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "11957:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "11957:3:14"
																					},
																					"nativeSrc": "11957:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11957:14:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11948:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "11948:2:14"
																			},
																			"nativeSrc": "11948:24:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11948:24:14"
																		},
																		"nativeSrc": "11945:50:14",
																		"nodeType": "YulIf",
																		"src": "11945:50:14"
																	},
																	{
																		"body": {
																			"nativeSrc": "12040:419:14",
																			"nodeType": "YulBlock",
																			"src": "12040:419:14",
																			"statements": [
																				{
																					"nativeSrc": "12420:25:14",
																					"nodeType": "YulAssignment",
																					"src": "12420:25:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "12433:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "12433:5:14"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "12440:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "12440:4:14"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "12429:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "12429:3:14"
																						},
																						"nativeSrc": "12429:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "12429:16:14"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "12420:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "12420:5:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "12015:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "12015:8:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12025:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12025:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12011:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12011:3:14"
																			},
																			"nativeSrc": "12011:16:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12011:16:14"
																		},
																		"nativeSrc": "12008:451:14",
																		"nodeType": "YulIf",
																		"src": "12008:451:14"
																	},
																	{
																		"nativeSrc": "12472:23:14",
																		"nodeType": "YulAssignment",
																		"src": "12472:23:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "12484:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "12484:4:14"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "12490:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "12490:4:14"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "12480:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12480:3:14"
																			},
																			"nativeSrc": "12480:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12480:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "12472:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "12472:4:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12508:44:14",
																		"nodeType": "YulAssignment",
																		"src": "12508:44:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "12543:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "12543:8:14"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "12520:22:14",
																				"nodeType": "YulIdentifier",
																				"src": "12520:22:14"
																			},
																			"nativeSrc": "12520:32:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12520:32:14"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "12508:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "12508:8:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11861:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "11861:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11871:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11871:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11858:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11858:2:14"
																},
																"nativeSrc": "11858:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11858:15:14"
															},
															"nativeSrc": "11850:712:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11874:2:14",
																"nodeType": "YulBlock",
																"src": "11874:2:14",
																"statements": []
															},
															"pre": {
																"nativeSrc": "11854:3:14",
																"nodeType": "YulBlock",
																"src": "11854:3:14",
																"statements": []
															},
															"src": "11850:712:14"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "11720:848:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "11748:6:14",
														"nodeType": "YulTypedName",
														"src": "11748:6:14",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "11756:5:14",
														"nodeType": "YulTypedName",
														"src": "11756:5:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11763:8:14",
														"nodeType": "YulTypedName",
														"src": "11763:8:14",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "11773:3:14",
														"nodeType": "YulTypedName",
														"src": "11773:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11781:5:14",
														"nodeType": "YulTypedName",
														"src": "11781:5:14",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "11788:4:14",
														"nodeType": "YulTypedName",
														"src": "11788:4:14",
														"type": ""
													}
												],
												"src": "11720:848:14"
											},
											{
												"body": {
													"nativeSrc": "12637:1162:14",
													"nodeType": "YulBlock",
													"src": "12637:1162:14",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12821:20:14",
																		"nodeType": "YulBlock",
																		"src": "12821:20:14",
																		"statements": [
																			{
																				"nativeSrc": "12823:10:14",
																				"nodeType": "YulAssignment",
																				"src": "12823:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12832:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12832:1:14",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "12823:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "12823:5:14"
																					}
																				]
																			},
																			{
																				"nativeSrc": "12834:5:14",
																				"nodeType": "YulLeave",
																				"src": "12834:5:14"
																			}
																		]
																	},
																	"nativeSrc": "12814:27:14",
																	"nodeType": "YulCase",
																	"src": "12814:27:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12819:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12819:1:14",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "12857:23:14",
																		"nodeType": "YulBlock",
																		"src": "12857:23:14",
																		"statements": [
																			{
																				"nativeSrc": "12859:13:14",
																				"nodeType": "YulAssignment",
																				"src": "12859:13:14",
																				"value": {
																					"name": "base",
																					"nativeSrc": "12868:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "12868:4:14"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "12859:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "12859:5:14"
																					}
																				]
																			},
																			{
																				"nativeSrc": "12873:5:14",
																				"nodeType": "YulLeave",
																				"src": "12873:5:14"
																			}
																		]
																	},
																	"nativeSrc": "12850:30:14",
																	"nodeType": "YulCase",
																	"src": "12850:30:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12855:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12855:1:14",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "exponent",
																"nativeSrc": "12797:8:14",
																"nodeType": "YulIdentifier",
																"src": "12797:8:14"
															},
															"nativeSrc": "12790:90:14",
															"nodeType": "YulSwitch",
															"src": "12790:90:14"
														},
														{
															"body": {
																"nativeSrc": "12905:20:14",
																"nodeType": "YulBlock",
																"src": "12905:20:14",
																"statements": [
																	{
																		"nativeSrc": "12907:10:14",
																		"nodeType": "YulAssignment",
																		"src": "12907:10:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12916:1:14",
																			"nodeType": "YulLiteral",
																			"src": "12916:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12907:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "12907:5:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12918:5:14",
																		"nodeType": "YulLeave",
																		"src": "12918:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12899:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12899:4:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12892:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12892:6:14"
																},
																"nativeSrc": "12892:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12892:12:14"
															},
															"nativeSrc": "12889:36:14",
															"nodeType": "YulIf",
															"src": "12889:36:14"
														},
														{
															"nativeSrc": "12935:10:14",
															"nodeType": "YulAssignment",
															"src": "12935:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "12944:1:14",
																"nodeType": "YulLiteral",
																"src": "12944:1:14",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12935:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12935:5:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13185:54:14",
																		"nodeType": "YulBlock",
																		"src": "13185:54:14",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "13215:22:14",
																					"nodeType": "YulBlock",
																					"src": "13215:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "13217:16:14",
																									"nodeType": "YulIdentifier",
																									"src": "13217:16:14"
																								},
																								"nativeSrc": "13217:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13217:18:14"
																							},
																							"nativeSrc": "13217:18:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "13217:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "base",
																							"nativeSrc": "13193:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "13193:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "max",
																									"nativeSrc": "13203:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "13203:3:14"
																								},
																								{
																									"name": "base",
																									"nativeSrc": "13208:4:14",
																									"nodeType": "YulIdentifier",
																									"src": "13208:4:14"
																								}
																							],
																							"functionName": {
																								"name": "div",
																								"nativeSrc": "13199:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "13199:3:14"
																							},
																							"nativeSrc": "13199:14:14",
																							"nodeType": "YulFunctionCall",
																							"src": "13199:14:14"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "13190:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "13190:2:14"
																					},
																					"nativeSrc": "13190:24:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13190:24:14"
																				},
																				"nativeSrc": "13187:50:14",
																				"nodeType": "YulIf",
																				"src": "13187:50:14"
																			}
																		]
																	},
																	"nativeSrc": "13178:61:14",
																	"nodeType": "YulCase",
																	"src": "13178:61:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13183:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13183:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13255:56:14",
																		"nodeType": "YulBlock",
																		"src": "13255:56:14",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "13287:22:14",
																					"nodeType": "YulBlock",
																					"src": "13287:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "13289:16:14",
																									"nodeType": "YulIdentifier",
																									"src": "13289:16:14"
																								},
																								"nativeSrc": "13289:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13289:18:14"
																							},
																							"nativeSrc": "13289:18:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "13289:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "base",
																							"nativeSrc": "13264:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "13264:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "max",
																									"nativeSrc": "13275:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "13275:3:14"
																								},
																								{
																									"name": "base",
																									"nativeSrc": "13280:4:14",
																									"nodeType": "YulIdentifier",
																									"src": "13280:4:14"
																								}
																							],
																							"functionName": {
																								"name": "sdiv",
																								"nativeSrc": "13270:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "13270:4:14"
																							},
																							"nativeSrc": "13270:15:14",
																							"nodeType": "YulFunctionCall",
																							"src": "13270:15:14"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nativeSrc": "13260:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13260:3:14"
																					},
																					"nativeSrc": "13260:26:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13260:26:14"
																				},
																				"nativeSrc": "13257:52:14",
																				"nodeType": "YulIf",
																				"src": "13257:52:14"
																			}
																		]
																	},
																	"nativeSrc": "13248:63:14",
																	"nodeType": "YulCase",
																	"src": "13248:63:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13253:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13253:1:14",
																		"type": "",
																		"value": "0"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13161:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13161:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13167:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13167:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nativeSrc": "13157:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13157:3:14"
																},
																"nativeSrc": "13157:12:14",
																"nodeType": "YulFunctionCall",
																"src": "13157:12:14"
															},
															"nativeSrc": "13150:161:14",
															"nodeType": "YulSwitch",
															"src": "13150:161:14"
														},
														{
															"body": {
																"nativeSrc": "13348:37:14",
																"nodeType": "YulBlock",
																"src": "13348:37:14",
																"statements": [
																	{
																		"nativeSrc": "13362:13:14",
																		"nodeType": "YulAssignment",
																		"src": "13362:13:14",
																		"value": {
																			"name": "base",
																			"nativeSrc": "13371:4:14",
																			"nodeType": "YulIdentifier",
																			"src": "13371:4:14"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "13362:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13362:5:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13327:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "13327:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13337:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13337:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13323:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13323:3:14"
																},
																"nativeSrc": "13323:16:14",
																"nodeType": "YulFunctionCall",
																"src": "13323:16:14"
															},
															"nativeSrc": "13320:65:14",
															"nodeType": "YulIf",
															"src": "13320:65:14"
														},
														{
															"nativeSrc": "13394:23:14",
															"nodeType": "YulAssignment",
															"src": "13394:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13406:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13406:4:14"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "13412:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13412:4:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13402:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13402:3:14"
																},
																"nativeSrc": "13402:15:14",
																"nodeType": "YulFunctionCall",
																"src": "13402:15:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13394:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13394:4:14"
																}
															]
														},
														{
															"nativeSrc": "13426:44:14",
															"nodeType": "YulAssignment",
															"src": "13426:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13461:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "13461:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_right_1_unsigned",
																	"nativeSrc": "13438:22:14",
																	"nodeType": "YulIdentifier",
																	"src": "13438:22:14"
																},
																"nativeSrc": "13438:32:14",
																"nodeType": "YulFunctionCall",
																"src": "13438:32:14"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "13426:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "13426:8:14"
																}
															]
														},
														{
															"nativeSrc": "13535:61:14",
															"nodeType": "YulAssignment",
															"src": "13535:61:14",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "13569:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13569:5:14"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "13576:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13576:4:14"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "13582:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "13582:8:14"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "13592:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13592:3:14"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "13550:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "13550:18:14"
																},
																"nativeSrc": "13550:46:14",
																"nodeType": "YulFunctionCall",
																"src": "13550:46:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13535:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13535:5:14"
																},
																{
																	"name": "base",
																	"nativeSrc": "13542:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13542:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13655:22:14",
																"nodeType": "YulBlock",
																"src": "13655:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13657:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "13657:16:14"
																			},
																			"nativeSrc": "13657:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13657:18:14"
																		},
																		"nativeSrc": "13657:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13657:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "power",
																				"nativeSrc": "13617:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13617:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13624:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13624:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nativeSrc": "13613:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13613:3:14"
																		},
																		"nativeSrc": "13613:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13613:13:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "power",
																				"nativeSrc": "13631:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13631:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "max",
																						"nativeSrc": "13642:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13642:3:14"
																					},
																					{
																						"name": "base",
																						"nativeSrc": "13647:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "13647:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "13638:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13638:3:14"
																				},
																				"nativeSrc": "13638:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13638:14:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13628:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13628:2:14"
																		},
																		"nativeSrc": "13628:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13628:25:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13609:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13609:3:14"
																},
																"nativeSrc": "13609:45:14",
																"nodeType": "YulFunctionCall",
																"src": "13609:45:14"
															},
															"nativeSrc": "13606:71:14",
															"nodeType": "YulIf",
															"src": "13606:71:14"
														},
														{
															"body": {
																"nativeSrc": "13737:22:14",
																"nodeType": "YulBlock",
																"src": "13737:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13739:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "13739:16:14"
																			},
																			"nativeSrc": "13739:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13739:18:14"
																		},
																		"nativeSrc": "13739:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13739:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "power",
																				"nativeSrc": "13697:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13697:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13704:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13704:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "13693:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13693:3:14"
																		},
																		"nativeSrc": "13693:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13693:13:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "power",
																				"nativeSrc": "13712:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13712:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "min",
																						"nativeSrc": "13724:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13724:3:14"
																					},
																					{
																						"name": "base",
																						"nativeSrc": "13729:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "13729:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nativeSrc": "13719:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "13719:4:14"
																				},
																				"nativeSrc": "13719:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13719:15:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "13708:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13708:3:14"
																		},
																		"nativeSrc": "13708:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13708:27:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13689:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13689:3:14"
																},
																"nativeSrc": "13689:47:14",
																"nodeType": "YulFunctionCall",
																"src": "13689:47:14"
															},
															"nativeSrc": "13686:73:14",
															"nodeType": "YulIf",
															"src": "13686:73:14"
														},
														{
															"nativeSrc": "13768:25:14",
															"nodeType": "YulAssignment",
															"src": "13768:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "13781:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13781:5:14"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "13788:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13788:4:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13777:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13777:3:14"
																},
																"nativeSrc": "13777:16:14",
																"nodeType": "YulFunctionCall",
																"src": "13777:16:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13768:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13768:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_signed",
												"nativeSrc": "12574:1225:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12602:4:14",
														"nodeType": "YulTypedName",
														"src": "12602:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12608:8:14",
														"nodeType": "YulTypedName",
														"src": "12608:8:14",
														"type": ""
													},
													{
														"name": "min",
														"nativeSrc": "12618:3:14",
														"nodeType": "YulTypedName",
														"src": "12618:3:14",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "12623:3:14",
														"nodeType": "YulTypedName",
														"src": "12623:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12631:5:14",
														"nodeType": "YulTypedName",
														"src": "12631:5:14",
														"type": ""
													}
												],
												"src": "12574:1225:14"
											},
											{
												"body": {
													"nativeSrc": "13868:282:14",
													"nodeType": "YulBlock",
													"src": "13868:282:14",
													"statements": [
														{
															"nativeSrc": "13878:30:14",
															"nodeType": "YulAssignment",
															"src": "13878:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13903:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13903:4:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "13886:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "13886:16:14"
																},
																"nativeSrc": "13886:22:14",
																"nodeType": "YulFunctionCall",
																"src": "13886:22:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13878:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13878:4:14"
																}
															]
														},
														{
															"nativeSrc": "13917:37:14",
															"nodeType": "YulAssignment",
															"src": "13917:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13945:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "13945:8:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "13929:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "13929:15:14"
																},
																"nativeSrc": "13929:25:14",
																"nodeType": "YulFunctionCall",
																"src": "13929:25:14"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "13917:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "13917:8:14"
																}
															]
														},
														{
															"nativeSrc": "13964:179:14",
															"nodeType": "YulAssignment",
															"src": "13964:179:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13992:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13992:4:14"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "13998:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "13998:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14008:66:14",
																		"nodeType": "YulLiteral",
																		"src": "14008:66:14",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14076:66:14",
																		"nodeType": "YulLiteral",
																		"src": "14076:66:14",
																		"type": "",
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_signed",
																	"nativeSrc": "13973:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "13973:18:14"
																},
																"nativeSrc": "13973:170:14",
																"nodeType": "YulFunctionCall",
																"src": "13973:170:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13964:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13964:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_int256_t_uint8",
												"nativeSrc": "13805:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "13843:4:14",
														"nodeType": "YulTypedName",
														"src": "13843:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13849:8:14",
														"nodeType": "YulTypedName",
														"src": "13849:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13862:5:14",
														"nodeType": "YulTypedName",
														"src": "13862:5:14",
														"type": ""
													}
												],
												"src": "13805:345:14"
											},
											{
												"body": {
													"nativeSrc": "14262:58:14",
													"nodeType": "YulBlock",
													"src": "14262:58:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14284:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14284:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14292:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14292:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14280:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14280:3:14"
																		},
																		"nativeSrc": "14280:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14280:14:14"
																	},
																	{
																		"hexValue": "436f6d706c6578206e756d626572",
																		"kind": "string",
																		"nativeSrc": "14296:16:14",
																		"nodeType": "YulLiteral",
																		"src": "14296:16:14",
																		"type": "",
																		"value": "Complex number"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14273:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14273:6:14"
																},
																"nativeSrc": "14273:40:14",
																"nodeType": "YulFunctionCall",
																"src": "14273:40:14"
															},
															"nativeSrc": "14273:40:14",
															"nodeType": "YulExpressionStatement",
															"src": "14273:40:14"
														}
													]
												},
												"name": "store_literal_in_memory_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf",
												"nativeSrc": "14156:164:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14254:6:14",
														"nodeType": "YulTypedName",
														"src": "14254:6:14",
														"type": ""
													}
												],
												"src": "14156:164:14"
											},
											{
												"body": {
													"nativeSrc": "14472:220:14",
													"nodeType": "YulBlock",
													"src": "14472:220:14",
													"statements": [
														{
															"nativeSrc": "14482:74:14",
															"nodeType": "YulAssignment",
															"src": "14482:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14548:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14548:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14553:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14553:2:14",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14489:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "14489:58:14"
																},
																"nativeSrc": "14489:67:14",
																"nodeType": "YulFunctionCall",
																"src": "14489:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14482:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14482:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14654:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14654:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf",
																	"nativeSrc": "14565:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "14565:88:14"
																},
																"nativeSrc": "14565:93:14",
																"nodeType": "YulFunctionCall",
																"src": "14565:93:14"
															},
															"nativeSrc": "14565:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "14565:93:14"
														},
														{
															"nativeSrc": "14667:19:14",
															"nodeType": "YulAssignment",
															"src": "14667:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14678:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14678:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14683:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14683:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14674:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14674:3:14"
																},
																"nativeSrc": "14674:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14674:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14667:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14667:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14326:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14460:3:14",
														"nodeType": "YulTypedName",
														"src": "14460:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14468:3:14",
														"nodeType": "YulTypedName",
														"src": "14468:3:14",
														"type": ""
													}
												],
												"src": "14326:366:14"
											},
											{
												"body": {
													"nativeSrc": "14869:248:14",
													"nodeType": "YulBlock",
													"src": "14869:248:14",
													"statements": [
														{
															"nativeSrc": "14879:26:14",
															"nodeType": "YulAssignment",
															"src": "14879:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14891:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14891:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14902:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14902:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14887:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14887:3:14"
																},
																"nativeSrc": "14887:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14887:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14879:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14879:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14926:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14926:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14937:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14937:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14922:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14922:3:14"
																		},
																		"nativeSrc": "14922:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14922:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14945:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "14945:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14951:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14951:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14941:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14941:3:14"
																		},
																		"nativeSrc": "14941:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14941:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14915:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14915:6:14"
																},
																"nativeSrc": "14915:47:14",
																"nodeType": "YulFunctionCall",
																"src": "14915:47:14"
															},
															"nativeSrc": "14915:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "14915:47:14"
														},
														{
															"nativeSrc": "14971:139:14",
															"nodeType": "YulAssignment",
															"src": "14971:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15105:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15105:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14979:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "14979:124:14"
																},
																"nativeSrc": "14979:131:14",
																"nodeType": "YulFunctionCall",
																"src": "14979:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14971:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14971:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14698:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14849:9:14",
														"nodeType": "YulTypedName",
														"src": "14849:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14864:4:14",
														"nodeType": "YulTypedName",
														"src": "14864:4:14",
														"type": ""
													}
												],
												"src": "14698:419:14"
											},
											{
												"body": {
													"nativeSrc": "15162:189:14",
													"nodeType": "YulBlock",
													"src": "15162:189:14",
													"statements": [
														{
															"nativeSrc": "15172:32:14",
															"nodeType": "YulAssignment",
															"src": "15172:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15198:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "15198:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "15181:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "15181:16:14"
																},
																"nativeSrc": "15181:23:14",
																"nodeType": "YulFunctionCall",
																"src": "15181:23:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15172:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "15172:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15294:22:14",
																"nodeType": "YulBlock",
																"src": "15294:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15296:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "15296:16:14"
																			},
																			"nativeSrc": "15296:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15296:18:14"
																		},
																		"nativeSrc": "15296:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "15296:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15219:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "15219:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15226:66:14",
																		"nodeType": "YulLiteral",
																		"src": "15226:66:14",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15216:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "15216:2:14"
																},
																"nativeSrc": "15216:77:14",
																"nodeType": "YulFunctionCall",
																"src": "15216:77:14"
															},
															"nativeSrc": "15213:103:14",
															"nodeType": "YulIf",
															"src": "15213:103:14"
														},
														{
															"nativeSrc": "15325:20:14",
															"nodeType": "YulAssignment",
															"src": "15325:20:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15336:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15336:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15339:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "15339:5:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15332:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15332:3:14"
																},
																"nativeSrc": "15332:13:14",
																"nodeType": "YulFunctionCall",
																"src": "15332:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15325:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15325:3:14"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nativeSrc": "15123:228:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15148:5:14",
														"nodeType": "YulTypedName",
														"src": "15148:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15158:3:14",
														"nodeType": "YulTypedName",
														"src": "15158:3:14",
														"type": ""
													}
												],
												"src": "15123:228:14"
											},
											{
												"body": {
													"nativeSrc": "15398:344:14",
													"nodeType": "YulBlock",
													"src": "15398:344:14",
													"statements": [
														{
															"nativeSrc": "15408:24:14",
															"nodeType": "YulAssignment",
															"src": "15408:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15430:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15430:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "15413:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "15413:16:14"
																},
																"nativeSrc": "15413:19:14",
																"nodeType": "YulFunctionCall",
																"src": "15413:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15408:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "15408:1:14"
																}
															]
														},
														{
															"nativeSrc": "15441:24:14",
															"nodeType": "YulAssignment",
															"src": "15441:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15463:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15463:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "15446:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "15446:16:14"
																},
																"nativeSrc": "15446:19:14",
																"nodeType": "YulFunctionCall",
																"src": "15446:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15441:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "15441:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15487:22:14",
																"nodeType": "YulBlock",
																"src": "15487:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15489:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "15489:16:14"
																			},
																			"nativeSrc": "15489:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15489:18:14"
																		},
																		"nativeSrc": "15489:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "15489:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15484:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15484:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15477:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15477:6:14"
																},
																"nativeSrc": "15477:9:14",
																"nodeType": "YulFunctionCall",
																"src": "15477:9:14"
															},
															"nativeSrc": "15474:35:14",
															"nodeType": "YulIf",
															"src": "15474:35:14"
														},
														{
															"body": {
																"nativeSrc": "15689:22:14",
																"nodeType": "YulBlock",
																"src": "15689:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15691:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "15691:16:14"
																			},
																			"nativeSrc": "15691:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15691:18:14"
																		},
																		"nativeSrc": "15691:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "15691:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "15578:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "15578:1:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15581:66:14",
																				"nodeType": "YulLiteral",
																				"src": "15581:66:14",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15575:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "15575:2:14"
																		},
																		"nativeSrc": "15575:73:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15575:73:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "15665:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "15665:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15672:1:14",
																						"nodeType": "YulLiteral",
																						"src": "15672:1:14",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15675:1:14",
																						"nodeType": "YulLiteral",
																						"src": "15675:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15668:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15668:3:14"
																				},
																				"nativeSrc": "15668:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15668:9:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15662:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "15662:2:14"
																		},
																		"nativeSrc": "15662:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15662:16:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15558:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15558:3:14"
																},
																"nativeSrc": "15558:130:14",
																"nodeType": "YulFunctionCall",
																"src": "15558:130:14"
															},
															"nativeSrc": "15555:156:14",
															"nodeType": "YulIf",
															"src": "15555:156:14"
														},
														{
															"nativeSrc": "15721:15:14",
															"nodeType": "YulAssignment",
															"src": "15721:15:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15731:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15731:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15734:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15734:1:14"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "15726:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:14"
																},
																"nativeSrc": "15726:10:14",
																"nodeType": "YulFunctionCall",
																"src": "15726:10:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15721:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "15721:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nativeSrc": "15357:385:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15387:1:14",
														"nodeType": "YulTypedName",
														"src": "15387:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15390:1:14",
														"nodeType": "YulTypedName",
														"src": "15390:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15396:1:14",
														"nodeType": "YulTypedName",
														"src": "15396:1:14",
														"type": ""
													}
												],
												"src": "15357:385:14"
											},
											{
												"body": {
													"nativeSrc": "15776:152:14",
													"nodeType": "YulBlock",
													"src": "15776:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15793:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15793:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15796:77:14",
																		"nodeType": "YulLiteral",
																		"src": "15796:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15786:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15786:6:14"
																},
																"nativeSrc": "15786:88:14",
																"nodeType": "YulFunctionCall",
																"src": "15786:88:14"
															},
															"nativeSrc": "15786:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "15786:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15890:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15890:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15893:4:14",
																		"nodeType": "YulLiteral",
																		"src": "15893:4:14",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15883:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15883:6:14"
																},
																"nativeSrc": "15883:15:14",
																"nodeType": "YulFunctionCall",
																"src": "15883:15:14"
															},
															"nativeSrc": "15883:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "15883:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15914:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15914:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15917:4:14",
																		"nodeType": "YulLiteral",
																		"src": "15917:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15907:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15907:6:14"
																},
																"nativeSrc": "15907:15:14",
																"nodeType": "YulFunctionCall",
																"src": "15907:15:14"
															},
															"nativeSrc": "15907:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "15907:15:14"
														}
													]
												},
												"name": "panic_error_0x01",
												"nativeSrc": "15748:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "15748:180:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_uint128_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int256(product_raw)\n\n        // special case\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, sdiv(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        diff := sub(x, y)\n\n        // underflow, if y >= 0 and diff > x\n        // overflow, if y < 0 and diff < x\n        if or(\n            and(iszero(slt(y, 0)), sgt(diff, x)),\n            and(slt(y, 0), slt(diff, x))\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        sum := add(x, y)\n\n        // overflow, if x >= 0 and sum < y\n        // underflow, if x < 0 and sum >= y\n        if or(\n            and(iszero(slt(x, 0)), slt(sum, y)),\n            and(slt(x, 0), iszero(slt(sum, y)))\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wrong input order\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_signed(base, exponent, min, max) -> power {\n        // Currently, `leave` avoids this function being inlined.\n        // We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        switch exponent\n        case 0 { power := 1 leave }\n        case 1 { power := base leave }\n        if iszero(base) { power := 0 leave }\n\n        power := 1\n\n        // We pull out the first iteration because it is the only one in which\n        // base can be negative.\n        // Exponent is at least 2 here.\n\n        // overflow check for base * base\n        switch sgt(base, 0)\n        case 1 { if gt(base, div(max, base)) { panic_error_0x11() } }\n        case 0 { if slt(base, sdiv(max, base)) { panic_error_0x11() } }\n        if and(exponent, 1)\n        {\n            power := base\n        }\n        base := mul(base, base)\n        exponent := shift_right_1_unsigned(exponent)\n\n        // Below this point, base is always positive.\n\n        power, base := checked_exp_helper(power, base, exponent, max)\n\n        if and(sgt(power, 0), gt(power, div(max, base))) { panic_error_0x11() }\n        if and(slt(power, 0), slt(power, sdiv(min, base))) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_int256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_int256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_signed(base, exponent, 0x8000000000000000000000000000000000000000000000000000000000000000, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function store_literal_in_memory_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Complex number\")\n\n    }\n\n    function abi_encode_t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c80637232688e116100645780637232688e146101915780637d9ada3e146101c25780639872971a146101f2578063b49bbce514610222578063ec0a63d8146102525761009c565b80630d83825b146100a05780631e953b15146100d05780631fdd03cb1461010157806321fef8811461013157806344401a2414610161575b5f80fd5b6100ba60048036038101906100b59190611079565b610283565b6040516100c791906110cf565b60405180910390f35b6100ea60048036038101906100e591906110e8565b6102f7565b6040516100f8929190611113565b60405180910390f35b61011b600480360381019061011691906110e8565b610423565b60405161012891906110cf565b60405180910390f35b61014b60048036038101906101469190611079565b610519565b60405161015891906110cf565b60405180910390f35b61017b60048036038101906101769190611079565b61055d565b60405161018891906110cf565b60405180910390f35b6101ab60048036038101906101a691906110e8565b6105ad565b6040516101b9929190611113565b60405180910390f35b6101dc60048036038101906101d79190611079565b61078f565b6040516101e991906110cf565b60405180910390f35b61020c60048036038101906102079190611079565b6107df565b60405161021991906110cf565b60405180910390f35b61023c600480360381019061023791906110e8565b610853565b60405161024991906110cf565b60405180910390f35b61026c600480360381019061026791906110e8565b610949565b60405161027a929190611113565b60405180910390f35b5f8061028e846102f7565b9150505f61029b846102f7565b915050600282826102ac9190611167565b82620f4240670de0b6b3a7640000866102c591906111c7565b6102cf91906111f7565b6102d99190611238565b6102e391906111c7565b6102ed91906111c7565b9250505092915050565b5f805f8390508073ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610346573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036a919061136d565b8673ffffffffffffffffffffffffffffffffffffffff169650909192939450909192935090919250909150905050809250508073ffffffffffffffffffffffffffffffffffffffff16631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610409919061144f565b6fffffffffffffffffffffffffffffffff16925050915091565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610472573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610496919061148e565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016104d191906114c8565b602060405180830381865afa1580156104ec573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610510919061150b565b92505050919050565b5f8061052584846107df565b90505f6105328486610283565b9050670de0b6b3a7640000818361054991906111f7565b61055391906111c7565b9250505092915050565b5f610566610ff7565b61056f846105ad565b825f018360200182815250828152505050610589836105ad565b8260400183606001828152508281525050506105a481610b2b565b91505092915050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105fd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610621919061148e565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561066d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610691919061148e565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016106cc91906114c8565b602060405180830381865afa1580156106e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070b919061150b565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161074691906114c8565b602060405180830381865afa158015610761573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610785919061150b565b9350505050915091565b5f610798610ff7565b6107a184610949565b825f0183602001828152508281525050506107bb83610949565b8260400183606001828152508281525050506107d681610b2b565b91505092915050565b5f806107ea846102f7565b5090505f6107f7846102f7565b50905060028261080791906111c7565b816108129190611167565b81620f4240670de0b6b3a76400008561082b91906111c7565b61083591906111f7565b61083f9190611238565b61084991906111c7565b9250505092915050565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c6919061148e565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161090191906114c8565b602060405180830381865afa15801561091c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610940919061150b565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610999573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109bd919061148e565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2d919061148e565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b8152600401610a6891906114c8565b602060405180830381865afa158015610a83573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aa7919061150b565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b8152600401610ae291906114c8565b602060405180830381865afa158015610afd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b21919061150b565b9350505050915091565b5f808260200151835f015110610b45578260200151610b4a565b825f01515b90505f8360600151846040015110610b66578360600151610b6c565b83604001515b90505f818310610b7c5781610b7e565b825b90505f69d3c21bcecceda1000000821115610ba45768056bc75e2d631000009050610cce565b69152d02c7e14af6800000821115610bc657678ac7230489e800009050610ccd565b69021e19e0c9bab2400000821115610be857670de0b6b3a76400009050610ccc565b683635c9adc5dea00000821115610c095767016345785d8a00009050610ccb565b68056bc75e2d63100000821115610c2957662386f26fc100009050610cca565b678ac7230489e80000821115610c485766038d7ea4c680009050610cc9565b670de0b6b3a7640000821115610c6657655af3107a40009050610cc8565b67016345785d8a0000821115610c84576509184e72a0009050610cc7565b662386f26fc10000821115610ca05764e8d4a510009050610cc6565b66038d7ea4c68000821115610cbc5764174876e8009050610cc5565b6402540be40090505b5b5b5b5b5b5b5b5b5b5f805f80848a5f0151610ce191906111c7565b858b60400151610cf191906111c7565b868c60200151610d0191906111c7565b878d60600151610d1191906111c7565b93509350935093505f8184610d26919061153f565b8386610d32919061153f565b610d3c91906115b5565b90505f8486610d4b91906115f5565b83856002610d59919061153f565b610d63919061153f565b610d6d919061153f565b90505f8486610d7c919061153f565b8488610d88919061153f565b610d9291906115b5565b8486610d9e919061153f565b610da8919061153f565b90505f80610db7858585610e82565b915091505f82138015610dc957508682125b8015610dd457508582125b80610df457505f81138015610de857508681125b8015610df357508581125b5b610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90611690565b60405180910390fd5b5f82138015610e4157508682125b8015610e4c57508582125b610e61578981610e5c91906111f7565b610e6e565b8982610e6d91906111f7565b5b9d5050505050505050505050505050919050565b5f805f83866004610e93919061153f565b610e9d919061153f565b600286610eaa91906117f4565b610eb491906115b5565b90505f8113610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef906118a9565b60405180910390fd5b5f610f0282610f6a565b9050866002610f11919061153f565b8187610f1c906118c7565b610f2691906115f5565b610f30919061190d565b9350866002610f3f919061153f565b8187610f4a906118c7565b610f5491906115b5565b610f5e919061190d565b92505050935093915050565b5f60018211610f7c57610f7b611975565b5b5f620f424083610f8c91906111f7565b90505f8190508192505f5b600115610fdf5760028483610fac91906111c7565b85610fb79190611167565b610fc191906111c7565b90506103e88185610fd29190611238565b10610fdf57809350610f97565b6103e884610fed91906111c7565b9350505050919050565b60405180608001604052805f81526020015f81526020015f81526020015f81525090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110488261101f565b9050919050565b6110588161103e565b8114611062575f80fd5b50565b5f813590506110738161104f565b92915050565b5f806040838503121561108f5761108e61101b565b5b5f61109c85828601611065565b92505060206110ad85828601611065565b9150509250929050565b5f819050919050565b6110c9816110b7565b82525050565b5f6020820190506110e25f8301846110c0565b92915050565b5f602082840312156110fd576110fc61101b565b5b5f61110a84828501611065565b91505092915050565b5f6040820190506111265f8301856110c0565b61113360208301846110c0565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611171826110b7565b915061117c836110b7565b92508282019050808211156111945761119361113a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6111d1826110b7565b91506111dc836110b7565b9250826111ec576111eb61119a565b5b828204905092915050565b5f611201826110b7565b915061120c836110b7565b925082820261121a816110b7565b915082820484148315176112315761123061113a565b5b5092915050565b5f611242826110b7565b915061124d836110b7565b92508282039050818111156112655761126461113a565b5b92915050565b6112748161101f565b811461127e575f80fd5b50565b5f8151905061128f8161126b565b92915050565b5f8160020b9050919050565b6112aa81611295565b81146112b4575f80fd5b50565b5f815190506112c5816112a1565b92915050565b5f61ffff82169050919050565b6112e1816112cb565b81146112eb575f80fd5b50565b5f815190506112fc816112d8565b92915050565b5f60ff82169050919050565b61131781611302565b8114611321575f80fd5b50565b5f815190506113328161130e565b92915050565b5f8115159050919050565b61134c81611338565b8114611356575f80fd5b50565b5f8151905061136781611343565b92915050565b5f805f805f805f60e0888a0312156113885761138761101b565b5b5f6113958a828b01611281565b97505060206113a68a828b016112b7565b96505060406113b78a828b016112ee565b95505060606113c88a828b016112ee565b94505060806113d98a828b016112ee565b93505060a06113ea8a828b01611324565b92505060c06113fb8a828b01611359565b91505092959891949750929550565b5f6fffffffffffffffffffffffffffffffff82169050919050565b61142e8161140a565b8114611438575f80fd5b50565b5f8151905061144981611425565b92915050565b5f602082840312156114645761146361101b565b5b5f6114718482850161143b565b91505092915050565b5f815190506114888161104f565b92915050565b5f602082840312156114a3576114a261101b565b5b5f6114b08482850161147a565b91505092915050565b6114c28161103e565b82525050565b5f6020820190506114db5f8301846114b9565b92915050565b6114ea816110b7565b81146114f4575f80fd5b50565b5f81519050611505816114e1565b92915050565b5f602082840312156115205761151f61101b565b5b5f61152d848285016114f7565b91505092915050565b5f819050919050565b5f61154982611536565b915061155483611536565b925082820261156281611536565b91507f800000000000000000000000000000000000000000000000000000000000000084145f841216156115995761159861113a565b5b82820584148315176115ae576115ad61113a565b5b5092915050565b5f6115bf82611536565b91506115ca83611536565b925082820390508181125f8412168282135f8512151617156115ef576115ee61113a565b5b92915050565b5f6115ff82611536565b915061160a83611536565b92508282019050828112155f8312168382125f8412151617156116305761162f61113a565b5b92915050565b5f82825260208201905092915050565b7f57726f6e6720696e707574206f726465720000000000000000000000000000005f82015250565b5f61167a601183611636565b915061168582611646565b602082019050919050565b5f6020820190508181035f8301526116a78161166e565b9050919050565b5f8160011c9050919050565b5f808291508390505b6001851115611703578086048111156116df576116de61113a565b5b60018516156116ee5780820291505b80810290506116fc856116ae565b94506116c3565b94509492505050565b5f825f8114611722576001811461172c57611735565b60019150506117ec565b829150506117ec565b5081611743575f90506117ec565b600190505f82136001811461175e575f81146117765761178a565b8286048311156117715761177061113a565b5b61178a565b8286058312156117895761178861113a565b5b5b506001831615611798578190505b81820291506117a6836116ae565b92506117b4858484846116ba565b9250905081850481115f821316156117cf576117ce61113a565b5b81840581125f821216156117e6576117e561113a565b5b81810290505b949350505050565b5f6117fe82611536565b915061180983611302565b92506118577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f8000000000000000000000000000000000000000000000000000000000000000858561170c565b905092915050565b7f436f6d706c6578206e756d6265720000000000000000000000000000000000005f82015250565b5f611893600e83611636565b915061189e8261185f565b602082019050919050565b5f6020820190508181035f8301526118c081611887565b9050919050565b5f6118d182611536565b91507f800000000000000000000000000000000000000000000000000000000000000082036119035761190261113a565b5b815f039050919050565b5f61191782611536565b915061192283611536565b9250826119325761193161119a565b5b60015f0383147f80000000000000000000000000000000000000000000000000000000000000008314161561196a5761196961113a565b5b828205905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffdfea26469706673582212209d27755a611b1b6c5b93708a8fca26e6041474f350fc0152ddb055a7258a8eb164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7232688E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7232688E EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x7D9ADA3E EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x9872971A EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xB49BBCE5 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xEC0A63D8 EQ PUSH2 0x252 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0xD83825B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x1E953B15 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x1FDD03CB EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x21FEF881 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x44401A24 EQ PUSH2 0x161 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP3 SWAP2 SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP3 SWAP2 SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0x28E DUP5 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x29B DUP5 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x2 DUP3 DUP3 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST DUP3 PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A686502 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x525 DUP5 DUP5 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x532 DUP5 DUP7 PUSH2 0x283 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP4 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x566 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x56F DUP5 PUSH2 0x5AD JUMP JUMPDEST DUP3 PUSH0 ADD DUP4 PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x589 DUP4 PUSH2 0x5AD JUMP JUMPDEST DUP3 PUSH1 0x40 ADD DUP4 PUSH1 0x60 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x5A4 DUP2 PUSH2 0xB2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x785 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x798 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x7A1 DUP5 PUSH2 0x949 JUMP JUMPDEST DUP3 PUSH0 ADD DUP4 PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x7BB DUP4 PUSH2 0x949 JUMP JUMPDEST DUP3 PUSH1 0x40 ADD DUP4 PUSH1 0x60 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x7D6 DUP2 PUSH2 0xB2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7EA DUP5 PUSH2 0x2F7 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x7F7 DUP5 PUSH2 0x2F7 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x2 DUP3 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP2 PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST DUP2 PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x901 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x940 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x999 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAFD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD LT PUSH2 0xB45 JUMPI DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xB4A JUMP JUMPDEST DUP3 PUSH0 ADD MLOAD JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD LT PUSH2 0xB66 JUMPI DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xB6C JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 LT PUSH2 0xB7C JUMPI DUP2 PUSH2 0xB7E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH10 0xD3C21BCECCEDA1000000 DUP3 GT ISZERO PUSH2 0xBA4 JUMPI PUSH9 0x56BC75E2D63100000 SWAP1 POP PUSH2 0xCCE JUMP JUMPDEST PUSH10 0x152D02C7E14AF6800000 DUP3 GT ISZERO PUSH2 0xBC6 JUMPI PUSH8 0x8AC7230489E80000 SWAP1 POP PUSH2 0xCCD JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP3 GT ISZERO PUSH2 0xBE8 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH2 0xCCC JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP3 GT ISZERO PUSH2 0xC09 JUMPI PUSH8 0x16345785D8A0000 SWAP1 POP PUSH2 0xCCB JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP3 GT ISZERO PUSH2 0xC29 JUMPI PUSH7 0x2386F26FC10000 SWAP1 POP PUSH2 0xCCA JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP3 GT ISZERO PUSH2 0xC48 JUMPI PUSH7 0x38D7EA4C68000 SWAP1 POP PUSH2 0xCC9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0xC66 JUMPI PUSH6 0x5AF3107A4000 SWAP1 POP PUSH2 0xCC8 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH2 0xC84 JUMPI PUSH6 0x9184E72A000 SWAP1 POP PUSH2 0xCC7 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 GT ISZERO PUSH2 0xCA0 JUMPI PUSH5 0xE8D4A51000 SWAP1 POP PUSH2 0xCC6 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 GT ISZERO PUSH2 0xCBC JUMPI PUSH5 0x174876E800 SWAP1 POP PUSH2 0xCC5 JUMP JUMPDEST PUSH5 0x2540BE400 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP5 DUP11 PUSH0 ADD MLOAD PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP6 DUP12 PUSH1 0x40 ADD MLOAD PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP7 DUP13 PUSH1 0x20 ADD MLOAD PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP8 DUP14 PUSH1 0x60 ADD MLOAD PUSH2 0xD11 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH0 DUP2 DUP5 PUSH2 0xD26 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST DUP4 DUP7 PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP7 PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST DUP4 DUP6 PUSH1 0x2 PUSH2 0xD59 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xD6D SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 DUP7 PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST DUP5 DUP9 PUSH2 0xD88 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST DUP5 DUP7 PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xDB7 DUP6 DUP6 DUP6 PUSH2 0xE82 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP3 SGT DUP1 ISZERO PUSH2 0xDC9 JUMPI POP DUP7 DUP3 SLT JUMPDEST DUP1 ISZERO PUSH2 0xDD4 JUMPI POP DUP6 DUP3 SLT JUMPDEST DUP1 PUSH2 0xDF4 JUMPI POP PUSH0 DUP2 SGT DUP1 ISZERO PUSH2 0xDE8 JUMPI POP DUP7 DUP2 SLT JUMPDEST DUP1 ISZERO PUSH2 0xDF3 JUMPI POP DUP6 DUP2 SLT JUMPDEST JUMPDEST PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SGT DUP1 ISZERO PUSH2 0xE41 JUMPI POP DUP7 DUP3 SLT JUMPDEST DUP1 ISZERO PUSH2 0xE4C JUMPI POP DUP6 DUP3 SLT JUMPDEST PUSH2 0xE61 JUMPI DUP10 DUP2 PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0xE6E JUMP JUMPDEST DUP10 DUP3 PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST JUMPDEST SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP7 PUSH1 0x4 PUSH2 0xE93 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xE9D SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x2 DUP7 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x17F4 JUMP JUMPDEST PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SGT PUSH2 0xEF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEF SWAP1 PUSH2 0x18A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xF02 DUP3 PUSH2 0xF6A JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x2 PUSH2 0xF11 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST DUP2 DUP8 PUSH2 0xF1C SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0xF30 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST SWAP4 POP DUP7 PUSH1 0x2 PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST DUP2 DUP8 PUSH2 0xF4A SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST SWAP3 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 GT PUSH2 0xF7C JUMPI PUSH2 0xF7B PUSH2 0x1975 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0xF4240 DUP4 PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SWAP1 POP DUP2 SWAP3 POP PUSH0 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xFDF JUMPI PUSH1 0x2 DUP5 DUP4 PUSH2 0xFAC SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP6 PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 DUP6 PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST LT PUSH2 0xFDF JUMPI DUP1 SWAP4 POP PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x3E8 DUP5 PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1048 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1058 DUP2 PUSH2 0x103E JUMP JUMPDEST DUP2 EQ PUSH2 0x1062 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1073 DUP2 PUSH2 0x104F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109C DUP6 DUP3 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10AD DUP6 DUP3 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C9 DUP2 PUSH2 0x10B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FD JUMPI PUSH2 0x10FC PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110A DUP5 DUP3 DUP6 ADD PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1126 PUSH0 DUP4 ADD DUP6 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x1133 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1171 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x117C DUP4 PUSH2 0x10B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11D1 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DC DUP4 PUSH2 0x10B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0x119A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1201 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x120C DUP4 PUSH2 0x10B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x121A DUP2 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1231 JUMPI PUSH2 0x1230 PUSH2 0x113A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1242 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x124D DUP4 PUSH2 0x10B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1265 JUMPI PUSH2 0x1264 PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1274 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x127E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x128F DUP2 PUSH2 0x126B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AA DUP2 PUSH2 0x1295 JUMP JUMPDEST DUP2 EQ PUSH2 0x12B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12C5 DUP2 PUSH2 0x12A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E1 DUP2 PUSH2 0x12CB JUMP JUMPDEST DUP2 EQ PUSH2 0x12EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12FC DUP2 PUSH2 0x12D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1317 DUP2 PUSH2 0x1302 JUMP JUMPDEST DUP2 EQ PUSH2 0x1321 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1332 DUP2 PUSH2 0x130E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134C DUP2 PUSH2 0x1338 JUMP JUMPDEST DUP2 EQ PUSH2 0x1356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1367 DUP2 PUSH2 0x1343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH2 0x1387 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1395 DUP11 DUP3 DUP12 ADD PUSH2 0x1281 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x13A6 DUP11 DUP3 DUP12 ADD PUSH2 0x12B7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x13B7 DUP11 DUP3 DUP12 ADD PUSH2 0x12EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x13C8 DUP11 DUP3 DUP12 ADD PUSH2 0x12EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x13D9 DUP11 DUP3 DUP12 ADD PUSH2 0x12EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x13EA DUP11 DUP3 DUP12 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x13FB DUP11 DUP3 DUP12 ADD PUSH2 0x1359 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142E DUP2 PUSH2 0x140A JUMP JUMPDEST DUP2 EQ PUSH2 0x1438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1449 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1464 JUMPI PUSH2 0x1463 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1471 DUP5 DUP3 DUP6 ADD PUSH2 0x143B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1488 DUP2 PUSH2 0x104F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A2 PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B0 DUP5 DUP3 DUP6 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C2 DUP2 PUSH2 0x103E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DB PUSH0 DUP4 ADD DUP5 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14EA DUP2 PUSH2 0x10B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1505 DUP2 PUSH2 0x14E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1520 JUMPI PUSH2 0x151F PUSH2 0x101B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152D DUP5 DUP3 DUP6 ADD PUSH2 0x14F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1549 DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x1554 DUP4 PUSH2 0x1536 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1562 DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x1599 JUMPI PUSH2 0x1598 PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x15AE JUMPI PUSH2 0x15AD PUSH2 0x113A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15BF DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CA DUP4 PUSH2 0x1536 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH0 DUP5 SLT AND DUP3 DUP3 SGT PUSH0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x15EF JUMPI PUSH2 0x15EE PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15FF DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x160A DUP4 PUSH2 0x1536 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH0 DUP4 SLT AND DUP4 DUP3 SLT PUSH0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x1630 JUMPI PUSH2 0x162F PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x57726F6E6720696E707574206F72646572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x167A PUSH1 0x11 DUP4 PUSH2 0x1636 JUMP JUMPDEST SWAP2 POP PUSH2 0x1685 DUP3 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A7 DUP2 PUSH2 0x166E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1703 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x113A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x16EE JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x16FC DUP6 PUSH2 0x16AE JUMP JUMPDEST SWAP5 POP PUSH2 0x16C3 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 DUP2 EQ PUSH2 0x1722 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x172C JUMPI PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x17EC JUMP JUMPDEST DUP3 SWAP2 POP POP PUSH2 0x17EC JUMP JUMPDEST POP DUP2 PUSH2 0x1743 JUMPI PUSH0 SWAP1 POP PUSH2 0x17EC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP PUSH0 DUP3 SGT PUSH1 0x1 DUP2 EQ PUSH2 0x175E JUMPI PUSH0 DUP2 EQ PUSH2 0x1776 JUMPI PUSH2 0x178A JUMP JUMPDEST DUP3 DUP7 DIV DUP4 GT ISZERO PUSH2 0x1771 JUMPI PUSH2 0x1770 PUSH2 0x113A JUMP JUMPDEST JUMPDEST PUSH2 0x178A JUMP JUMPDEST DUP3 DUP7 SDIV DUP4 SLT ISZERO PUSH2 0x1789 JUMPI PUSH2 0x1788 PUSH2 0x113A JUMP JUMPDEST JUMPDEST JUMPDEST POP PUSH1 0x1 DUP4 AND ISZERO PUSH2 0x1798 JUMPI DUP2 SWAP1 POP JUMPDEST DUP2 DUP3 MUL SWAP2 POP PUSH2 0x17A6 DUP4 PUSH2 0x16AE JUMP JUMPDEST SWAP3 POP PUSH2 0x17B4 DUP6 DUP5 DUP5 DUP5 PUSH2 0x16BA JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP6 DIV DUP2 GT PUSH0 DUP3 SGT AND ISZERO PUSH2 0x17CF JUMPI PUSH2 0x17CE PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP2 DUP5 SDIV DUP2 SLT PUSH0 DUP3 SLT AND ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x17E5 PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17FE DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x1809 DUP4 PUSH2 0x1302 JUMP JUMPDEST SWAP3 POP PUSH2 0x1857 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP6 DUP6 PUSH2 0x170C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D706C6578206E756D626572000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1893 PUSH1 0xE DUP4 PUSH2 0x1636 JUMP JUMPDEST SWAP2 POP PUSH2 0x189E DUP3 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18C0 DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18D1 DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1917 DUP3 PUSH2 0x1536 JUMP JUMPDEST SWAP2 POP PUSH2 0x1922 DUP4 PUSH2 0x1536 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1932 JUMPI PUSH2 0x1931 PUSH2 0x119A JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x113A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x27 PUSH22 0x5A611B1B6C5B93708A8FCA26E6041474F350FC0152DD 0xB0 SSTORE 0xA7 0x25 DUP11 DUP15 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "304:5436:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;392:277;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;342:227:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;677:417:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2128:332;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;816:340:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1788:332:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1102:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;581:227:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1164:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1459:315:10;1538:11;1569:17;1590:30;1611:8;1590:20;:30::i;:::-;1567:53;;;1633:16;1653:29;1674:7;1653:20;:29::i;:::-;1631:51;;;1764:1;1753:9;1743:8;:19;;;;:::i;:::-;1731:8;1721:7;1714:4;1702:9;:16;;;;:::i;:::-;:26;;;;:::i;:::-;:37;;;;:::i;:::-;1701:62;;;;:::i;:::-;:64;;;;:::i;:::-;1695:70;;1556:218;;1459:315;;;;:::o;392:277::-;464:18;484:17;519:19;556:11;519:49;;599:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;579:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:4;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;622:29;;;;508:161;392:277;;;:::o;342:227:11:-;399:15;427:19;464:4;427:42;;480:14;497:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;480:30;;538:6;531:24;;;556:4;531:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;521:40;;416:153;;342:227;;;:::o;677:417:10:-;779:12;855:20;878:53;899:14;915:15;878:20;:53::i;:::-;855:76;;942:28;973:46;987:15;1004:14;973:13;:46::i;:::-;942:77;;1080:4;1055:20;1040:12;:35;;;;:::i;:::-;1039:46;;;;:::i;:::-;1032:53;;;;677:417;;;;:::o;2128:332::-;2216:14;2242:31;;:::i;:::-;2315:24;2329:9;2315:13;:24::i;:::-;2287:8;:11;;2300:8;:11;;2286:53;;;;;;;;;;2379:25;2393:10;2379:13;:25::i;:::-;2351:8;:11;;2364:8;:11;;2350:54;;;;;;;;;;2426:26;2443:8;2426:16;:26::i;:::-;2417:35;;2231:229;2128:332;;;;:::o;816:340:11:-;874:16;892;920:19;957:4;920:42;;973:14;990:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;973:30;;1014:14;1031:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1014:30;;1073:6;1066:24;;;1091:4;1066:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1055:41;;1125:6;1118:24;;;1143:4;1118:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1107:41;;909:247;;;816:340;;;:::o;1788:332:10:-;1876:14;1902:31;;:::i;:::-;1975:24;1989:9;1975:13;:24::i;:::-;1947:8;:11;;1960:8;:11;;1946:53;;;;;;;;;;2039:25;2053:10;2039:13;:25::i;:::-;2011:8;:11;;2024:8;:11;;2010:54;;;;;;;;;;2086:26;2103:8;2086:16;:26::i;:::-;2077:35;;1891:229;1788:332;;;;:::o;1102:349::-;1183:12;1214:22;1241:27;1262:5;1241:20;:27::i;:::-;1213:55;;;1280:22;1307:27;1328:5;1307:20;:27::i;:::-;1279:55;;;1440:1;1425:14;:16;;;;:::i;:::-;1408:14;:33;;;;:::i;:::-;1389:14;1379:7;1372:4;1355:14;:21;;;;:::i;:::-;:31;;;;:::i;:::-;:48;;;;:::i;:::-;1354:88;;;;:::i;:::-;1347:95;;;;1102:349;;;;:::o;581:227:11:-;638:15;666:19;703:4;666:42;;719:14;736:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:30;;777:6;770:24;;;795:4;770:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;760:40;;655:153;;581:227;;;:::o;1164:340::-;1222:16;1240;1268:19;1305:4;1268:42;;1321:14;1338:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1321:30;;1362:14;1379:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1362:30;;1421:6;1414:24;;;1439:4;1414:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1403:41;;1473:6;1466:24;;;1491:4;1466:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1455:41;;1257:247;;;1164:340;;;:::o;2468:2104:10:-;2550:14;3042:12;3071:8;:11;;;3057:8;:11;;;:25;:53;;3099:8;:11;;;3057:53;;;3085:8;:11;;;3057:53;3042:68;;3121:12;3150:8;:11;;;3136:8;:11;;;:25;:53;;3178:8;:11;;;3136:53;;;3164:8;:11;;;3136:53;3121:68;;3200:11;3221:4;3214;:11;:25;;3235:4;3214:25;;;3228:4;3214:25;3200:39;;3328:9;3358:4;3352:3;:10;3348:605;;;3383:4;3379:8;;3348:605;;;3415:4;3409:3;:10;3405:548;;;3440:4;3436:8;;3405:548;;;3472:4;3466:3;:10;3462:491;;;3497:4;3493:8;;3462:491;;;3529:4;3523:3;:10;3519:434;;;3554:4;3550:8;;3519:434;;;3586:4;3580:3;:10;3576:377;;;3611:4;3607:8;;3576:377;;;3643:4;3637:3;:10;3633:320;;;3668:4;3664:8;;3633:320;;;3700:4;3694:3;:10;3690:263;;;3725:4;3721:8;;3690:263;;;3757:4;3751:3;:10;3747:206;;;3782:4;3778:8;;3747:206;;;3814:4;3808:3;:10;3804:149;;;3839:4;3835:8;;3804:149;;;3871:4;3865:3;:10;3861:92;;;3896:4;3892:8;;3861:92;;;3937:4;3933:8;;3861:92;3804:149;3747:206;3690:263;3633:320;3576:377;3519:434;3462:491;3405:548;3348:605;3966:9;3977;3988;3999;4047:1;4033:8;:11;;;:15;;;;:::i;:::-;4072:1;4058:8;:11;;;:15;;;;:::i;:::-;4097:1;4083:8;:11;;;:15;;;;:::i;:::-;4122:1;4108:8;:11;;;:15;;;;:::i;:::-;3965:160;;;;;;;;4138:8;4164:2;4159;:7;;;;:::i;:::-;4154:2;4149;:7;;;;:::i;:::-;:17;;;;:::i;:::-;4138:28;;4177:8;4208:2;4203;:7;;;;:::i;:::-;4197:2;4192;4188:1;:6;;;;:::i;:::-;:11;;;;:::i;:::-;:23;;;;:::i;:::-;4177:34;;4222:8;4259:2;4254;:7;;;;:::i;:::-;4249:2;4244;:7;;;;:::i;:::-;:17;;;;:::i;:::-;4238:2;4233;:7;;;;:::i;:::-;:29;;;;:::i;:::-;4222:40;;4276:9;4287;4300:33;4325:1;4328;4331;4300:24;:33::i;:::-;4275:58;;;;4398:1;4393:2;:6;:17;;;;;4408:2;4403;:7;4393:17;:28;;;;;4419:2;4414;:7;4393:28;4392:64;;;;4432:1;4427:2;:6;:17;;;;;4442:2;4437;:7;4427:17;:28;;;;;4453:2;4448;:7;4427:28;4392:64;4384:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;4504:1;4499:2;:6;:17;;;;;4514:2;4509;:7;4499:17;:28;;;;;4525:2;4520;:7;4499:28;4498:66;;4563:1;4557:2;4549:15;;;;:::i;:::-;4498:66;;;4545:1;4539:2;4531:15;;;;:::i;:::-;4498:66;4489:75;;2566:2006;;;;;;;;;;;;;2468:2104;;;:::o;4684:402::-;4805:9;4816;4838:8;4864:1;4860;4856;:5;;;;:::i;:::-;:9;;;;:::i;:::-;4852:1;4849;:4;;;;:::i;:::-;:16;;;;:::i;:::-;4838:27;;4930:1;4926;:5;4918:32;;;;;;;;;;;;:::i;:::-;;;;;;;;;4963:12;4985:16;4998:1;4985:4;:16::i;:::-;4963:39;;5038:1;5034;:5;;;;:::i;:::-;5024;5020:1;5019:2;;;:::i;:::-;:10;;;;:::i;:::-;5018:22;;;;:::i;:::-;5013:27;;5076:1;5072;:5;;;;:::i;:::-;5062;5058:1;5057:2;;;:::i;:::-;:10;;;;:::i;:::-;5056:22;;;;:::i;:::-;5051:27;;4827:259;;4684:402;;;;;;:::o;5158:577::-;5206:11;5241:1;5237;:5;5230:13;;;;:::i;:::-;;5384:10;5401:5;5397:1;:9;;;;:::i;:::-;5384:22;;5417:9;5429:2;5417:14;;5448:2;5442:8;;5463:10;5484:216;5491:4;5484:216;;;5535:1;5528:3;5524:1;:7;;;;:::i;:::-;5518:3;:13;;;;:::i;:::-;5517:19;;;;:::i;:::-;5512:24;;5620:4;5615:2;5609:3;:8;;;;:::i;:::-;:15;5645:5;5605:61;5686:2;5680:8;;5484:216;;;5722:5;5716:3;:11;;;;:::i;:::-;5710:17;;5219:516;;;5158:577;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:77::-;1358:7;1387:5;1376:16;;1321:77;;;:::o;1404:118::-;1491:24;1509:5;1491:24;:::i;:::-;1486:3;1479:37;1404:118;;:::o;1528:222::-;1621:4;1659:2;1648:9;1644:18;1636:26;;1672:71;1740:1;1729:9;1725:17;1716:6;1672:71;:::i;:::-;1528:222;;;;:::o;1756:329::-;1815:6;1864:2;1852:9;1843:7;1839:23;1835:32;1832:119;;;1870:79;;:::i;:::-;1832:119;1990:1;2015:53;2060:7;2051:6;2040:9;2036:22;2015:53;:::i;:::-;2005:63;;1961:117;1756:329;;;;:::o;2091:332::-;2212:4;2250:2;2239:9;2235:18;2227:26;;2263:71;2331:1;2320:9;2316:17;2307:6;2263:71;:::i;:::-;2344:72;2412:2;2401:9;2397:18;2388:6;2344:72;:::i;:::-;2091:332;;;;;:::o;2429:180::-;2477:77;2474:1;2467:88;2574:4;2571:1;2564:15;2598:4;2595:1;2588:15;2615:191;2655:3;2674:20;2692:1;2674:20;:::i;:::-;2669:25;;2708:20;2726:1;2708:20;:::i;:::-;2703:25;;2751:1;2748;2744:9;2737:16;;2772:3;2769:1;2766:10;2763:36;;;2779:18;;:::i;:::-;2763:36;2615:191;;;;:::o;2812:180::-;2860:77;2857:1;2850:88;2957:4;2954:1;2947:15;2981:4;2978:1;2971:15;2998:185;3038:1;3055:20;3073:1;3055:20;:::i;:::-;3050:25;;3089:20;3107:1;3089:20;:::i;:::-;3084:25;;3128:1;3118:35;;3133:18;;:::i;:::-;3118:35;3175:1;3172;3168:9;3163:14;;2998:185;;;;:::o;3189:410::-;3229:7;3252:20;3270:1;3252:20;:::i;:::-;3247:25;;3286:20;3304:1;3286:20;:::i;:::-;3281:25;;3341:1;3338;3334:9;3363:30;3381:11;3363:30;:::i;:::-;3352:41;;3542:1;3533:7;3529:15;3526:1;3523:22;3503:1;3496:9;3476:83;3453:139;;3572:18;;:::i;:::-;3453:139;3237:362;3189:410;;;;:::o;3605:194::-;3645:4;3665:20;3683:1;3665:20;:::i;:::-;3660:25;;3699:20;3717:1;3699:20;:::i;:::-;3694:25;;3743:1;3740;3736:9;3728:17;;3767:1;3761:4;3758:11;3755:37;;;3772:18;;:::i;:::-;3755:37;3605:194;;;;:::o;3805:122::-;3878:24;3896:5;3878:24;:::i;:::-;3871:5;3868:35;3858:63;;3917:1;3914;3907:12;3858:63;3805:122;:::o;3933:143::-;3990:5;4021:6;4015:13;4006:22;;4037:33;4064:5;4037:33;:::i;:::-;3933:143;;;;:::o;4082:90::-;4117:7;4160:5;4157:1;4146:20;4135:31;;4082:90;;;:::o;4178:118::-;4249:22;4265:5;4249:22;:::i;:::-;4242:5;4239:33;4229:61;;4286:1;4283;4276:12;4229:61;4178:118;:::o;4302:139::-;4357:5;4388:6;4382:13;4373:22;;4404:31;4429:5;4404:31;:::i;:::-;4302:139;;;;:::o;4447:89::-;4483:7;4523:6;4516:5;4512:18;4501:29;;4447:89;;;:::o;4542:120::-;4614:23;4631:5;4614:23;:::i;:::-;4607:5;4604:34;4594:62;;4652:1;4649;4642:12;4594:62;4542:120;:::o;4668:141::-;4724:5;4755:6;4749:13;4740:22;;4771:32;4797:5;4771:32;:::i;:::-;4668:141;;;;:::o;4815:86::-;4850:7;4890:4;4883:5;4879:16;4868:27;;4815:86;;;:::o;4907:118::-;4978:22;4994:5;4978:22;:::i;:::-;4971:5;4968:33;4958:61;;5015:1;5012;5005:12;4958:61;4907:118;:::o;5031:139::-;5086:5;5117:6;5111:13;5102:22;;5133:31;5158:5;5133:31;:::i;:::-;5031:139;;;;:::o;5176:90::-;5210:7;5253:5;5246:13;5239:21;5228:32;;5176:90;;;:::o;5272:116::-;5342:21;5357:5;5342:21;:::i;:::-;5335:5;5332:32;5322:60;;5378:1;5375;5368:12;5322:60;5272:116;:::o;5394:137::-;5448:5;5479:6;5473:13;5464:22;;5495:30;5519:5;5495:30;:::i;:::-;5394:137;;;;:::o;5537:1271::-;5651:6;5659;5667;5675;5683;5691;5699;5748:3;5736:9;5727:7;5723:23;5719:33;5716:120;;;5755:79;;:::i;:::-;5716:120;5875:1;5900:64;5956:7;5947:6;5936:9;5932:22;5900:64;:::i;:::-;5890:74;;5846:128;6013:2;6039:62;6093:7;6084:6;6073:9;6069:22;6039:62;:::i;:::-;6029:72;;5984:127;6150:2;6176:63;6231:7;6222:6;6211:9;6207:22;6176:63;:::i;:::-;6166:73;;6121:128;6288:2;6314:63;6369:7;6360:6;6349:9;6345:22;6314:63;:::i;:::-;6304:73;;6259:128;6426:3;6453:63;6508:7;6499:6;6488:9;6484:22;6453:63;:::i;:::-;6443:73;;6397:129;6565:3;6592:62;6646:7;6637:6;6626:9;6622:22;6592:62;:::i;:::-;6582:72;;6536:128;6703:3;6730:61;6783:7;6774:6;6763:9;6759:22;6730:61;:::i;:::-;6720:71;;6674:127;5537:1271;;;;;;;;;;:::o;6814:118::-;6851:7;6891:34;6884:5;6880:46;6869:57;;6814:118;;;:::o;6938:122::-;7011:24;7029:5;7011:24;:::i;:::-;7004:5;7001:35;6991:63;;7050:1;7047;7040:12;6991:63;6938:122;:::o;7066:143::-;7123:5;7154:6;7148:13;7139:22;;7170:33;7197:5;7170:33;:::i;:::-;7066:143;;;;:::o;7215:351::-;7285:6;7334:2;7322:9;7313:7;7309:23;7305:32;7302:119;;;7340:79;;:::i;:::-;7302:119;7460:1;7485:64;7541:7;7532:6;7521:9;7517:22;7485:64;:::i;:::-;7475:74;;7431:128;7215:351;;;;:::o;7572:143::-;7629:5;7660:6;7654:13;7645:22;;7676:33;7703:5;7676:33;:::i;:::-;7572:143;;;;:::o;7721:351::-;7791:6;7840:2;7828:9;7819:7;7815:23;7811:32;7808:119;;;7846:79;;:::i;:::-;7808:119;7966:1;7991:64;8047:7;8038:6;8027:9;8023:22;7991:64;:::i;:::-;7981:74;;7937:128;7721:351;;;;:::o;8078:118::-;8165:24;8183:5;8165:24;:::i;:::-;8160:3;8153:37;8078:118;;:::o;8202:222::-;8295:4;8333:2;8322:9;8318:18;8310:26;;8346:71;8414:1;8403:9;8399:17;8390:6;8346:71;:::i;:::-;8202:222;;;;:::o;8430:122::-;8503:24;8521:5;8503:24;:::i;:::-;8496:5;8493:35;8483:63;;8542:1;8539;8532:12;8483:63;8430:122;:::o;8558:143::-;8615:5;8646:6;8640:13;8631:22;;8662:33;8689:5;8662:33;:::i;:::-;8558:143;;;;:::o;8707:351::-;8777:6;8826:2;8814:9;8805:7;8801:23;8797:32;8794:119;;;8832:79;;:::i;:::-;8794:119;8952:1;8977:64;9033:7;9024:6;9013:9;9009:22;8977:64;:::i;:::-;8967:74;;8923:128;8707:351;;;;:::o;9064:76::-;9100:7;9129:5;9118:16;;9064:76;;;:::o;9146:556::-;9185:7;9208:19;9225:1;9208:19;:::i;:::-;9203:24;;9241:19;9258:1;9241:19;:::i;:::-;9236:24;;9295:1;9292;9288:9;9317:29;9334:11;9317:29;:::i;:::-;9306:40;;9404:66;9401:1;9398:73;9394:1;9391;9387:9;9383:89;9380:115;;;9475:18;;:::i;:::-;9380:115;9645:1;9636:7;9631:16;9628:1;9625:23;9605:1;9598:9;9578:84;9555:140;;9675:18;;:::i;:::-;9555:140;9193:509;9146:556;;;;:::o;9708:372::-;9747:4;9767:19;9784:1;9767:19;:::i;:::-;9762:24;;9800:19;9817:1;9800:19;:::i;:::-;9795:24;;9843:1;9840;9836:9;9828:17;;10037:1;10031:4;10027:12;10023:1;10020;10016:9;10012:28;9995:1;9989:4;9985:12;9980:1;9977;9973:9;9966:17;9962:36;9946:104;9943:130;;;10053:18;;:::i;:::-;9943:130;9708:372;;;;:::o;10086:375::-;10125:3;10144:19;10161:1;10144:19;:::i;:::-;10139:24;;10177:19;10194:1;10177:19;:::i;:::-;10172:24;;10219:1;10216;10212:9;10205:16;;10417:1;10412:3;10408:11;10401:19;10397:1;10394;10390:9;10386:35;10369:1;10364:3;10360:11;10355:1;10352;10348:9;10341:17;10337:35;10321:110;10318:136;;;10434:18;;:::i;:::-;10318:136;10086:375;;;;:::o;10467:169::-;10551:11;10585:6;10580:3;10573:19;10625:4;10620:3;10616:14;10601:29;;10467:169;;;;:::o;10642:167::-;10782:19;10778:1;10770:6;10766:14;10759:43;10642:167;:::o;10815:366::-;10957:3;10978:67;11042:2;11037:3;10978:67;:::i;:::-;10971:74;;11054:93;11143:3;11054:93;:::i;:::-;11172:2;11167:3;11163:12;11156:19;;10815:366;;;:::o;11187:419::-;11353:4;11391:2;11380:9;11376:18;11368:26;;11440:9;11434:4;11430:20;11426:1;11415:9;11411:17;11404:47;11468:131;11594:4;11468:131;:::i;:::-;11460:139;;11187:419;;;:::o;11612:102::-;11654:8;11701:5;11698:1;11694:13;11673:34;;11612:102;;;:::o;11720:848::-;11781:5;11788:4;11812:6;11803:15;;11836:5;11827:14;;11850:712;11871:1;11861:8;11858:15;11850:712;;;11966:4;11961:3;11957:14;11951:4;11948:24;11945:50;;;11975:18;;:::i;:::-;11945:50;12025:1;12015:8;12011:16;12008:451;;;12440:4;12433:5;12429:16;12420:25;;12008:451;12490:4;12484;12480:15;12472:23;;12520:32;12543:8;12520:32;:::i;:::-;12508:44;;11850:712;;;11720:848;;;;;;;:::o;12574:1225::-;12631:5;12797:8;12819:1;12814:27;;;;12855:1;12850:30;;;;12790:90;;12814:27;12832:1;12823:10;;12834:5;;;12850:30;12868:4;12859:13;;12873:5;;;12790:90;;12899:4;12889:36;;12916:1;12907:10;;12918:5;;12889:36;12944:1;12935:10;;13167:1;13161:4;13157:12;13183:1;13178:61;;;;13253:1;13248:63;;;;13150:161;;13178:61;13208:4;13203:3;13199:14;13193:4;13190:24;13187:50;;;13217:18;;:::i;:::-;13187:50;13178:61;;13248:63;13280:4;13275:3;13270:15;13264:4;13260:26;13257:52;;;13289:18;;:::i;:::-;13257:52;13150:161;;13337:1;13327:8;13323:16;13320:65;;;13371:4;13362:13;;13320:65;13412:4;13406;13402:15;13394:23;;13438:32;13461:8;13438:32;:::i;:::-;13426:44;;13550:46;13592:3;13582:8;13576:4;13569:5;13550:46;:::i;:::-;13535:61;;;;13647:4;13642:3;13638:14;13631:5;13628:25;13624:1;13617:5;13613:13;13609:45;13606:71;;;13657:18;;:::i;:::-;13606:71;13729:4;13724:3;13719:15;13712:5;13708:27;13704:1;13697:5;13693:13;13689:47;13686:73;;;13739:18;;:::i;:::-;13686:73;13788:4;13781:5;13777:16;13768:25;;12574:1225;;;;;;;:::o;13805:345::-;13862:5;13886:22;13903:4;13886:22;:::i;:::-;13878:30;;13929:25;13945:8;13929:25;:::i;:::-;13917:37;;13973:170;14076:66;14008;13998:8;13992:4;13973:170;:::i;:::-;13964:179;;13805:345;;;;:::o;14156:164::-;14296:16;14292:1;14284:6;14280:14;14273:40;14156:164;:::o;14326:366::-;14468:3;14489:67;14553:2;14548:3;14489:67;:::i;:::-;14482:74;;14565:93;14654:3;14565:93;:::i;:::-;14683:2;14678:3;14674:12;14667:19;;14326:366;;;:::o;14698:419::-;14864:4;14902:2;14891:9;14887:18;14879:26;;14951:9;14945:4;14941:20;14937:1;14926:9;14922:17;14915:47;14979:131;15105:4;14979:131;:::i;:::-;14971:139;;14698:419;;;:::o;15123:228::-;15158:3;15181:23;15198:5;15181:23;:::i;:::-;15172:32;;15226:66;15219:5;15216:77;15213:103;;15296:18;;:::i;:::-;15213:103;15339:5;15336:1;15332:13;15325:20;;15123:228;;;:::o;15357:385::-;15396:1;15413:19;15430:1;15413:19;:::i;:::-;15408:24;;15446:19;15463:1;15446:19;:::i;:::-;15441:24;;15484:1;15474:35;;15489:18;;:::i;:::-;15474:35;15675:1;15672;15668:9;15665:1;15662:16;15581:66;15578:1;15575:73;15558:130;15555:156;;;15691:18;;:::i;:::-;15555:156;15734:1;15731;15726:10;15721:15;;15357:385;;;;:::o;15748:180::-;15796:77;15793:1;15786:88;15893:4;15890:1;15883:15;15917:4;15914:1;15907:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1323200",
								"executionCost": "1374",
								"totalCost": "1324574"
							},
							"external": {
								"getBorrowAmountV2(address,address)": "infinite",
								"getBorrowAmountV3(address,address)": "infinite",
								"getLiquidityAndPrice(address)": "infinite",
								"getMaxProfitableAmount(address,address)": "infinite",
								"getPriceRatio(address,address)": "infinite",
								"getRelativeLiquidity(address,address)": "infinite",
								"getReservesV2(address)": "infinite",
								"getReservesV3(address)": "infinite",
								"reserves0(address)": "infinite",
								"reserves1(address)": "infinite"
							},
							"internal": {
								"calcBorrowAmount(struct OrderedReserves memory)": "infinite",
								"calcSolutionForQuadratic(int256,int256,int256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 304,
									"end": 5740,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 5740,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d27755a611b1b6c5b93708a8fca26e6041474f350fc0152ddb055a7258a8eb164736f6c634300081a0033",
									".code": [
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "7232688E"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "7232688E"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "7D9ADA3E"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "9872971A"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "B49BBCE5"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "EC0A63D8"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "D83825B"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "1E953B15"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "1FDD03CB"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "21FEF881"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "44401A24"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 304,
											"end": 5740,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1459,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1459,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1459,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 392,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 392,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 392,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 677,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 677,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 677,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2128,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 2128,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2128,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1788,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1788,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1788,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1102,
											"end": 1451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1102,
											"end": 1451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1102,
											"end": 1451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1549,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1586,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1611,
											"end": 1619,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1590,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1620,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1590,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1567,
											"end": 1620,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1567,
											"end": 1620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1567,
											"end": 1620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1674,
											"end": 1681,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1653,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1653,
											"end": 1682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1653,
											"end": 1682,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1653,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1682,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1753,
											"end": 1762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1743,
											"end": 1762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1762,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1743,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1762,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1743,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1728,
											"name": "PUSH",
											"source": 10,
											"value": "F4240"
										},
										{
											"begin": 1714,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1702,
											"end": 1711,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1702,
											"end": 1718,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1718,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1702,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1718,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1702,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1702,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1702,
											"end": 1739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1702,
											"end": 1739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1739,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1702,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1701,
											"end": 1763,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1701,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1763,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1701,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 1701,
											"end": 1765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1701,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1765,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 1701,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1765,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 392,
											"end": 669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 464,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 519,
											"end": 538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 567,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 519,
											"end": 568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 519,
											"end": 568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 603,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 599,
											"end": 609,
											"name": "PUSH",
											"source": 10,
											"value": "3850C7BD"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 599,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 611,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 579,
											"end": 611,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 635,
											"end": 639,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 635,
											"end": 649,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 635,
											"end": 649,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 635,
											"end": 649,
											"name": "PUSH",
											"source": 10,
											"value": "1A686502"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 635,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 635,
											"end": 651,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 635,
											"end": 651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 622,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 651,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 622,
											"end": 651,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 622,
											"end": 651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 392,
											"end": 669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 399,
											"end": 414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 464,
											"end": 468,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 427,
											"end": 469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 427,
											"end": 469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 501,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 508,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 508,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 497,
											"end": 508,
											"name": "PUSH",
											"source": 11,
											"value": "DFE1681"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 497,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 555,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 531,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 556,
											"end": 560,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 531,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 531,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 521,
											"end": 561,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 521,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 875,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 899,
											"end": 913,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 915,
											"end": 930,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 878,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 878,
											"end": 931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 878,
											"end": 931,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 878,
											"end": 931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 855,
											"end": 931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 855,
											"end": 931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 942,
											"end": 970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 987,
											"end": 1002,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1018,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 973,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 973,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 942,
											"end": 1019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 942,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1084,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1055,
											"end": 1075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1052,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1040,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1040,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1039,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1039,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1039,
											"end": 1085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1039,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1039,
											"end": 1085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1039,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1039,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 677,
											"end": 1094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2242,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2242,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2242,
											"end": 2273,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2242,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2339,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2315,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2308,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2311,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2393,
											"end": 2403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2379,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2404,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2379,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2362,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2372,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2375,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2364,
											"end": 2375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2443,
											"end": 2451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2426,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2452,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2426,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2417,
											"end": 2452,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2417,
											"end": 2452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 890,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 908,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 961,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 920,
											"end": 962,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 920,
											"end": 962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 973,
											"end": 987,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "PUSH",
											"source": 11,
											"value": "DFE1681"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 990,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1028,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "PUSH",
											"source": 11,
											"value": "D21220A7"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1031,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1091,
											"end": 1095,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1066,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1066,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1055,
											"end": 1096,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1055,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1118,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1118,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1148,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 1156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 1156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 1156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1902,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1902,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1902,
											"end": 1933,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1902,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1989,
											"end": 1998,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1975,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2053,
											"end": 2063,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2039,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2039,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2022,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2032,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2035,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2024,
											"end": 2035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2103,
											"end": 2111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2086,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2112,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2086,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2112,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2077,
											"end": 2112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1891,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1241,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1213,
											"end": 1268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1213,
											"end": 1268,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1213,
											"end": 1268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1328,
											"end": 1333,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1307,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1334,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1307,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1425,
											"end": 1439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1425,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1422,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1408,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "F4240"
										},
										{
											"begin": 1372,
											"end": 1376,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1355,
											"end": 1369,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1355,
											"end": 1376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1355,
											"end": 1376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1376,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1355,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1355,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1355,
											"end": 1403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1355,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1403,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1355,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1354,
											"end": 1442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1354,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1442,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1354,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1347,
											"end": 1442,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1347,
											"end": 1442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1347,
											"end": 1442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1347,
											"end": 1442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 638,
											"end": 653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 685,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 703,
											"end": 707,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 666,
											"end": 708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 666,
											"end": 708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 733,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 747,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 736,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "D21220A7"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 736,
											"end": 749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 794,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 795,
											"end": 799,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 770,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 770,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 760,
											"end": 800,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 760,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 655,
											"end": 808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 655,
											"end": 808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1238,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1256,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1309,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1321,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "PUSH",
											"source": 11,
											"value": "DFE1681"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1338,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "PUSH",
											"source": 11,
											"value": "D21220A7"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1379,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1438,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1438,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1438,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1439,
											"end": 1443,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1414,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1414,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1491,
											"end": 1495,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1466,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1466,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1496,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2468,
											"end": 4572,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2468,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2564,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3065,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3068,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3068,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3082,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3057,
											"end": 3110,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3110,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3110,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3057,
											"end": 3110,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3057,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3096,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3057,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3161,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3150,
											"end": 3161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3161,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3144,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3147,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3147,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3136,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3186,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3178,
											"end": 3189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3189,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3136,
											"end": 3189,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3189,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3136,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3164,
											"end": 3172,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3164,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3164,
											"end": 3175,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3189,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3136,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3225,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3218,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3225,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3239,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3362,
											"name": "PUSH",
											"source": 10,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 3352,
											"end": 3355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3348,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "PUSH",
											"source": 10,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 3379,
											"end": 3387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3379,
											"end": 3387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3348,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3348,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "PUSH",
											"source": 10,
											"value": "152D02C7E14AF6800000"
										},
										{
											"begin": 3409,
											"end": 3412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3419,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3405,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 10,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 3436,
											"end": 3444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3405,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3405,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3476,
											"name": "PUSH",
											"source": 10,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 3466,
											"end": 3469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3466,
											"end": 3476,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 3462,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3501,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3493,
											"end": 3501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3462,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 3462,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3533,
											"name": "PUSH",
											"source": 10,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 3523,
											"end": 3526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3533,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3519,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3554,
											"end": 3558,
											"name": "PUSH",
											"source": 10,
											"value": "16345785D8A0000"
										},
										{
											"begin": 3550,
											"end": 3558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 3519,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3519,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3590,
											"name": "PUSH",
											"source": 10,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 3580,
											"end": 3583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3590,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3576,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3615,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 3607,
											"end": 3615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3576,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3576,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3647,
											"name": "PUSH",
											"source": 10,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 3637,
											"end": 3640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3647,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3633,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3668,
											"end": 3672,
											"name": "PUSH",
											"source": 10,
											"value": "38D7EA4C68000"
										},
										{
											"begin": 3664,
											"end": 3672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3633,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3633,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3704,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3694,
											"end": 3697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3704,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3690,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3690,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3690,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3725,
											"end": 3729,
											"name": "PUSH",
											"source": 10,
											"value": "5AF3107A4000"
										},
										{
											"begin": 3721,
											"end": 3729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3690,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3690,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3690,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3690,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "PUSH",
											"source": 10,
											"value": "16345785D8A0000"
										},
										{
											"begin": 3751,
											"end": 3754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3751,
											"end": 3761,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3747,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3747,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3747,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "9184E72A000"
										},
										{
											"begin": 3778,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3747,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3747,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3747,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3747,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3818,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "PUSH",
											"source": 10,
											"value": "E8D4A51000"
										},
										{
											"begin": 3835,
											"end": 3843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3835,
											"end": 3843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3875,
											"name": "PUSH",
											"source": 10,
											"value": "38D7EA4C68000"
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3865,
											"end": 3875,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3861,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 3900,
											"name": "PUSH",
											"source": 10,
											"value": "174876E800"
										},
										{
											"begin": 3892,
											"end": 3900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3861,
											"end": 3953,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3861,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3941,
											"name": "PUSH",
											"source": 10,
											"value": "2540BE400"
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3861,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3747,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3747,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3690,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3690,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3633,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3576,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 3519,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3462,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3405,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3348,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 3975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3988,
											"end": 3997,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4048,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4041,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4044,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4044,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4033,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4073,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4066,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4069,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4069,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4058,
											"end": 4073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4058,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4073,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4058,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4097,
											"end": 4098,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4091,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4083,
											"end": 4094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4094,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4083,
											"end": 4098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4116,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4119,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4108,
											"end": 4119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4119,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4108,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4108,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4125,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4125,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4125,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4125,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 4125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4159,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4151,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4149,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4149,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 4149,
											"end": 4166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 4149,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4166,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 4149,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4205,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 4203,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4189,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4188,
											"end": 4194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4188,
											"end": 4199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4188,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4199,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4188,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4188,
											"end": 4211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4261,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4254,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4246,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4244,
											"end": 4251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4244,
											"end": 4251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4251,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4244,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4244,
											"end": 4261,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 4244,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4261,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4244,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4240,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4233,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 4233,
											"end": 4262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4233,
											"end": 4262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4262,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 4233,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4296,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4300,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4333,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 4300,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "SGT",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4410,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4421,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 4392,
											"end": 4456,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4433,
											"name": "SGT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4444,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4444,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4427,
											"end": 4444,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4444,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4444,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4444,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4427,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4455,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4427,
											"end": 4455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4453,
											"end": 4455,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4455,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4427,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4456,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 4392,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4384,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4384,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4504,
											"end": 4505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "SGT",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4516,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4516,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4527,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4527,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4499,
											"end": 4527,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4525,
											"end": 4527,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4527,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4527,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4499,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4498,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4498,
											"end": 4564,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4563,
											"end": 4564,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4557,
											"end": 4559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4549,
											"end": 4564,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4549,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4564,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4549,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4498,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4498,
											"end": 4564,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4498,
											"end": 4564,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4498,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4531,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4498,
											"end": 4564,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4498,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4564,
											"name": "SWAP14",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 4572,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 4572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 4572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 5086,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4684,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4805,
											"end": 4814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4825,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4865,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4861,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4856,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4856,
											"end": 4861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4856,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4861,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4856,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4856,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4852,
											"end": 4853,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 4849,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 4849,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4930,
											"end": 4931,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "SGT",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4918,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4963,
											"end": 4975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4998,
											"end": 4999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4985,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5001,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4985,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4963,
											"end": 5002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4963,
											"end": 5002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5034,
											"end": 5035,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5034,
											"end": 5039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5020,
											"end": 5021,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5019,
											"end": 5021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5019,
											"end": 5029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5019,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5029,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5019,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 5018,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5040,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5077,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5072,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5072,
											"end": 5077,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5072,
											"end": 5077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5077,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5072,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5062,
											"end": 5067,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5057,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5057,
											"end": 5067,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5057,
											"end": 5067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5067,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5057,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 5056,
											"end": 5078,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 5056,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5078,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 5056,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5078,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 5086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 5086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 5086,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 5086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 5086,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 5086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 5086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 5086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 5086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5735,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5158,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5242,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5237,
											"end": 5238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5237,
											"end": 5242,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5230,
											"end": 5243,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5230,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5230,
											"end": 5243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5243,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5230,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5243,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5230,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5406,
											"name": "PUSH",
											"source": 10,
											"value": "F4240"
										},
										{
											"begin": 5397,
											"end": 5398,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5397,
											"end": 5406,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5397,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5406,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5397,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5417,
											"end": 5431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5417,
											"end": 5431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5450,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5700,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5484,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5495,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5484,
											"end": 5700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5484,
											"end": 5700,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5536,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5528,
											"end": 5531,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5524,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5521,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 5518,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 5517,
											"end": 5536,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5517,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5536,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 5517,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5624,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 5615,
											"end": 5617,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5612,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 5609,
											"end": 5617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 5609,
											"end": 5617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5617,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 5609,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5624,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5605,
											"end": 5666,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 5688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5680,
											"end": 5688,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5680,
											"end": 5688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5484,
											"end": 5700,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5700,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5484,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5722,
											"end": 5727,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 5716,
											"end": 5719,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 5716,
											"end": 5727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5716,
											"end": 5727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5727,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 5716,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5727,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 941,
											"end": 964,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 972,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 1117,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1180,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 1245,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1190,
											"end": 1308,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1358,
											"end": 1365,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1392,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1321,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1522,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 1404,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 1509,
											"end": 1514,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 1491,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1486,
											"end": 1489,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1479,
											"end": 1516,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1522,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1522,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1621,
											"end": 1625,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1742,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1722,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 1672,
											"end": 1743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1743,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 1672,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 2085,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 1756,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1815,
											"end": 1821,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1861,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 1850,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1839,
											"end": 1862,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1835,
											"end": 1867,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1832,
											"end": 1951,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1832,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 1832,
											"end": 1951,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 1870,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 1870,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1870,
											"end": 1949,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 1870,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1832,
											"end": 1951,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 1832,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2040,
											"end": 2049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 2015,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1961,
											"end": 2078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 2085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 2085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 2085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 2085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1756,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2423,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 2091,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2212,
											"end": 2216,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2248,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2235,
											"end": 2253,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2227,
											"end": 2253,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2227,
											"end": 2253,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2263,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 2331,
											"end": 2332,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2263,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 2263,
											"end": 2334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2263,
											"end": 2334,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 2263,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2344,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 2412,
											"end": 2414,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2344,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 2344,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2344,
											"end": 2416,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 2344,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2423,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2423,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2609,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 2429,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2554,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2555,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2574,
											"end": 2578,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2598,
											"end": 2602,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2603,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2615,
											"end": 2806,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 2615,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2674,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 2674,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2674,
											"end": 2694,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2674,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 2708,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2703,
											"end": 2728,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2703,
											"end": 2728,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2772,
											"end": 2775,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2776,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2763,
											"end": 2799,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2763,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 2763,
											"end": 2799,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2779,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 2779,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 2779,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2779,
											"end": 2797,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 2779,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2763,
											"end": 2799,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 2763,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2615,
											"end": 2806,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2615,
											"end": 2806,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2615,
											"end": 2806,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2615,
											"end": 2806,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2615,
											"end": 2806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2812,
											"end": 2992,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 2812,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2938,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2957,
											"end": 2961,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 2954,
											"end": 2955,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2947,
											"end": 2962,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2986,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2998,
											"end": 3183,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 2998,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3055,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 3055,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3055,
											"end": 3075,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 3055,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3050,
											"end": 3075,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3050,
											"end": 3075,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 3089,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3109,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3109,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 3133,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3172,
											"end": 3173,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3168,
											"end": 3177,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3177,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2998,
											"end": 3183,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2998,
											"end": 3183,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2998,
											"end": 3183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2998,
											"end": 3183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2998,
											"end": 3183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3189,
											"end": 3599,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 3189,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3229,
											"end": 3236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 3252,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 3252,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3247,
											"end": 3272,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3247,
											"end": 3272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3286,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3286,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 3286,
											"end": 3306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3286,
											"end": 3306,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 3286,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3281,
											"end": 3306,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3281,
											"end": 3306,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3341,
											"end": 3342,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3339,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3381,
											"end": 3392,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 3363,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3352,
											"end": 3393,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3352,
											"end": 3393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3542,
											"end": 3543,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3529,
											"end": 3544,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3527,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3504,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3476,
											"end": 3559,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3453,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3453,
											"end": 3592,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 3572,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3453,
											"end": 3592,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3453,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3237,
											"end": 3599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3189,
											"end": 3599,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3189,
											"end": 3599,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3189,
											"end": 3599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3189,
											"end": 3599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3189,
											"end": 3599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3645,
											"end": 3649,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 3665,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3685,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 3665,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 3685,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 3685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 3717,
											"end": 3718,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 3699,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3694,
											"end": 3719,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3694,
											"end": 3719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3736,
											"end": 3745,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3728,
											"end": 3745,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3728,
											"end": 3745,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3761,
											"end": 3765,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 3772,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 3755,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3805,
											"end": 3927,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 3805,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 3896,
											"end": 3901,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 3878,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3902,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 3878,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3871,
											"end": 3876,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3868,
											"end": 3903,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3858,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 3858,
											"end": 3921,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 3918,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3915,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3858,
											"end": 3921,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 3858,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3805,
											"end": 3927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3805,
											"end": 3927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3933,
											"end": 4076,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 3933,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 3995,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4027,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4015,
											"end": 4028,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4006,
											"end": 4028,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4006,
											"end": 4028,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4064,
											"end": 4069,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 4037,
											"end": 4070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4070,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4037,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3933,
											"end": 4076,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3933,
											"end": 4076,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3933,
											"end": 4076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3933,
											"end": 4076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3933,
											"end": 4076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4082,
											"end": 4172,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 4082,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4117,
											"end": 4124,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4165,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4157,
											"end": 4158,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "SIGNEXTEND",
											"source": 14
										},
										{
											"begin": 4135,
											"end": 4166,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4135,
											"end": 4166,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4082,
											"end": 4172,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4082,
											"end": 4172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4082,
											"end": 4172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4082,
											"end": 4172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4178,
											"end": 4296,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 4178,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4249,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4249,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 4249,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4249,
											"end": 4271,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 4249,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4247,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4239,
											"end": 4272,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4229,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 4229,
											"end": 4290,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4286,
											"end": 4287,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4284,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4229,
											"end": 4290,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 4229,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4178,
											"end": 4296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4178,
											"end": 4296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4441,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 4302,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4362,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4394,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4373,
											"end": 4395,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4373,
											"end": 4395,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4404,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4404,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 4404,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4404,
											"end": 4435,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 4404,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4441,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4441,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4441,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4441,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4447,
											"end": 4536,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 4447,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4529,
											"name": "PUSH",
											"source": 14,
											"value": "FFFF"
										},
										{
											"begin": 4516,
											"end": 4521,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4512,
											"end": 4530,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4501,
											"end": 4530,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4501,
											"end": 4530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4447,
											"end": 4536,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4447,
											"end": 4536,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4447,
											"end": 4536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4447,
											"end": 4536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4542,
											"end": 4662,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 4542,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4614,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 4631,
											"end": 4636,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4614,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 4614,
											"end": 4637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4614,
											"end": 4637,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 4614,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4607,
											"end": 4612,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4604,
											"end": 4638,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4594,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 4594,
											"end": 4656,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4652,
											"end": 4653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4650,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4642,
											"end": 4654,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4594,
											"end": 4656,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 4594,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4542,
											"end": 4662,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4542,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4809,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 4668,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4749,
											"end": 4762,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4740,
											"end": 4762,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4740,
											"end": 4762,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 4797,
											"end": 4802,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 4771,
											"end": 4803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4803,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 4771,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4809,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4809,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4815,
											"end": 4901,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 4815,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4850,
											"end": 4857,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4879,
											"end": 4895,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4868,
											"end": 4895,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4868,
											"end": 4895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4815,
											"end": 4901,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4815,
											"end": 4901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4815,
											"end": 4901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4815,
											"end": 4901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 5025,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 4907,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4978,
											"end": 5000,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 4994,
											"end": 4999,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4978,
											"end": 5000,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 4978,
											"end": 5000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4978,
											"end": 5000,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 4978,
											"end": 5000,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4971,
											"end": 4976,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4968,
											"end": 5001,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4958,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 4958,
											"end": 5019,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5005,
											"end": 5017,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4958,
											"end": 5019,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 4958,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 5025,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 5025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5031,
											"end": 5170,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 5031,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5086,
											"end": 5091,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5123,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5111,
											"end": 5124,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 5158,
											"end": 5163,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 5133,
											"end": 5164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5164,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 5133,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5031,
											"end": 5170,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5031,
											"end": 5170,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5031,
											"end": 5170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5031,
											"end": 5170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5031,
											"end": 5170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5266,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 5176,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5210,
											"end": 5217,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5258,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5259,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5239,
											"end": 5260,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5228,
											"end": 5260,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5228,
											"end": 5260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5266,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5266,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5266,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5272,
											"end": 5388,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 5272,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5342,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 5357,
											"end": 5362,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5342,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 5342,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5342,
											"end": 5363,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 5342,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5335,
											"end": 5340,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5364,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5322,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 5322,
											"end": 5382,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5378,
											"end": 5379,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5368,
											"end": 5380,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5322,
											"end": 5382,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 5322,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5272,
											"end": 5388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5272,
											"end": 5388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5531,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 5394,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5448,
											"end": 5453,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5485,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5473,
											"end": 5486,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5486,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5486,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5495,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 5519,
											"end": 5524,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5495,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 5495,
											"end": 5525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5495,
											"end": 5525,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 5495,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5531,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5531,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5651,
											"end": 5657,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5665,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5667,
											"end": 5673,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5681,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5683,
											"end": 5689,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5691,
											"end": 5697,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5748,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5727,
											"end": 5734,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 5723,
											"end": 5746,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5716,
											"end": 5836,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5716,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 5716,
											"end": 5836,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 5755,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5716,
											"end": 5836,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 5716,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 5956,
											"end": 5963,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 5947,
											"end": 5953,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5936,
											"end": 5945,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 5932,
											"end": 5954,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5900,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 5900,
											"end": 5964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5900,
											"end": 5964,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 5900,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5890,
											"end": 5964,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 5890,
											"end": 5964,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5974,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6013,
											"end": 6015,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6039,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 6093,
											"end": 6100,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 6084,
											"end": 6090,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6073,
											"end": 6082,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 6069,
											"end": 6091,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6039,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 6039,
											"end": 6101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6039,
											"end": 6101,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 6039,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6029,
											"end": 6101,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 6029,
											"end": 6101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5984,
											"end": 6111,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6150,
											"end": 6152,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 6231,
											"end": 6238,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 6222,
											"end": 6228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 6207,
											"end": 6229,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 6176,
											"end": 6239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6166,
											"end": 6239,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 6166,
											"end": 6239,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6121,
											"end": 6249,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6288,
											"end": 6290,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6314,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 6369,
											"end": 6376,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 6360,
											"end": 6366,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6358,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 6345,
											"end": 6367,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6314,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 6314,
											"end": 6377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6314,
											"end": 6377,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 6314,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6304,
											"end": 6377,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6304,
											"end": 6377,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6259,
											"end": 6387,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6426,
											"end": 6429,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6453,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 6508,
											"end": 6515,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 6499,
											"end": 6505,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6488,
											"end": 6497,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 6484,
											"end": 6506,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6453,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 6453,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6453,
											"end": 6516,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 6453,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6443,
											"end": 6516,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6443,
											"end": 6516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6397,
											"end": 6526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6565,
											"end": 6568,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 6592,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 6637,
											"end": 6643,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6626,
											"end": 6635,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 6622,
											"end": 6644,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6592,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 6592,
											"end": 6654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6592,
											"end": 6654,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 6592,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6582,
											"end": 6654,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6582,
											"end": 6654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6536,
											"end": 6664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6703,
											"end": 6706,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 6730,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 6781,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6730,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 6730,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6730,
											"end": 6791,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 6730,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6720,
											"end": 6791,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6720,
											"end": 6791,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6674,
											"end": 6801,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 6808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 6932,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 6814,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6851,
											"end": 6858,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6925,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6884,
											"end": 6889,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6880,
											"end": 6926,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6869,
											"end": 6926,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6869,
											"end": 6926,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 6932,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 6932,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 6932,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 6932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6938,
											"end": 7060,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 6938,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7011,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 7029,
											"end": 7034,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7011,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 7011,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7011,
											"end": 7035,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 7011,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7004,
											"end": 7009,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7001,
											"end": 7036,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6991,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 6991,
											"end": 7054,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7050,
											"end": 7051,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7048,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7052,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6991,
											"end": 7054,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 6991,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6938,
											"end": 7060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6938,
											"end": 7060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7066,
											"end": 7209,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 7066,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7123,
											"end": 7128,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7160,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7148,
											"end": 7161,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7139,
											"end": 7161,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7139,
											"end": 7161,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 7197,
											"end": 7202,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 7170,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7203,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 7170,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7066,
											"end": 7209,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7066,
											"end": 7209,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7066,
											"end": 7209,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7066,
											"end": 7209,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7066,
											"end": 7209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7215,
											"end": 7566,
											"name": "tag",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 7215,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7285,
											"end": 7291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7336,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7322,
											"end": 7331,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7313,
											"end": 7320,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7309,
											"end": 7332,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7305,
											"end": 7337,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7302,
											"end": 7421,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7302,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 7302,
											"end": 7421,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7340,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 7340,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 7340,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7340,
											"end": 7419,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 7340,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7302,
											"end": 7421,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 7302,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7460,
											"end": 7461,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 7541,
											"end": 7548,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7538,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7521,
											"end": 7530,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7517,
											"end": 7539,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7485,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 7485,
											"end": 7549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7485,
											"end": 7549,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 7485,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7475,
											"end": 7549,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7475,
											"end": 7549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7431,
											"end": 7559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7215,
											"end": 7566,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7215,
											"end": 7566,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7215,
											"end": 7566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7215,
											"end": 7566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7215,
											"end": 7566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7572,
											"end": 7715,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 7572,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7629,
											"end": 7634,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7660,
											"end": 7666,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7645,
											"end": 7667,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7645,
											"end": 7667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7676,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 7703,
											"end": 7708,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7676,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 7676,
											"end": 7709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7676,
											"end": 7709,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 7676,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7572,
											"end": 7715,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7572,
											"end": 7715,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7572,
											"end": 7715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7572,
											"end": 7715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7572,
											"end": 7715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7721,
											"end": 8072,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7721,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7842,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 7826,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7815,
											"end": 7838,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7811,
											"end": 7843,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7808,
											"end": 7927,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7808,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 7808,
											"end": 7927,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7846,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 7846,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 7846,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7846,
											"end": 7925,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 7846,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7808,
											"end": 7927,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 7808,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7966,
											"end": 7967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 8047,
											"end": 8054,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8027,
											"end": 8036,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8023,
											"end": 8045,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7991,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 7991,
											"end": 8055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7991,
											"end": 8055,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 7991,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8055,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8055,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7937,
											"end": 8065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7721,
											"end": 8072,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7721,
											"end": 8072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7721,
											"end": 8072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7721,
											"end": 8072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7721,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8078,
											"end": 8196,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 8078,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8165,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 8183,
											"end": 8188,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8165,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 8165,
											"end": 8189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8165,
											"end": 8189,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 8165,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8160,
											"end": 8163,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8153,
											"end": 8190,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8078,
											"end": 8196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8078,
											"end": 8196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8078,
											"end": 8196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "tag",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8295,
											"end": 8299,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8333,
											"end": 8335,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8322,
											"end": 8331,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8318,
											"end": 8336,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8336,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 8414,
											"end": 8415,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8412,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8399,
											"end": 8416,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8390,
											"end": 8396,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 8346,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8202,
											"end": 8424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8430,
											"end": 8552,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 8430,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8503,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 8521,
											"end": 8526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8503,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 8503,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8503,
											"end": 8527,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 8503,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8501,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8493,
											"end": 8528,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8483,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 8483,
											"end": 8546,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8542,
											"end": 8543,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8539,
											"end": 8540,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8532,
											"end": 8544,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8483,
											"end": 8546,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 8483,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8430,
											"end": 8552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8430,
											"end": 8552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8558,
											"end": 8701,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 8558,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8615,
											"end": 8620,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8652,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8640,
											"end": 8653,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8631,
											"end": 8653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8631,
											"end": 8653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8662,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 8689,
											"end": 8694,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8662,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 8662,
											"end": 8695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8662,
											"end": 8695,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 8662,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8558,
											"end": 8701,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8558,
											"end": 8701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8558,
											"end": 8701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8558,
											"end": 8701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8558,
											"end": 8701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8707,
											"end": 9058,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 8707,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8805,
											"end": 8812,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8801,
											"end": 8824,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8829,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 8832,
											"end": 8911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 9033,
											"end": 9040,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9024,
											"end": 9030,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9013,
											"end": 9022,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9009,
											"end": 9031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8977,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 8977,
											"end": 9041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8977,
											"end": 9041,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 8977,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8967,
											"end": 9041,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8967,
											"end": 9041,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8923,
											"end": 9051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8707,
											"end": 9058,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8707,
											"end": 9058,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8707,
											"end": 9058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8707,
											"end": 9058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8707,
											"end": 9058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9064,
											"end": 9140,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 9064,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9100,
											"end": 9107,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9134,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9118,
											"end": 9134,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9118,
											"end": 9134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9064,
											"end": 9140,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9064,
											"end": 9140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9064,
											"end": 9140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9064,
											"end": 9140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9146,
											"end": 9702,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 9146,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9185,
											"end": 9192,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 9225,
											"end": 9226,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9208,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 9208,
											"end": 9227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9208,
											"end": 9227,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 9208,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9203,
											"end": 9227,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9203,
											"end": 9227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9241,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 9258,
											"end": 9259,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9241,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 9241,
											"end": 9260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9241,
											"end": 9260,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 9241,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9236,
											"end": 9260,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9236,
											"end": 9260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9292,
											"end": 9293,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9288,
											"end": 9297,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 9334,
											"end": 9345,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 9317,
											"end": 9346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9346,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 9317,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9306,
											"end": 9346,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9306,
											"end": 9346,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9404,
											"end": 9470,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9401,
											"end": 9402,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9398,
											"end": 9471,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9392,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9383,
											"end": 9472,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9380,
											"end": 9495,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9380,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 9380,
											"end": 9495,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 9475,
											"end": 9493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9380,
											"end": 9495,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 9380,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 9646,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9636,
											"end": 9643,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9631,
											"end": 9647,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 9628,
											"end": 9629,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9625,
											"end": 9648,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9605,
											"end": 9606,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9598,
											"end": 9607,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9578,
											"end": 9662,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 9555,
											"end": 9695,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9675,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 9675,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 9675,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9675,
											"end": 9693,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 9675,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9695,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 9555,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9193,
											"end": 9702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9146,
											"end": 9702,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9146,
											"end": 9702,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9146,
											"end": 9702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9146,
											"end": 9702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9146,
											"end": 9702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 10080,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 9708,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9767,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 9784,
											"end": 9785,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9767,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 9767,
											"end": 9786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9767,
											"end": 9786,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 9767,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9762,
											"end": 9786,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9762,
											"end": 9786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9800,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 9817,
											"end": 9818,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9800,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 9800,
											"end": 9819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9800,
											"end": 9819,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 9800,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9795,
											"end": 9819,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9795,
											"end": 9819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9843,
											"end": 9844,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9836,
											"end": 9845,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9828,
											"end": 9845,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9828,
											"end": 9845,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10037,
											"end": 10038,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10031,
											"end": 10035,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10027,
											"end": 10039,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10023,
											"end": 10024,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10021,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10016,
											"end": 10025,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9995,
											"end": 9996,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9989,
											"end": 9993,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9985,
											"end": 9997,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 9980,
											"end": 9981,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9978,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9973,
											"end": 9982,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9966,
											"end": 9983,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9962,
											"end": 9998,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9946,
											"end": 10050,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 9943,
											"end": 10073,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9943,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 9943,
											"end": 10073,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10053,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 10053,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 10053,
											"end": 10071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10053,
											"end": 10071,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 10053,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9943,
											"end": 10073,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 9943,
											"end": 10073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 10080,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 10080,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 10080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 10080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9708,
											"end": 10080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10086,
											"end": 10461,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 10086,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10128,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10144,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 10144,
											"end": 10163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10144,
											"end": 10163,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 10144,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10139,
											"end": 10163,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10139,
											"end": 10163,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10177,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 10194,
											"end": 10195,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10177,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 10177,
											"end": 10196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10177,
											"end": 10196,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 10177,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10172,
											"end": 10196,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10172,
											"end": 10196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10216,
											"end": 10217,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10212,
											"end": 10221,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10205,
											"end": 10221,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10205,
											"end": 10221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10417,
											"end": 10418,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10412,
											"end": 10415,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10408,
											"end": 10419,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10401,
											"end": 10420,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10397,
											"end": 10398,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10395,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10386,
											"end": 10421,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10369,
											"end": 10370,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10364,
											"end": 10367,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10360,
											"end": 10371,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10355,
											"end": 10356,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10353,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10348,
											"end": 10357,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10341,
											"end": 10358,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10372,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10321,
											"end": 10431,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10454,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 10318,
											"end": 10454,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10434,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 10434,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 10434,
											"end": 10452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10434,
											"end": 10452,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 10434,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10454,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 10318,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10086,
											"end": 10461,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10086,
											"end": 10461,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10086,
											"end": 10461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10086,
											"end": 10461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10086,
											"end": 10461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10467,
											"end": 10636,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 10467,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10551,
											"end": 10562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10585,
											"end": 10591,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10580,
											"end": 10583,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10573,
											"end": 10592,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10625,
											"end": 10629,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10620,
											"end": 10623,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10616,
											"end": 10630,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10601,
											"end": 10630,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10601,
											"end": 10630,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10467,
											"end": 10636,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10467,
											"end": 10636,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10467,
											"end": 10636,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10467,
											"end": 10636,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10467,
											"end": 10636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10642,
											"end": 10809,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 10642,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10782,
											"end": 10801,
											"name": "PUSH",
											"source": 14,
											"value": "57726F6E6720696E707574206F72646572000000000000000000000000000000"
										},
										{
											"begin": 10778,
											"end": 10779,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10770,
											"end": 10776,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10766,
											"end": 10780,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10759,
											"end": 10802,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10642,
											"end": 10809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10642,
											"end": 10809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10957,
											"end": 10960,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 11042,
											"end": 11044,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 11037,
											"end": 11040,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10978,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 10978,
											"end": 11045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10978,
											"end": 11045,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 10978,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10971,
											"end": 11045,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10971,
											"end": 11045,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11054,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 11143,
											"end": 11146,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11054,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 11054,
											"end": 11147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11054,
											"end": 11147,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 11054,
											"end": 11147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11172,
											"end": 11174,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11167,
											"end": 11170,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11163,
											"end": 11175,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11156,
											"end": 11175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11156,
											"end": 11175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10815,
											"end": 11181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10815,
											"end": 11181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11353,
											"end": 11357,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11393,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11380,
											"end": 11389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11376,
											"end": 11394,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11368,
											"end": 11394,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11368,
											"end": 11394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11440,
											"end": 11449,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11434,
											"end": 11438,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11430,
											"end": 11450,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11426,
											"end": 11427,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11424,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11411,
											"end": 11428,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11404,
											"end": 11451,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11468,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 11594,
											"end": 11598,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11468,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 11468,
											"end": 11599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11468,
											"end": 11599,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 11468,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11460,
											"end": 11599,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11460,
											"end": 11599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11187,
											"end": 11606,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11187,
											"end": 11606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11612,
											"end": 11714,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 11612,
											"end": 11714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11654,
											"end": 11662,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11701,
											"end": 11706,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11698,
											"end": 11699,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11694,
											"end": 11707,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 11673,
											"end": 11707,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11673,
											"end": 11707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11612,
											"end": 11714,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11612,
											"end": 11714,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11612,
											"end": 11714,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11612,
											"end": 11714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 12568,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 11720,
											"end": 12568,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11781,
											"end": 11786,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11788,
											"end": 11792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11812,
											"end": 11818,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11803,
											"end": 11818,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11803,
											"end": 11818,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11836,
											"end": 11841,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11827,
											"end": 11841,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11827,
											"end": 11841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11850,
											"end": 12562,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 11850,
											"end": 12562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11871,
											"end": 11872,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11861,
											"end": 11869,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11858,
											"end": 11873,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11850,
											"end": 12562,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11850,
											"end": 12562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 11850,
											"end": 12562,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11966,
											"end": 11970,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11961,
											"end": 11964,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 11951,
											"end": 11955,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11948,
											"end": 11972,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11945,
											"end": 11995,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11945,
											"end": 11995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 11945,
											"end": 11995,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11975,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 11975,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 11975,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11975,
											"end": 11993,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 11975,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11945,
											"end": 11995,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 11945,
											"end": 11995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12025,
											"end": 12026,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12015,
											"end": 12023,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12011,
											"end": 12027,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12008,
											"end": 12459,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12008,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 12008,
											"end": 12459,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12440,
											"end": 12444,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12433,
											"end": 12438,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12429,
											"end": 12445,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12420,
											"end": 12445,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12420,
											"end": 12445,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12008,
											"end": 12459,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 12008,
											"end": 12459,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12490,
											"end": 12494,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12484,
											"end": 12488,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12480,
											"end": 12495,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12472,
											"end": 12495,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12472,
											"end": 12495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12520,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 12543,
											"end": 12551,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12520,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 12520,
											"end": 12552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12520,
											"end": 12552,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 12520,
											"end": 12552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12552,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11850,
											"end": 12562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 11850,
											"end": 12562,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11850,
											"end": 12562,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 11850,
											"end": 12562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 12568,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 12568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 12568,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 12568,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 12568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 12568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 12568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 12568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12631,
											"end": 12636,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12797,
											"end": 12805,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12819,
											"end": 12820,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12814,
											"end": 12841,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12814,
											"end": 12841,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 12814,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 12814,
											"end": 12841,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12855,
											"end": 12856,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12850,
											"end": 12880,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12850,
											"end": 12880,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 12850,
											"end": 12880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 12850,
											"end": 12880,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12790,
											"end": 12880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 12790,
											"end": 12880,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12814,
											"end": 12841,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 12814,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12832,
											"end": 12833,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12823,
											"end": 12833,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12823,
											"end": 12833,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12834,
											"end": 12839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12834,
											"end": 12839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 12834,
											"end": 12839,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12850,
											"end": 12880,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 12850,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12868,
											"end": 12872,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12859,
											"end": 12872,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12859,
											"end": 12872,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 12878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 12873,
											"end": 12878,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12790,
											"end": 12880,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 12790,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12790,
											"end": 12880,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12899,
											"end": 12903,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12889,
											"end": 12925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 12889,
											"end": 12925,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12916,
											"end": 12917,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 12917,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12907,
											"end": 12917,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12918,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 12918,
											"end": 12923,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12889,
											"end": 12925,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 12889,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12944,
											"end": 12945,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12935,
											"end": 12945,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12935,
											"end": 12945,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13167,
											"end": 13168,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13161,
											"end": 13165,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13157,
											"end": 13169,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13183,
											"end": 13184,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13178,
											"end": 13239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13178,
											"end": 13239,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13178,
											"end": 13239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 13178,
											"end": 13239,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13253,
											"end": 13254,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13150,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 13150,
											"end": 13311,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13178,
											"end": 13239,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 13178,
											"end": 13239,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13208,
											"end": 13212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13203,
											"end": 13206,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13199,
											"end": 13213,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 13193,
											"end": 13197,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13190,
											"end": 13214,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13187,
											"end": 13237,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13187,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 13187,
											"end": 13237,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13217,
											"end": 13235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 13217,
											"end": 13235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 13217,
											"end": 13235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13217,
											"end": 13235,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 13217,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13187,
											"end": 13237,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 13187,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13178,
											"end": 13239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 13178,
											"end": 13239,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13280,
											"end": 13284,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13275,
											"end": 13278,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13270,
											"end": 13285,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 13264,
											"end": 13268,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13260,
											"end": 13286,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13257,
											"end": 13309,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13257,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 13257,
											"end": 13309,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13289,
											"end": 13307,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 13289,
											"end": 13307,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 13289,
											"end": 13307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13289,
											"end": 13307,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 13289,
											"end": 13307,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13257,
											"end": 13309,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 13257,
											"end": 13309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13150,
											"end": 13311,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 13150,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13150,
											"end": 13311,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13337,
											"end": 13338,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13327,
											"end": 13335,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13323,
											"end": 13339,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13320,
											"end": 13385,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13320,
											"end": 13385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 13320,
											"end": 13385,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13371,
											"end": 13375,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13362,
											"end": 13375,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13362,
											"end": 13375,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13320,
											"end": 13385,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 13320,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13412,
											"end": 13416,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13406,
											"end": 13410,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13417,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 13394,
											"end": 13417,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13394,
											"end": 13417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13438,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 13461,
											"end": 13469,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13438,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 13438,
											"end": 13470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13438,
											"end": 13470,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 13438,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13426,
											"end": 13470,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13426,
											"end": 13470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13550,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 13592,
											"end": 13595,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13582,
											"end": 13590,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13576,
											"end": 13580,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13569,
											"end": 13574,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13550,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 13550,
											"end": 13596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13550,
											"end": 13596,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 13550,
											"end": 13596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13535,
											"end": 13596,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13535,
											"end": 13596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13535,
											"end": 13596,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13535,
											"end": 13596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13647,
											"end": 13651,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13642,
											"end": 13645,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13638,
											"end": 13652,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 13631,
											"end": 13636,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13653,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13624,
											"end": 13625,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13617,
											"end": 13622,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13613,
											"end": 13626,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13609,
											"end": 13654,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13606,
											"end": 13677,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13606,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 13606,
											"end": 13677,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13657,
											"end": 13675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 13657,
											"end": 13675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 13657,
											"end": 13675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13657,
											"end": 13675,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 13657,
											"end": 13675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13606,
											"end": 13677,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 13606,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13729,
											"end": 13733,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13724,
											"end": 13727,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13719,
											"end": 13734,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 13712,
											"end": 13717,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13708,
											"end": 13735,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13704,
											"end": 13705,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13697,
											"end": 13702,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13706,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13689,
											"end": 13736,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13686,
											"end": 13759,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13686,
											"end": 13759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 13686,
											"end": 13759,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13739,
											"end": 13757,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 13739,
											"end": 13757,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 13739,
											"end": 13757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13739,
											"end": 13757,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 13739,
											"end": 13757,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13686,
											"end": 13759,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 13686,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13788,
											"end": 13792,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13781,
											"end": 13786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13777,
											"end": 13793,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 13768,
											"end": 13793,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13768,
											"end": 13793,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 13799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 13799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13805,
											"end": 14150,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 13805,
											"end": 14150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13862,
											"end": 13867,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13886,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 13903,
											"end": 13907,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13886,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 13886,
											"end": 13908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13886,
											"end": 13908,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 13886,
											"end": 13908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13878,
											"end": 13908,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13878,
											"end": 13908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13929,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 13945,
											"end": 13953,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13929,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 13929,
											"end": 13954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13929,
											"end": 13954,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 13929,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13917,
											"end": 13954,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13917,
											"end": 13954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13973,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 14076,
											"end": 14142,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14008,
											"end": 14074,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13998,
											"end": 14006,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13992,
											"end": 13996,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13973,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 13973,
											"end": 14143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13973,
											"end": 14143,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 13973,
											"end": 14143,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13805,
											"end": 14150,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13805,
											"end": 14150,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13805,
											"end": 14150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13805,
											"end": 14150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13805,
											"end": 14150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14156,
											"end": 14320,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 14156,
											"end": 14320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14296,
											"end": 14312,
											"name": "PUSH",
											"source": 14,
											"value": "436F6D706C6578206E756D626572000000000000000000000000000000000000"
										},
										{
											"begin": 14292,
											"end": 14293,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14284,
											"end": 14290,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14280,
											"end": 14294,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14273,
											"end": 14313,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14156,
											"end": 14320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14156,
											"end": 14320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14326,
											"end": 14692,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 14326,
											"end": 14692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14489,
											"end": 14556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 14553,
											"end": 14555,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 14548,
											"end": 14551,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14489,
											"end": 14556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 14489,
											"end": 14556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14489,
											"end": 14556,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 14489,
											"end": 14556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14482,
											"end": 14556,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14482,
											"end": 14556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 14654,
											"end": 14657,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 14565,
											"end": 14658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14658,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 14565,
											"end": 14658,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14683,
											"end": 14685,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14678,
											"end": 14681,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14674,
											"end": 14686,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14667,
											"end": 14686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14667,
											"end": 14686,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14326,
											"end": 14692,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14326,
											"end": 14692,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14326,
											"end": 14692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14326,
											"end": 14692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14698,
											"end": 15117,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 14698,
											"end": 15117,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14864,
											"end": 14868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14902,
											"end": 14904,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14891,
											"end": 14900,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14879,
											"end": 14905,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14879,
											"end": 14905,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14951,
											"end": 14960,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14945,
											"end": 14949,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14941,
											"end": 14961,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 14938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14926,
											"end": 14935,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14922,
											"end": 14939,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14915,
											"end": 14962,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14979,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 15105,
											"end": 15109,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14979,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 14979,
											"end": 15110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14979,
											"end": 15110,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 14979,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14971,
											"end": 15110,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14971,
											"end": 15110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14698,
											"end": 15117,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14698,
											"end": 15117,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14698,
											"end": 15117,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14698,
											"end": 15117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15123,
											"end": 15351,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 15123,
											"end": 15351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15158,
											"end": 15161,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15181,
											"end": 15204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 15198,
											"end": 15203,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15181,
											"end": 15204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 15181,
											"end": 15204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15181,
											"end": 15204,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 15181,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15172,
											"end": 15204,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15172,
											"end": 15204,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15226,
											"end": 15292,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15219,
											"end": 15224,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15216,
											"end": 15293,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15213,
											"end": 15316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 15213,
											"end": 15316,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15296,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 15296,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 15296,
											"end": 15314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15296,
											"end": 15314,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 15296,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15213,
											"end": 15316,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 15213,
											"end": 15316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15339,
											"end": 15344,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15336,
											"end": 15337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15332,
											"end": 15345,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15325,
											"end": 15345,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15325,
											"end": 15345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15123,
											"end": 15351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15123,
											"end": 15351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15123,
											"end": 15351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15123,
											"end": 15351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15742,
											"name": "tag",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 15357,
											"end": 15742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15396,
											"end": 15397,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15413,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 15430,
											"end": 15431,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15413,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 15413,
											"end": 15432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15413,
											"end": 15432,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 15413,
											"end": 15432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15408,
											"end": 15432,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15408,
											"end": 15432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15446,
											"end": 15465,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 15463,
											"end": 15464,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15446,
											"end": 15465,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 15446,
											"end": 15465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15446,
											"end": 15465,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 15446,
											"end": 15465,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15441,
											"end": 15465,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15441,
											"end": 15465,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15484,
											"end": 15485,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15474,
											"end": 15509,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 15474,
											"end": 15509,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15489,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 15489,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 15489,
											"end": 15507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15489,
											"end": 15507,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 15489,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15474,
											"end": 15509,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 15474,
											"end": 15509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15675,
											"end": 15676,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15672,
											"end": 15673,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15668,
											"end": 15677,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15665,
											"end": 15666,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15662,
											"end": 15678,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 15581,
											"end": 15647,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15578,
											"end": 15579,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15575,
											"end": 15648,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 15558,
											"end": 15688,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15555,
											"end": 15711,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15555,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 15555,
											"end": 15711,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 15691,
											"end": 15709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15555,
											"end": 15711,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 15555,
											"end": 15711,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15734,
											"end": 15735,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15731,
											"end": 15732,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15726,
											"end": 15736,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 15721,
											"end": 15736,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15721,
											"end": 15736,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15742,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15742,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15742,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15742,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15748,
											"end": 15928,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 15748,
											"end": 15928,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 15873,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15793,
											"end": 15794,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15786,
											"end": 15874,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15893,
											"end": 15897,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15890,
											"end": 15891,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15883,
											"end": 15898,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15917,
											"end": 15921,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15907,
											"end": 15922,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/ArbCalc.sol",
								"contracts/Reserves.sol",
								"contracts/interfaces/IUniswapV2Pair.sol",
								"contracts/libraries/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getBorrowAmountV2(address,address)": "7d9ada3e",
							"getBorrowAmountV3(address,address)": "44401a24",
							"getLiquidityAndPrice(address)": "1e953b15",
							"getMaxProfitableAmount(address,address)": "21fef881",
							"getPriceRatio(address,address)": "0d83825b",
							"getRelativeLiquidity(address,address)": "9872971a",
							"getReservesV2(address)": "ec0a63d8",
							"getReservesV3(address)": "7232688e",
							"reserves0(address)": "1fdd03cb",
							"reserves1(address)": "b49bbce5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lowerPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"higherPool\",\"type\":\"address\"}],\"name\":\"getBorrowAmountV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lowerPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"higherPool\",\"type\":\"address\"}],\"name\":\"getBorrowAmountV3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getLiquidityAndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceX96\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lowPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highPoolAddress\",\"type\":\"address\"}],\"name\":\"getMaxProfitableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_mpa\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolHigh\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolLow\",\"type\":\"address\"}],\"name\":\"getPriceRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rel\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolB\",\"type\":\"address\"}],\"name\":\"getRelativeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rel\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"getReservesV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"getReservesV3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"reserves0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"reserves1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ArbCalc.sol\":\"ArbitrageCalculator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xaa1c14b0163f67ef49aa7320ec391cacb1b914c9983916948488c2743e9cce46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c65ee59999b69eea344ec2edd7167a272d05570f9747c57b5815f75a46f717df\",\"dweb:/ipfs/QmVd5gxvhRPoRkUNAtfAZdfhmzB9hiD4CFNEWyWGF6ZPxD\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/ArbCalc.sol\":{\"keccak256\":\"0xb73e77060ddb9a6da9fe624831269881ba4c829b8efdcb8b8f8d9e63a1bc5262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78a3a59d2b1e36c262a629cf0e0bd37a3d726aa5633897c2b56bbff84e763a07\",\"dweb:/ipfs/QmbroqJW5cw6BHrsouEFc8THKv54WKWCZf6zF8SMGM6UC2\"]},\"contracts/Reserves.sol\":{\"keccak256\":\"0x002d93c540e66750ef72037cfe2ee678d1c94d5f3689f2daefaebb323c7eb5de\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://d331ae61a42d9ed0db68b0b47556b137c97fc47578e65d1b3fa329702b4187e7\",\"dweb:/ipfs/QmYcytMq6g8HdZDfnLfXHnxpfyvy52x6sHLRMh2NweJXoc\"]},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x6593d3e0444a03aabacb705c16faa5a6e345513f0a6c6a8f159c5e214bb7b385\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4e13b8a298f34db5a1ffcb0e34c517798ff7e23328bc41553281de74d798062d\",\"dweb:/ipfs/QmRPBtk5wnauyJXBDE7SQSMbV1zcDR2ZoM7iBumfZTee76\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0xc2cd0e43f9a44e83139bfb65fcab4a096d1f8865cbd50bd49bbcb40276169e6f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://34ddcea9b696538de5718a9493098e23ef8aa2ef7d8053ad230c38e362a085f5\",\"dweb:/ipfs/QmS1ixQbk4YRpnK253RGvo6uJ9nrnso8JjcfBUcnSWmMPP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Reserves.sol": {
				"Reserves": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "getReservesV2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "getReservesV3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "reserves0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "reserves1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Reserves.sol\":314:1507  contract Reserves{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Reserves.sol\":314:1507  contract Reserves{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1fdd03cb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7232688e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb49bbce5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xec0a63d8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Reserves.sol\":342:569  function reserves0(address pair) external view returns ( uint256 reserve) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":816:1156  function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":581:808  function reserves1(address pair) external view returns ( uint256 reserve) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":1164:1504  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reserves.sol\":342:569  function reserves0(address pair) external view returns ( uint256 reserve) {... */\n    tag_10:\n        /* \"contracts/Reserves.sol\":399:414  uint256 reserve */\n      0x00\n        /* \"contracts/Reserves.sol\":427:446  IUniswapV3Pool pool */\n      dup1\n        /* \"contracts/Reserves.sol\":464:468  pair */\n      dup3\n        /* \"contracts/Reserves.sol\":427:469  IUniswapV3Pool pool = IUniswapV3Pool(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":480:494  address token0 */\n      0x00\n        /* \"contracts/Reserves.sol\":497:501  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":497:508  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/Reserves.sol\":497:510  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/Reserves.sol\":480:510  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":538:544  token0 */\n      dup1\n        /* \"contracts/Reserves.sol\":531:555  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":556:560  pair */\n      dup6\n        /* \"contracts/Reserves.sol\":531:561  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/Reserves.sol\":521:561  reserve = IERC20(token0).balanceOf(pair) */\n      swap3\n      pop\n        /* \"contracts/Reserves.sol\":416:569  {... */\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":342:569  function reserves0(address pair) external view returns ( uint256 reserve) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Reserves.sol\":816:1156  function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_15:\n        /* \"contracts/Reserves.sol\":874:890  uint256 reserve0 */\n      0x00\n        /* \"contracts/Reserves.sol\":892:908  uint256 reserve1 */\n      dup1\n        /* \"contracts/Reserves.sol\":920:939  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/Reserves.sol\":957:961  pair */\n      dup4\n        /* \"contracts/Reserves.sol\":920:962  IUniswapV3Pool pool = IUniswapV3Pool(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":973:987  address token0 */\n      0x00\n        /* \"contracts/Reserves.sol\":990:994  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":990:1001  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/Reserves.sol\":990:1003  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_40:\n        /* \"contracts/Reserves.sol\":973:1003  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1014:1028  address token1 */\n      0x00\n        /* \"contracts/Reserves.sol\":1031:1035  pool */\n      dup3\n        /* \"contracts/Reserves.sol\":1031:1042  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/Reserves.sol\":1031:1044  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"contracts/Reserves.sol\":1014:1044  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1073:1079  token0 */\n      dup2\n        /* \"contracts/Reserves.sol\":1066:1090  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1091:1095  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1066:1096  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"contracts/Reserves.sol\":1055:1096  reserve0 = IERC20(token0).balanceOf(pair) */\n      swap5\n      pop\n        /* \"contracts/Reserves.sol\":1125:1131  token1 */\n      dup1\n        /* \"contracts/Reserves.sol\":1118:1142  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1143:1147  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1118:1148  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_51:\n        /* \"contracts/Reserves.sol\":1107:1148  reserve1 = IERC20(token1).balanceOf(pair) */\n      swap4\n      pop\n        /* \"contracts/Reserves.sol\":909:1156  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":816:1156  function getReservesV3(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Reserves.sol\":581:808  function reserves1(address pair) external view returns ( uint256 reserve) {... */\n    tag_20:\n        /* \"contracts/Reserves.sol\":638:653  uint256 reserve */\n      0x00\n        /* \"contracts/Reserves.sol\":666:685  IUniswapV3Pool pool */\n      dup1\n        /* \"contracts/Reserves.sol\":703:707  pair */\n      dup3\n        /* \"contracts/Reserves.sol\":666:708  IUniswapV3Pool pool = IUniswapV3Pool(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":719:733  address token1 */\n      0x00\n        /* \"contracts/Reserves.sol\":736:740  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":736:747  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/Reserves.sol\":736:749  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_55:\n        /* \"contracts/Reserves.sol\":719:749  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":777:783  token1 */\n      dup1\n        /* \"contracts/Reserves.sol\":770:794  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":795:799  pair */\n      dup6\n        /* \"contracts/Reserves.sol\":770:800  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"contracts/Reserves.sol\":760:800  reserve = IERC20(token1).balanceOf(pair) */\n      swap3\n      pop\n        /* \"contracts/Reserves.sol\":655:808  {... */\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":581:808  function reserves1(address pair) external view returns ( uint256 reserve) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Reserves.sol\":1164:1504  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n    tag_24:\n        /* \"contracts/Reserves.sol\":1222:1238  uint256 reserve0 */\n      0x00\n        /* \"contracts/Reserves.sol\":1240:1256  uint256 reserve1 */\n      dup1\n        /* \"contracts/Reserves.sol\":1268:1287  IUniswapV2Pair pool */\n      0x00\n        /* \"contracts/Reserves.sol\":1305:1309  pair */\n      dup4\n        /* \"contracts/Reserves.sol\":1268:1310  IUniswapV2Pair pool = IUniswapV2Pair(pair) */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1321:1335  address token0 */\n      0x00\n        /* \"contracts/Reserves.sol\":1338:1342  pool */\n      dup2\n        /* \"contracts/Reserves.sol\":1338:1349  pool.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/Reserves.sol\":1338:1351  pool.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_63:\n        /* \"contracts/Reserves.sol\":1321:1351  address token0 = pool.token0() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1362:1376  address token1 */\n      0x00\n        /* \"contracts/Reserves.sol\":1379:1383  pool */\n      dup3\n        /* \"contracts/Reserves.sol\":1379:1390  pool.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/Reserves.sol\":1379:1392  pool.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_66:\n        /* \"contracts/Reserves.sol\":1362:1392  address token1 = pool.token1() */\n      swap1\n      pop\n        /* \"contracts/Reserves.sol\":1421:1427  token0 */\n      dup2\n        /* \"contracts/Reserves.sol\":1414:1438  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1439:1443  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1414:1444  IERC20(token0).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_67:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_70:\n        /* \"contracts/Reserves.sol\":1403:1444  reserve0 = IERC20(token0).balanceOf(pair) */\n      swap5\n      pop\n        /* \"contracts/Reserves.sol\":1473:1479  token1 */\n      dup1\n        /* \"contracts/Reserves.sol\":1466:1490  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Reserves.sol\":1491:1495  pair */\n      dup8\n        /* \"contracts/Reserves.sol\":1466:1496  IERC20(token1).balanceOf(pair) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_74:\n        /* \"contracts/Reserves.sol\":1455:1496  reserve1 = IERC20(token1).balanceOf(pair) */\n      swap4\n      pop\n        /* \"contracts/Reserves.sol\":1257:1504  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Reserves.sol\":1164:1504  function getReservesV2(address pair) public view returns (uint256 reserve0, uint256 reserve1){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_76:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_78:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_79:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_94\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_78\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_80:\n        /* \"#utility.yul\":641:665   */\n      tag_96\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_79\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_97:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_81:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_99\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_80\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_9:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_102\n      tag_76\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":917:1036   */\n    tag_101:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_103\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_81\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_82:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_83:\n        /* \"#utility.yul\":1346:1370   */\n      tag_106\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_82\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_12:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_108\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_83\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1943   */\n    tag_17:\n        /* \"#utility.yul\":1732:1736   */\n      0x00\n        /* \"#utility.yul\":1770:1772   */\n      0x40\n        /* \"#utility.yul\":1759:1768   */\n      dup3\n        /* \"#utility.yul\":1755:1773   */\n      add\n        /* \"#utility.yul\":1747:1773   */\n      swap1\n      pop\n        /* \"#utility.yul\":1783:1854   */\n      tag_110\n        /* \"#utility.yul\":1851:1852   */\n      0x00\n        /* \"#utility.yul\":1840:1849   */\n      dup4\n        /* \"#utility.yul\":1836:1853   */\n      add\n        /* \"#utility.yul\":1827:1833   */\n      dup6\n        /* \"#utility.yul\":1783:1854   */\n      tag_83\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1864:1936   */\n      tag_111\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup4\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1908:1914   */\n      dup5\n        /* \"#utility.yul\":1864:1936   */\n      tag_83\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1611:1943   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2092   */\n    tag_84:\n        /* \"#utility.yul\":2006:2011   */\n      0x00\n        /* \"#utility.yul\":2037:2043   */\n      dup2\n        /* \"#utility.yul\":2031:2044   */\n      mload\n        /* \"#utility.yul\":2022:2044   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2086   */\n      tag_113\n        /* \"#utility.yul\":2080:2085   */\n      dup2\n        /* \"#utility.yul\":2053:2086   */\n      tag_80\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1949:2092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2098:2449   */\n    tag_30:\n        /* \"#utility.yul\":2168:2174   */\n      0x00\n        /* \"#utility.yul\":2217:2219   */\n      0x20\n        /* \"#utility.yul\":2205:2214   */\n      dup3\n        /* \"#utility.yul\":2196:2203   */\n      dup5\n        /* \"#utility.yul\":2192:2215   */\n      sub\n        /* \"#utility.yul\":2188:2220   */\n      slt\n        /* \"#utility.yul\":2185:2304   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":2223:2302   */\n      tag_116\n      tag_76\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2185:2304   */\n    tag_115:\n        /* \"#utility.yul\":2343:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2432   */\n      tag_117\n        /* \"#utility.yul\":2424:2431   */\n      dup5\n        /* \"#utility.yul\":2415:2421   */\n      dup3\n        /* \"#utility.yul\":2404:2413   */\n      dup6\n        /* \"#utility.yul\":2400:2422   */\n      add\n        /* \"#utility.yul\":2368:2432   */\n      tag_84\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2358:2432   */\n      swap2\n      pop\n        /* \"#utility.yul\":2314:2442   */\n      pop\n        /* \"#utility.yul\":2098:2449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2455:2573   */\n    tag_85:\n        /* \"#utility.yul\":2542:2566   */\n      tag_119\n        /* \"#utility.yul\":2560:2565   */\n      dup2\n        /* \"#utility.yul\":2542:2566   */\n      tag_79\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2537:2540   */\n      dup3\n        /* \"#utility.yul\":2530:2567   */\n      mstore\n        /* \"#utility.yul\":2455:2573   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2579:2801   */\n    tag_32:\n        /* \"#utility.yul\":2672:2676   */\n      0x00\n        /* \"#utility.yul\":2710:2712   */\n      0x20\n        /* \"#utility.yul\":2699:2708   */\n      dup3\n        /* \"#utility.yul\":2695:2713   */\n      add\n        /* \"#utility.yul\":2687:2713   */\n      swap1\n      pop\n        /* \"#utility.yul\":2723:2794   */\n      tag_121\n        /* \"#utility.yul\":2791:2792   */\n      0x00\n        /* \"#utility.yul\":2780:2789   */\n      dup4\n        /* \"#utility.yul\":2776:2793   */\n      add\n        /* \"#utility.yul\":2767:2773   */\n      dup5\n        /* \"#utility.yul\":2723:2794   */\n      tag_85\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2579:2801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2807:2929   */\n    tag_86:\n        /* \"#utility.yul\":2880:2904   */\n      tag_123\n        /* \"#utility.yul\":2898:2903   */\n      dup2\n        /* \"#utility.yul\":2880:2904   */\n      tag_82\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2873:2878   */\n      dup2\n        /* \"#utility.yul\":2870:2905   */\n      eq\n        /* \"#utility.yul\":2860:2923   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2919:2920   */\n      0x00\n        /* \"#utility.yul\":2916:2917   */\n      dup1\n        /* \"#utility.yul\":2909:2921   */\n      revert\n        /* \"#utility.yul\":2860:2923   */\n    tag_124:\n        /* \"#utility.yul\":2807:2929   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2935:3078   */\n    tag_87:\n        /* \"#utility.yul\":2992:2997   */\n      0x00\n        /* \"#utility.yul\":3023:3029   */\n      dup2\n        /* \"#utility.yul\":3017:3030   */\n      mload\n        /* \"#utility.yul\":3008:3030   */\n      swap1\n      pop\n        /* \"#utility.yul\":3039:3072   */\n      tag_126\n        /* \"#utility.yul\":3066:3071   */\n      dup2\n        /* \"#utility.yul\":3039:3072   */\n      tag_86\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2935:3078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3084:3435   */\n    tag_36:\n        /* \"#utility.yul\":3154:3160   */\n      0x00\n        /* \"#utility.yul\":3203:3205   */\n      0x20\n        /* \"#utility.yul\":3191:3200   */\n      dup3\n        /* \"#utility.yul\":3182:3189   */\n      dup5\n        /* \"#utility.yul\":3178:3201   */\n      sub\n        /* \"#utility.yul\":3174:3206   */\n      slt\n        /* \"#utility.yul\":3171:3290   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":3209:3288   */\n      tag_129\n      tag_76\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3171:3290   */\n    tag_128:\n        /* \"#utility.yul\":3329:3330   */\n      0x00\n        /* \"#utility.yul\":3354:3418   */\n      tag_130\n        /* \"#utility.yul\":3410:3417   */\n      dup5\n        /* \"#utility.yul\":3401:3407   */\n      dup3\n        /* \"#utility.yul\":3390:3399   */\n      dup6\n        /* \"#utility.yul\":3386:3408   */\n      add\n        /* \"#utility.yul\":3354:3418   */\n      tag_87\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3344:3418   */\n      swap2\n      pop\n        /* \"#utility.yul\":3300:3428   */\n      pop\n        /* \"#utility.yul\":3084:3435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220aee140891aea2acb9f6c68d9078b5beb4e45a34b8fc9fd789fab7830a49d01c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506108938061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631fdd03cb1461004e5780637232688e1461007e578063b49bbce5146100af578063ec0a63d8146100df575b5f80fd5b6100686004803603810190610063919061071e565b610110565b6040516100759190610761565b60405180910390f35b6100986004803603810190610093919061071e565b610206565b6040516100a692919061077a565b60405180910390f35b6100c960048036038101906100c4919061071e565b6103e8565b6040516100d69190610761565b60405180910390f35b6100f960048036038101906100f4919061071e565b6104de565b60405161010792919061077a565b60405180910390f35b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561015f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061018391906107b5565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016101be91906107ef565b602060405180830381865afa1580156101d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101fd9190610832565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610256573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027a91906107b5565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ea91906107b5565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161032591906107ef565b602060405180830381865afa158015610340573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103649190610832565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161039f91906107ef565b602060405180830381865afa1580156103ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103de9190610832565b9350505050915091565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610437573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045b91906107b5565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161049691906107ef565b602060405180830381865afa1580156104b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d59190610832565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055291906107b5565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c291906107b5565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016105fd91906107ef565b602060405180830381865afa158015610618573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063c9190610832565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161067791906107ef565b602060405180830381865afa158015610692573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b69190610832565b9350505050915091565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106ed826106c4565b9050919050565b6106fd816106e3565b8114610707575f80fd5b50565b5f81359050610718816106f4565b92915050565b5f60208284031215610733576107326106c0565b5b5f6107408482850161070a565b91505092915050565b5f819050919050565b61075b81610749565b82525050565b5f6020820190506107745f830184610752565b92915050565b5f60408201905061078d5f830185610752565b61079a6020830184610752565b9392505050565b5f815190506107af816106f4565b92915050565b5f602082840312156107ca576107c96106c0565b5b5f6107d7848285016107a1565b91505092915050565b6107e9816106e3565b82525050565b5f6020820190506108025f8301846107e0565b92915050565b61081181610749565b811461081b575f80fd5b50565b5f8151905061082c81610808565b92915050565b5f60208284031215610847576108466106c0565b5b5f6108548482850161081e565b9150509291505056fea2646970667358221220aee140891aea2acb9f6c68d9078b5beb4e45a34b8fc9fd789fab7830a49d01c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x893 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FDD03CB EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7232688E EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xB49BBCE5 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xEC0A63D8 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP3 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP3 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x618 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6ED DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FD DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x707 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x740 DUP5 DUP3 DUP6 ADD PUSH2 0x70A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75B DUP2 PUSH2 0x749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x774 PUSH0 DUP4 ADD DUP5 PUSH2 0x752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x78D PUSH0 DUP4 ADD DUP6 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x79A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x752 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7AF DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CA JUMPI PUSH2 0x7C9 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D7 DUP5 DUP3 DUP6 ADD PUSH2 0x7A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x802 PUSH0 DUP4 ADD DUP5 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x749 JUMP JUMPDEST DUP2 EQ PUSH2 0x81B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x82C DUP2 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x847 JUMPI PUSH2 0x846 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x854 DUP5 DUP3 DUP6 ADD PUSH2 0x81E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xE1 BLOCKHASH DUP10 BYTE 0xEA 0x2A 0xCB SWAP16 PUSH13 0x68D9078B5BEB4E45A34B8FC9FD PUSH25 0x9FAB7830A49D01C364736F6C634300081A0033000000000000 ",
							"sourceMap": "314:1193:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getReservesV2_1527": {
									"entryPoint": 1246,
									"id": 1527,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getReservesV3_1480": {
									"entryPoint": 518,
									"id": 1480,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserves0_1403": {
									"entryPoint": 272,
									"id": 1403,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@reserves1_1433": {
									"entryPoint": 1000,
									"id": 1433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3438:14",
										"nodeType": "YulBlock",
										"src": "0:3438:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "611:79:14",
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:14",
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:14",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nativeSrc": "670:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nativeSrc": "670:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nativeSrc": "641:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nativeSrc": "631:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nativeSrc": "624:43:14",
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nativeSrc": "621:63:14",
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:14",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nativeSrc": "748:87:14",
													"nodeType": "YulBlock",
													"src": "748:87:14",
													"statements": [
														{
															"nativeSrc": "758:29:14",
															"nodeType": "YulAssignment",
															"src": "758:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:14"
																},
																"nativeSrc": "767:20:14",
																"nodeType": "YulFunctionCall",
																"src": "767:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:14"
																},
																"nativeSrc": "796:33:14",
																"nodeType": "YulFunctionCall",
																"src": "796:33:14"
															},
															"nativeSrc": "796:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:14",
														"nodeType": "YulTypedName",
														"src": "726:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:14",
														"nodeType": "YulTypedName",
														"src": "734:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:14",
														"nodeType": "YulTypedName",
														"src": "742:5:14",
														"type": ""
													}
												],
												"src": "696:139:14"
											},
											{
												"body": {
													"nativeSrc": "907:263:14",
													"nodeType": "YulBlock",
													"src": "907:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:14",
																"nodeType": "YulBlock",
																"src": "953:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:14"
																			},
																			"nativeSrc": "955:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:14"
																		},
																		"nativeSrc": "955:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:14"
																		},
																		"nativeSrc": "924:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:14",
																		"nodeType": "YulLiteral",
																		"src": "949:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:14"
																},
																"nativeSrc": "920:32:14",
																"nodeType": "YulFunctionCall",
																"src": "920:32:14"
															},
															"nativeSrc": "917:119:14",
															"nodeType": "YulIf",
															"src": "917:119:14"
														},
														{
															"nativeSrc": "1046:117:14",
															"nodeType": "YulBlock",
															"src": "1046:117:14",
															"statements": [
																{
																	"nativeSrc": "1061:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:14"
																				},
																				"nativeSrc": "1121:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:14"
																		},
																		"nativeSrc": "1100:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:14",
														"nodeType": "YulTypedName",
														"src": "877:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:14",
														"nodeType": "YulTypedName",
														"src": "888:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:14",
														"nodeType": "YulTypedName",
														"src": "900:6:14",
														"type": ""
													}
												],
												"src": "841:329:14"
											},
											{
												"body": {
													"nativeSrc": "1221:32:14",
													"nodeType": "YulBlock",
													"src": "1221:32:14",
													"statements": [
														{
															"nativeSrc": "1231:16:14",
															"nodeType": "YulAssignment",
															"src": "1231:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:14",
																"nodeType": "YulIdentifier",
																"src": "1242:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:14",
														"nodeType": "YulTypedName",
														"src": "1203:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:14",
														"nodeType": "YulTypedName",
														"src": "1213:7:14",
														"type": ""
													}
												],
												"src": "1176:77:14"
											},
											{
												"body": {
													"nativeSrc": "1324:53:14",
													"nodeType": "YulBlock",
													"src": "1324:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:14"
																		},
																		"nativeSrc": "1346:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:14"
																},
																"nativeSrc": "1334:37:14",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:14"
															},
															"nativeSrc": "1334:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:14",
														"nodeType": "YulTypedName",
														"src": "1312:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:14",
														"nodeType": "YulTypedName",
														"src": "1319:3:14",
														"type": ""
													}
												],
												"src": "1259:118:14"
											},
											{
												"body": {
													"nativeSrc": "1481:124:14",
													"nodeType": "YulBlock",
													"src": "1481:124:14",
													"statements": [
														{
															"nativeSrc": "1491:26:14",
															"nodeType": "YulAssignment",
															"src": "1491:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:14"
																},
																"nativeSrc": "1499:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:14"
																		},
																		"nativeSrc": "1580:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:14"
																},
																"nativeSrc": "1527:71:14",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:14"
															},
															"nativeSrc": "1527:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:14",
														"nodeType": "YulTypedName",
														"src": "1453:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:14",
														"nodeType": "YulTypedName",
														"src": "1465:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:14",
														"nodeType": "YulTypedName",
														"src": "1476:4:14",
														"type": ""
													}
												],
												"src": "1383:222:14"
											},
											{
												"body": {
													"nativeSrc": "1737:206:14",
													"nodeType": "YulBlock",
													"src": "1737:206:14",
													"statements": [
														{
															"nativeSrc": "1747:26:14",
															"nodeType": "YulAssignment",
															"src": "1747:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1759:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1759:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1770:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1770:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1755:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1755:3:14"
																},
																"nativeSrc": "1755:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1755:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1747:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1747:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1827:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1827:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1840:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1840:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1851:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1851:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1836:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1836:3:14"
																		},
																		"nativeSrc": "1836:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1836:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1783:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "1783:43:14"
																},
																"nativeSrc": "1783:71:14",
																"nodeType": "YulFunctionCall",
																"src": "1783:71:14"
															},
															"nativeSrc": "1783:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "1783:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1908:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1908:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1921:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1921:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1932:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1932:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1917:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1917:3:14"
																		},
																		"nativeSrc": "1917:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1917:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1864:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "1864:43:14"
																},
																"nativeSrc": "1864:72:14",
																"nodeType": "YulFunctionCall",
																"src": "1864:72:14"
															},
															"nativeSrc": "1864:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "1864:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1611:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1701:9:14",
														"nodeType": "YulTypedName",
														"src": "1701:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1713:6:14",
														"nodeType": "YulTypedName",
														"src": "1713:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1721:6:14",
														"nodeType": "YulTypedName",
														"src": "1721:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1732:4:14",
														"nodeType": "YulTypedName",
														"src": "1732:4:14",
														"type": ""
													}
												],
												"src": "1611:332:14"
											},
											{
												"body": {
													"nativeSrc": "2012:80:14",
													"nodeType": "YulBlock",
													"src": "2012:80:14",
													"statements": [
														{
															"nativeSrc": "2022:22:14",
															"nodeType": "YulAssignment",
															"src": "2022:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2037:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2037:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2031:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2031:5:14"
																},
																"nativeSrc": "2031:13:14",
																"nodeType": "YulFunctionCall",
																"src": "2031:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2022:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2022:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2080:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2080:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2053:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2053:26:14"
																},
																"nativeSrc": "2053:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2053:33:14"
															},
															"nativeSrc": "2053:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2053:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1949:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1990:6:14",
														"nodeType": "YulTypedName",
														"src": "1990:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1998:3:14",
														"nodeType": "YulTypedName",
														"src": "1998:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2006:5:14",
														"nodeType": "YulTypedName",
														"src": "2006:5:14",
														"type": ""
													}
												],
												"src": "1949:143:14"
											},
											{
												"body": {
													"nativeSrc": "2175:274:14",
													"nodeType": "YulBlock",
													"src": "2175:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2221:83:14",
																"nodeType": "YulBlock",
																"src": "2221:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2223:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2223:77:14"
																			},
																			"nativeSrc": "2223:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2223:79:14"
																		},
																		"nativeSrc": "2223:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2196:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2196:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2205:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2205:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2192:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2192:3:14"
																		},
																		"nativeSrc": "2192:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2192:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2217:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2217:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2188:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2188:3:14"
																},
																"nativeSrc": "2188:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2188:32:14"
															},
															"nativeSrc": "2185:119:14",
															"nodeType": "YulIf",
															"src": "2185:119:14"
														},
														{
															"nativeSrc": "2314:128:14",
															"nodeType": "YulBlock",
															"src": "2314:128:14",
															"statements": [
																{
																	"nativeSrc": "2329:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2329:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2343:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2343:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2333:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2333:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2358:74:14",
																	"nodeType": "YulAssignment",
																	"src": "2358:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2404:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2404:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2415:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2415:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2400:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2400:3:14"
																				},
																				"nativeSrc": "2400:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2400:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2424:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2424:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2368:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "2368:31:14"
																		},
																		"nativeSrc": "2368:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2368:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2358:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2358:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "2098:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2145:9:14",
														"nodeType": "YulTypedName",
														"src": "2145:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2156:7:14",
														"nodeType": "YulTypedName",
														"src": "2156:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2168:6:14",
														"nodeType": "YulTypedName",
														"src": "2168:6:14",
														"type": ""
													}
												],
												"src": "2098:351:14"
											},
											{
												"body": {
													"nativeSrc": "2520:53:14",
													"nodeType": "YulBlock",
													"src": "2520:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2537:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2537:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2560:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2560:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2542:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "2542:17:14"
																		},
																		"nativeSrc": "2542:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2542:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2530:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:14"
																},
																"nativeSrc": "2530:37:14",
																"nodeType": "YulFunctionCall",
																"src": "2530:37:14"
															},
															"nativeSrc": "2530:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "2530:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2455:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2508:5:14",
														"nodeType": "YulTypedName",
														"src": "2508:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2515:3:14",
														"nodeType": "YulTypedName",
														"src": "2515:3:14",
														"type": ""
													}
												],
												"src": "2455:118:14"
											},
											{
												"body": {
													"nativeSrc": "2677:124:14",
													"nodeType": "YulBlock",
													"src": "2677:124:14",
													"statements": [
														{
															"nativeSrc": "2687:26:14",
															"nodeType": "YulAssignment",
															"src": "2687:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2699:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2699:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2710:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2695:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:14"
																},
																"nativeSrc": "2695:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2695:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2687:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2687:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2767:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2767:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2780:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2780:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2791:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2791:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2776:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2776:3:14"
																		},
																		"nativeSrc": "2776:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2776:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2723:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2723:43:14"
																},
																"nativeSrc": "2723:71:14",
																"nodeType": "YulFunctionCall",
																"src": "2723:71:14"
															},
															"nativeSrc": "2723:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "2723:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2579:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2649:9:14",
														"nodeType": "YulTypedName",
														"src": "2649:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2661:6:14",
														"nodeType": "YulTypedName",
														"src": "2661:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2672:4:14",
														"nodeType": "YulTypedName",
														"src": "2672:4:14",
														"type": ""
													}
												],
												"src": "2579:222:14"
											},
											{
												"body": {
													"nativeSrc": "2850:79:14",
													"nodeType": "YulBlock",
													"src": "2850:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2907:16:14",
																"nodeType": "YulBlock",
																"src": "2907:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2919:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2919:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2909:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2909:6:14"
																			},
																			"nativeSrc": "2909:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2909:12:14"
																		},
																		"nativeSrc": "2909:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2909:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2873:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2873:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2898:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2898:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2880:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2880:17:14"
																				},
																				"nativeSrc": "2880:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2880:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2870:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2870:2:14"
																		},
																		"nativeSrc": "2870:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2870:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2863:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:14"
																},
																"nativeSrc": "2863:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2863:43:14"
															},
															"nativeSrc": "2860:63:14",
															"nodeType": "YulIf",
															"src": "2860:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2807:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2843:5:14",
														"nodeType": "YulTypedName",
														"src": "2843:5:14",
														"type": ""
													}
												],
												"src": "2807:122:14"
											},
											{
												"body": {
													"nativeSrc": "2998:80:14",
													"nodeType": "YulBlock",
													"src": "2998:80:14",
													"statements": [
														{
															"nativeSrc": "3008:22:14",
															"nodeType": "YulAssignment",
															"src": "3008:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3023:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3017:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3017:5:14"
																},
																"nativeSrc": "3017:13:14",
																"nodeType": "YulFunctionCall",
																"src": "3017:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3008:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3008:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3066:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3066:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3039:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3039:26:14"
																},
																"nativeSrc": "3039:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3039:33:14"
															},
															"nativeSrc": "3039:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3039:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2935:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2976:6:14",
														"nodeType": "YulTypedName",
														"src": "2976:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2984:3:14",
														"nodeType": "YulTypedName",
														"src": "2984:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2992:5:14",
														"nodeType": "YulTypedName",
														"src": "2992:5:14",
														"type": ""
													}
												],
												"src": "2935:143:14"
											},
											{
												"body": {
													"nativeSrc": "3161:274:14",
													"nodeType": "YulBlock",
													"src": "3161:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3207:83:14",
																"nodeType": "YulBlock",
																"src": "3207:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3209:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3209:77:14"
																			},
																			"nativeSrc": "3209:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3209:79:14"
																		},
																		"nativeSrc": "3209:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3209:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3182:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3182:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3191:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3178:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3178:3:14"
																		},
																		"nativeSrc": "3178:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3178:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3203:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3203:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3174:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3174:3:14"
																},
																"nativeSrc": "3174:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3174:32:14"
															},
															"nativeSrc": "3171:119:14",
															"nodeType": "YulIf",
															"src": "3171:119:14"
														},
														{
															"nativeSrc": "3300:128:14",
															"nodeType": "YulBlock",
															"src": "3300:128:14",
															"statements": [
																{
																	"nativeSrc": "3315:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3315:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3329:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3329:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3319:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3319:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3344:74:14",
																	"nodeType": "YulAssignment",
																	"src": "3344:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3390:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3401:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3401:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:14"
																				},
																				"nativeSrc": "3386:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3410:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3354:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "3354:31:14"
																		},
																		"nativeSrc": "3354:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3354:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3344:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3344:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3084:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3131:9:14",
														"nodeType": "YulTypedName",
														"src": "3131:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3142:7:14",
														"nodeType": "YulTypedName",
														"src": "3142:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3154:6:14",
														"nodeType": "YulTypedName",
														"src": "3154:6:14",
														"type": ""
													}
												],
												"src": "3084:351:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631fdd03cb1461004e5780637232688e1461007e578063b49bbce5146100af578063ec0a63d8146100df575b5f80fd5b6100686004803603810190610063919061071e565b610110565b6040516100759190610761565b60405180910390f35b6100986004803603810190610093919061071e565b610206565b6040516100a692919061077a565b60405180910390f35b6100c960048036038101906100c4919061071e565b6103e8565b6040516100d69190610761565b60405180910390f35b6100f960048036038101906100f4919061071e565b6104de565b60405161010792919061077a565b60405180910390f35b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561015f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061018391906107b5565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016101be91906107ef565b602060405180830381865afa1580156101d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101fd9190610832565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610256573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027a91906107b5565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ea91906107b5565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161032591906107ef565b602060405180830381865afa158015610340573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103649190610832565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161039f91906107ef565b602060405180830381865afa1580156103ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103de9190610832565b9350505050915091565b5f808290505f8173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610437573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045b91906107b5565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161049691906107ef565b602060405180830381865afa1580156104b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d59190610832565b92505050919050565b5f805f8390505f8173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055291906107b5565b90505f8273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c291906107b5565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016105fd91906107ef565b602060405180830381865afa158015610618573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063c9190610832565b94508073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161067791906107ef565b602060405180830381865afa158015610692573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b69190610832565b9350505050915091565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106ed826106c4565b9050919050565b6106fd816106e3565b8114610707575f80fd5b50565b5f81359050610718816106f4565b92915050565b5f60208284031215610733576107326106c0565b5b5f6107408482850161070a565b91505092915050565b5f819050919050565b61075b81610749565b82525050565b5f6020820190506107745f830184610752565b92915050565b5f60408201905061078d5f830185610752565b61079a6020830184610752565b9392505050565b5f815190506107af816106f4565b92915050565b5f602082840312156107ca576107c96106c0565b5b5f6107d7848285016107a1565b91505092915050565b6107e9816106e3565b82525050565b5f6020820190506108025f8301846107e0565b92915050565b61081181610749565b811461081b575f80fd5b50565b5f8151905061082c81610808565b92915050565b5f60208284031215610847576108466106c0565b5b5f6108548482850161081e565b9150509291505056fea2646970667358221220aee140891aea2acb9f6c68d9078b5beb4e45a34b8fc9fd789fab7830a49d01c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FDD03CB EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7232688E EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xB49BBCE5 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xEC0A63D8 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP3 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP3 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x618 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP5 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6ED DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FD DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x707 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x718 DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x740 DUP5 DUP3 DUP6 ADD PUSH2 0x70A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75B DUP2 PUSH2 0x749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x774 PUSH0 DUP4 ADD DUP5 PUSH2 0x752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x78D PUSH0 DUP4 ADD DUP6 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x79A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x752 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7AF DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CA JUMPI PUSH2 0x7C9 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D7 DUP5 DUP3 DUP6 ADD PUSH2 0x7A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x802 PUSH0 DUP4 ADD DUP5 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x749 JUMP JUMPDEST DUP2 EQ PUSH2 0x81B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x82C DUP2 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x847 JUMPI PUSH2 0x846 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x854 DUP5 DUP3 DUP6 ADD PUSH2 0x81E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xE1 BLOCKHASH DUP10 BYTE 0xEA 0x2A 0xCB SWAP16 PUSH13 0x68D9078B5BEB4E45A34B8FC9FD PUSH25 0x9FAB7830A49D01C364736F6C634300081A0033000000000000 ",
							"sourceMap": "314:1193:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;342:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;816:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;581:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1164:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;342:227;399:15;427:19;464:4;427:42;;480:14;497:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;480:30;;538:6;531:24;;;556:4;531:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;521:40;;416:153;;342:227;;;:::o;816:340::-;874:16;892;920:19;957:4;920:42;;973:14;990:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;973:30;;1014:14;1031:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1014:30;;1073:6;1066:24;;;1091:4;1066:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1055:41;;1125:6;1118:24;;;1143:4;1118:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1107:41;;909:247;;;816:340;;;:::o;581:227::-;638:15;666:19;703:4;666:42;;719:14;736:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:30;;777:6;770:24;;;795:4;770:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;760:40;;655:153;;581:227;;;:::o;1164:340::-;1222:16;1240;1268:19;1305:4;1268:42;;1321:14;1338:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1321:30;;1362:14;1379:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1362:30;;1421:6;1414:24;;;1439:4;1414:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1403:41;;1473:6;1466:24;;;1491:4;1466:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1455:41;;1257:247;;;1164:340;;;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:332::-;1732:4;1770:2;1759:9;1755:18;1747:26;;1783:71;1851:1;1840:9;1836:17;1827:6;1783:71;:::i;:::-;1864:72;1932:2;1921:9;1917:18;1908:6;1864:72;:::i;:::-;1611:332;;;;;:::o;1949:143::-;2006:5;2037:6;2031:13;2022:22;;2053:33;2080:5;2053:33;:::i;:::-;1949:143;;;;:::o;2098:351::-;2168:6;2217:2;2205:9;2196:7;2192:23;2188:32;2185:119;;;2223:79;;:::i;:::-;2185:119;2343:1;2368:64;2424:7;2415:6;2404:9;2400:22;2368:64;:::i;:::-;2358:74;;2314:128;2098:351;;;;:::o;2455:118::-;2542:24;2560:5;2542:24;:::i;:::-;2537:3;2530:37;2455:118;;:::o;2579:222::-;2672:4;2710:2;2699:9;2695:18;2687:26;;2723:71;2791:1;2780:9;2776:17;2767:6;2723:71;:::i;:::-;2579:222;;;;:::o;2807:122::-;2880:24;2898:5;2880:24;:::i;:::-;2873:5;2870:35;2860:63;;2919:1;2916;2909:12;2860:63;2807:122;:::o;2935:143::-;2992:5;3023:6;3017:13;3008:22;;3039:33;3066:5;3039:33;:::i;:::-;2935:143;;;;:::o;3084:351::-;3154:6;3203:2;3191:9;3182:7;3178:23;3174:32;3171:119;;;3209:79;;:::i;:::-;3171:119;3329:1;3354:64;3410:7;3401:6;3390:9;3386:22;3354:64;:::i;:::-;3344:74;;3300:128;3084:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "439000",
								"executionCost": "472",
								"totalCost": "439472"
							},
							"external": {
								"getReservesV2(address)": "infinite",
								"getReservesV3(address)": "infinite",
								"reserves0(address)": "infinite",
								"reserves1(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 1507,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aee140891aea2acb9f6c68d9078b5beb4e45a34b8fc9fd789fab7830a49d01c364736f6c634300081a0033",
									".code": [
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "1FDD03CB"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "7232688E"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "B49BBCE5"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "EC0A63D8"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 1507,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 342,
											"end": 569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 399,
											"end": 414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 464,
											"end": 468,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 427,
											"end": 469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 427,
											"end": 469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 501,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 508,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 508,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 497,
											"end": 508,
											"name": "PUSH",
											"source": 11,
											"value": "DFE1681"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 497,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 510,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 497,
											"end": 510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 555,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 531,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 556,
											"end": 560,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 531,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 531,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 531,
											"end": 561,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 531,
											"end": 561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 521,
											"end": 561,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 521,
											"end": 561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 416,
											"end": 569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 342,
											"end": 569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 890,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 908,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 961,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 920,
											"end": 962,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 920,
											"end": 962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 973,
											"end": 987,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "PUSH",
											"source": 11,
											"value": "DFE1681"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 990,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1028,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "PUSH",
											"source": 11,
											"value": "D21220A7"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1031,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1091,
											"end": 1095,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1066,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1066,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1055,
											"end": 1096,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1055,
											"end": 1096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1118,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1118,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1118,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1148,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 1156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 1156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 1156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 1156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 638,
											"end": 653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 685,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 703,
											"end": 707,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 666,
											"end": 708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 666,
											"end": 708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 733,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 747,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 736,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "D21220A7"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 736,
											"end": 749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 736,
											"end": 749,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 794,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 770,
											"end": 794,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 795,
											"end": 799,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 770,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 770,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 770,
											"end": 800,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 770,
											"end": 800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 760,
											"end": 800,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 760,
											"end": 800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 655,
											"end": 808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 655,
											"end": 808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 581,
											"end": 808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1238,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1256,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1309,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1321,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "PUSH",
											"source": 11,
											"value": "DFE1681"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1338,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "PUSH",
											"source": 11,
											"value": "D21220A7"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1379,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1379,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1438,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1438,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1438,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1439,
											"end": 1443,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1414,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1414,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1414,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1490,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1491,
											"end": 1495,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1466,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1466,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1496,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1772,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 1783,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 1864,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1611,
											"end": 1943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2022,
											"end": 2044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2022,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 2080,
											"end": 2085,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2053,
											"end": 2086,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 2053,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 2092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 2092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2214,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2196,
											"end": 2203,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2192,
											"end": 2215,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2188,
											"end": 2220,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2223,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 2223,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 2223,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2223,
											"end": 2302,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 2223,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 2185,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2343,
											"end": 2344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 2424,
											"end": 2431,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2415,
											"end": 2421,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2368,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 2368,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2368,
											"end": 2432,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 2368,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2358,
											"end": 2432,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2358,
											"end": 2432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2442,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2098,
											"end": 2449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2098,
											"end": 2449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2455,
											"end": 2573,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 2455,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2542,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 2560,
											"end": 2565,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2542,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 2542,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2542,
											"end": 2566,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 2542,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2567,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2455,
											"end": 2573,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2455,
											"end": 2573,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2455,
											"end": 2573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2695,
											"end": 2713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2687,
											"end": 2713,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2687,
											"end": 2713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2776,
											"end": 2793,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 2723,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2801,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2929,
											"name": "tag",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 2807,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 2898,
											"end": 2903,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 2880,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2904,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 2880,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2870,
											"end": 2905,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2919,
											"end": 2920,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2917,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2909,
											"end": 2921,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2929,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2992,
											"end": 2997,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3008,
											"end": 3030,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3008,
											"end": 3030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 3039,
											"end": 3072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3072,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3039,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2935,
											"end": 3078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2935,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3200,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3189,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3201,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3174,
											"end": 3206,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3209,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 3209,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 3209,
											"end": 3288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3209,
											"end": 3288,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 3209,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 3171,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3386,
											"end": 3408,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 3354,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3418,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3344,
											"end": 3418,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3300,
											"end": 3428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/ArbCalc.sol",
								"contracts/Reserves.sol",
								"contracts/interfaces/IUniswapV2Pair.sol",
								"contracts/libraries/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getReservesV2(address)": "ec0a63d8",
							"getReservesV3(address)": "7232688e",
							"reserves0(address)": "1fdd03cb",
							"reserves1(address)": "b49bbce5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"getReservesV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"getReservesV3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"reserves0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"reserves1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Reserves.sol\":\"Reserves\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xaa1c14b0163f67ef49aa7320ec391cacb1b914c9983916948488c2743e9cce46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c65ee59999b69eea344ec2edd7167a272d05570f9747c57b5815f75a46f717df\",\"dweb:/ipfs/QmVd5gxvhRPoRkUNAtfAZdfhmzB9hiD4CFNEWyWGF6ZPxD\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x884e8a85c3b9a93993b7f7ad3c89a020a6a4f7065f0f7be02936ae1d089d0511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d679969fff829deee635179a624a2504cf07b2d9f98f168143a6722b6b90e04d\",\"dweb:/ipfs/QmeVQWgpDxBiPnm71caeFauBszYn7R8bdQKsE1Z5VFFgEM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/Reserves.sol\":{\"keccak256\":\"0x002d93c540e66750ef72037cfe2ee678d1c94d5f3689f2daefaebb323c7eb5de\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://d331ae61a42d9ed0db68b0b47556b137c97fc47578e65d1b3fa329702b4187e7\",\"dweb:/ipfs/QmYcytMq6g8HdZDfnLfXHnxpfyvy52x6sHLRMh2NweJXoc\"]},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x6593d3e0444a03aabacb705c16faa5a6e345513f0a6c6a8f159c5e214bb7b385\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4e13b8a298f34db5a1ffcb0e34c517798ff7e23328bc41553281de74d798062d\",\"dweb:/ipfs/QmRPBtk5wnauyJXBDE7SQSMbV1zcDR2ZoM7iBumfZTee76\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x6593d3e0444a03aabacb705c16faa5a6e345513f0a6c6a8f159c5e214bb7b385\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4e13b8a298f34db5a1ffcb0e34c517798ff7e23328bc41553281de74d798062d\",\"dweb:/ipfs/QmRPBtk5wnauyJXBDE7SQSMbV1zcDR2ZoM7iBumfZTee76\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Math.sol": {
				"MyMathLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Math.sol\":67:1045  library MyMathLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Math.sol\":67:1045  library MyMathLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f35a39f16d508688025553cb2566bebb34492fd10289919b4924ad2852f91a9764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f35a39f16d508688025553cb2566bebb34492fd10289919b4924ad2852f91a9764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN GAS CODECOPY CALL PUSH14 0x508688025553CB2566BEBB34492F 0xD1 MUL DUP10 SWAP2 SWAP12 BLOBHASH 0x24 0xAD 0x28 MSTORE 0xF9 BYTE SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "67:978:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f35a39f16d508688025553cb2566bebb34492fd10289919b4924ad2852f91a9764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN GAS CODECOPY CALL PUSH14 0x508688025553CB2566BEBB34492F 0xD1 MUL DUP10 SWAP2 SWAP12 BLOBHASH 0x24 0xAD 0x28 MSTORE 0xF9 BYTE SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "67:978:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 67,
									"end": 1045,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f35a39f16d508688025553cb2566bebb34492fd10289919b4924ad2852f91a9764736f6c634300081a0033",
									".code": [
										{
											"begin": 67,
											"end": 1045,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 67,
											"end": 1045,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 67,
											"end": 1045,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 67,
											"end": 1045,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 67,
											"end": 1045,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 1045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 67,
											"end": 1045,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 1045,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 67,
											"end": 1045,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/ArbCalc.sol",
								"contracts/Reserves.sol",
								"contracts/interfaces/IUniswapV2Pair.sol",
								"contracts/libraries/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Math.sol\":\"MyMathLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Math.sol\":{\"keccak256\":\"0xc2cd0e43f9a44e83139bfb65fcab4a096d1f8865cbd50bd49bbcb40276169e6f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://34ddcea9b696538de5718a9493098e23ef8aa2ef7d8053ad230c38e362a085f5\",\"dweb:/ipfs/QmS1ixQbk4YRpnK253RGvo6uJ9nrnso8JjcfBUcnSWmMPP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							277
						],
						"IUniswapV3PoolActions": [
							373
						],
						"IUniswapV3PoolDerivedState": [
							404
						],
						"IUniswapV3PoolEvents": [
							523
						],
						"IUniswapV3PoolImmutables": [
							563
						],
						"IUniswapV3PoolOwnerActions": [
							589
						],
						"IUniswapV3PoolState": [
							697
						]
					},
					"id": 278,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 278,
							"sourceUnit": 564,
							"src": "71:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 278,
							"sourceUnit": 698,
							"src": "117:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 278,
							"sourceUnit": 405,
							"src": "158:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 278,
							"sourceUnit": 374,
							"src": "206:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 262,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 278,
							"sourceUnit": 590,
							"src": "249:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 263,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 278,
							"sourceUnit": 524,
							"src": "297:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 265,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 563,
										"src": "637:24:3"
									},
									"id": 266,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:3"
								},
								{
									"baseName": {
										"id": 267,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 697,
										"src": "667:19:3"
									},
									"id": 268,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:3"
								},
								{
									"baseName": {
										"id": 269,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 404,
										"src": "692:26:3"
									},
									"id": 270,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:3"
								},
								{
									"baseName": {
										"id": 271,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 373,
										"src": "724:21:3"
									},
									"id": 272,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:3"
								},
								{
									"baseName": {
										"id": 273,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 589,
										"src": "751:26:3"
									},
									"id": 274,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:3"
								},
								{
									"baseName": {
										"id": 275,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 523,
										"src": "783:20:3"
									},
									"id": 276,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:3"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 264,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:3",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 277,
							"linearizedBaseContracts": [
								277,
								523,
								589,
								373,
								404,
								697,
								563
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 278,
							"src": "605:203:3",
							"usedErrors": [],
							"usedEvents": [
								414,
								431,
								446,
								461,
								478,
								493,
								500,
								511,
								522
							]
						}
					],
					"src": "45:764:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							373
						]
					},
					"id": 374,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 279,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:4",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 373,
							"linearizedBaseContracts": [
								373
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:4",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "442:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 282,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:4"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:4"
									},
									"scope": 373,
									"src": "422:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:4",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1536:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1563:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 290,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1588:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 292,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1613:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 294,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1637:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:4"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1681:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1698:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:4"
									},
									"scope": 373,
									"src": "1513:202:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:4",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2805:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2832:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 308,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2857:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 310,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2882:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 312,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2916:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 314,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:4"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2965:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 317,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 319,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:4"
									},
									"scope": 373,
									"src": "2779:220:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:4",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 324,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3689:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 326,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3714:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 328,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3753:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3770:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:4"
									},
									"scope": 373,
									"src": "3641:146:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:4",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "4836:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "4863:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "4888:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 342,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "4920:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 344,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "4955:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:4"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "4999:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 349,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "5015:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 351,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:4"
									},
									"scope": 373,
									"src": "4813:218:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:4",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5723:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5775:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5800:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:4"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:4"
									},
									"scope": 373,
									"src": "5699:136:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:4",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "6257:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 368,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:4"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:4"
									},
									"scope": 373,
									"src": "6213:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 374,
							"src": "173:6130:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							404
						]
					},
					"id": 405,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 375,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 376,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:5",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 404,
							"linearizedBaseContracts": [
								404
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:5",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1403:29:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 378,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 379,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:5"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1481:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 382,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 383,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1513:51:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 385,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 386,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:5"
									},
									"scope": 404,
									"src": "1386:180:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:5",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2383:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 391,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 393,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:5"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2477:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 396,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:5",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2517:37:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 398,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2568:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 400,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:5"
									},
									"scope": 404,
									"src": "2348:251:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 405,
							"src": "293:2308:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							523
						]
					},
					"id": 524,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 406,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 407,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:6",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 523,
							"linearizedBaseContracts": [
								523
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:6",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 414,
									"name": "Initialize",
									"nameLocation": "551:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "562:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 409,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "584:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 411,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:6"
									},
									"src": "545:51:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:6",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 431,
									"name": "Mint",
									"nameLocation": "1164:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1178:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1202:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1233:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 420,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1266:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 422,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1299:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 424,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1323:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1348:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:6"
									},
									"src": "1158:212:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:6",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 446,
									"name": "Collect",
									"nameLocation": "1880:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1897:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1928:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1955:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 437,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1988:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 439,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2021:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 441,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2046:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 443,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:6"
									},
									"src": "1874:194:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:6",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 461,
									"name": "Burn",
									"nameLocation": "2608:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2622:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2653:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 450,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2686:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 452,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2719:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 454,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2743:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2768:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:6"
									},
									"src": "2602:188:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:6",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 478,
									"name": "Swap",
									"nameLocation": "3407:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3421:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3453:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 467,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3512:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 469,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3536:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 471,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3566:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 473,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3593:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 475,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:6"
									},
									"src": "3401:209:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:6",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 493,
									"name": "Flash",
									"nameLocation": "4189:5:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4204:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4236:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4271:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4296:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4321:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:6"
									},
									"src": "4183:181:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:6",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 500,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "4876:36:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 495,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "4922:36:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 497,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:6"
									},
									"src": "4826:139:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:6",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 511,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "5367:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 502,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "5390:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 504,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "5413:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 506,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "5436:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 508,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:6"
									},
									"src": "5346:113:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:6",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 522,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5876:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5900:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5927:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 517,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5944:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 519,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:6"
									},
									"src": "5854:107:6"
								}
							],
							"scope": 524,
							"src": "159:5804:6",
							"usedErrors": [],
							"usedEvents": [
								414,
								431,
								446,
								461,
								478,
								493,
								500,
								511,
								522
							]
						}
					],
					"src": "45:5919:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							563
						]
					},
					"id": 564,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 525,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:7",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 563,
							"linearizedBaseContracts": [
								563
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:7",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:7"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "450:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:7"
									},
									"scope": 563,
									"src": "408:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:7",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:7"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "624:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:7"
									},
									"scope": 563,
									"src": "583:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:7",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:7"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "799:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:7"
									},
									"scope": 563,
									"src": "758:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:7",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:7"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "941:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 547,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:7"
									},
									"scope": 563,
									"src": "903:46:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:7",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:7"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1364:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 553,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:7"
									},
									"scope": 563,
									"src": "1318:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:7",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:7"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1799:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 559,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:7"
									},
									"scope": 563,
									"src": "1745:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 564,
							"src": "224:1586:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							589
						]
					},
					"id": 590,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 565,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 566,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:8",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 589,
							"linearizedBaseContracts": [
								589
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:8",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "464:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 568,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "484:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 570,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:8"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:8"
									},
									"scope": 589,
									"src": "440:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:8",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1041:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1068:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 578,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1102:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 580,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:8"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1151:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 583,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1168:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 585,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:8"
									},
									"scope": 589,
									"src": "1007:178:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 590,
							"src": "187:1000:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:8"
				},
				"id": 8
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							697
						]
					},
					"id": 698,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 591,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 592,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:9",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 697,
							"linearizedBaseContracts": [
								697
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:9",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:9"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1498:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 595,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1532:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 597,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1556:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 599,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:9",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1593:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 601,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:9",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1636:33:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 603,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1683:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 605,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1714:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:9"
									},
									"scope": 697,
									"src": "1421:317:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:9",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:9"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1972:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:9"
									},
									"scope": 697,
									"src": "1917:64:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:9",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:9"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "2215:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:9"
									},
									"scope": 697,
									"src": "2160:64:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:9",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:9"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2429:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 625,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2445:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 627,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:9"
									},
									"scope": 697,
									"src": "2382:79:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:9",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:9"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "2666:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 633,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:9"
									},
									"scope": 697,
									"src": "2622:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:9",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3945:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 638,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:9"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4017:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 641,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4053:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 643,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4086:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4129:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4172:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 649,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:9",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4213:38:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 651,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4265:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 653,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4300:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:9"
									},
									"scope": 697,
									"src": "3930:397:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:9",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "4457:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 660,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:9"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "4500:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:9"
									},
									"scope": 697,
									"src": "4437:72:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:9",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "5239:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 668,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:9"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "5312:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 671,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:9",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "5344:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:9",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "5390:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "5436:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 677,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "5469:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 679,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:9"
									},
									"scope": 697,
									"src": "5220:279:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:9",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6281:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:9"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6356:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 687,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6391:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 689,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:9",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6425:41:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 691,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6480:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:9"
									},
									"scope": 697,
									"src": "6259:248:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 698,
							"src": "240:6269:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:9"
				},
				"id": 9
			},
			"contracts/ArbCalc.sol": {
				"ast": {
					"absolutePath": "contracts/ArbCalc.sol",
					"exportedSymbols": {
						"ArbitrageCalculator": [
							1366
						],
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"IUniswapV2Pair": [
							1574
						],
						"IUniswapV3Pool": [
							277
						],
						"IUniswapV3PoolActions": [
							373
						],
						"IUniswapV3PoolDerivedState": [
							404
						],
						"IUniswapV3PoolEvents": [
							523
						],
						"IUniswapV3PoolImmutables": [
							563
						],
						"IUniswapV3PoolOwnerActions": [
							589
						],
						"IUniswapV3PoolState": [
							697
						],
						"MyMathLibrary": [
							1705
						],
						"OrderedReserves": [
							711
						],
						"Ownable": [
							147
						],
						"Reserves": [
							1528
						]
					},
					"id": 1367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1367,
							"sourceUnit": 278,
							"src": "61:66:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Math.sol",
							"file": "./libraries/Math.sol",
							"id": 701,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1367,
							"sourceUnit": 1706,
							"src": "131:30:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Reserves.sol",
							"file": "./Reserves.sol",
							"id": 702,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1367,
							"sourceUnit": 1529,
							"src": "163:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "OrderedReserves",
							"id": 711,
							"members": [
								{
									"constant": false,
									"id": 704,
									"mutability": "mutable",
									"name": "a1",
									"nameLocation": "229:2:10",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "221:10:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 703,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 706,
									"mutability": "mutable",
									"name": "b1",
									"nameLocation": "260:2:10",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "252:10:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 705,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 708,
									"mutability": "mutable",
									"name": "a2",
									"nameLocation": "277:2:10",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "269:10:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 707,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 710,
									"mutability": "mutable",
									"name": "b2",
									"nameLocation": "294:2:10",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "286:10:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 709,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "OrderedReserves",
							"nameLocation": "198:15:10",
							"nodeType": "StructDefinition",
							"scope": 1367,
							"src": "191:109:10",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 712,
										"name": "Reserves",
										"nameLocations": [
											"336:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1528,
										"src": "336:8:10"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "336:8:10"
								}
							],
							"canonicalName": "ArbitrageCalculator",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1366,
							"linearizedBaseContracts": [
								1366,
								1528
							],
							"name": "ArbitrageCalculator",
							"nameLocation": "313:19:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 716,
									"libraryName": {
										"id": 714,
										"name": "MyMathLibrary",
										"nameLocations": [
											"358:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "358:13:10"
									},
									"nodeType": "UsingForDirective",
									"src": "352:32:10",
									"typeName": {
										"id": 715,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "376:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "508:161:10",
										"statements": [
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "534:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "519:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 726,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 725,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"519:14:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 277,
																"src": "519:14:10"
															},
															"referencedDeclaration": 277,
															"src": "519:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"arguments": [
														{
															"id": 729,
															"name": "poolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "556:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 728,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "541:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$277_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "541:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "519:49:10"
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 732,
																"name": "_priceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "580:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null,
															null,
															null,
															null,
															null,
															null
														],
														"id": 733,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "579:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$__$__$__$__$__$__$",
															"typeString": "tuple(uint256,,,,,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 734,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "599:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																	"typeString": "contract IUniswapV3Pool"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "604:5:10",
															"memberName": "slot0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 610,
															"src": "599:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "599:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"src": "579:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "579:32:10"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 739,
														"name": "_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "622:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 740,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "635:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																	"typeString": "contract IUniswapV3Pool"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "640:9:10",
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 636,
															"src": "635:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$",
																"typeString": "function () view external returns (uint128)"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "635:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "622:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "622:29:10"
											}
										]
									},
									"functionSelector": "1e953b15",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityAndPrice",
									"nameLocation": "401:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "poolAddress",
												"nameLocation": "430:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "422:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:21:10"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "472:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "464:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "_priceX96",
												"nameLocation": "492:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "484:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:39:10"
									},
									"scope": 1366,
									"src": "392:277:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "798:296:10",
										"statements": [
											{
												"assignments": [
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "relLiquidity",
														"nameLocation": "863:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "855:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "855:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [
														{
															"id": 758,
															"name": "lowPoolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "899:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "highPoolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "915:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 757,
														"name": "getRelativeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "878:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "855:76:10"
											},
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "relPriceQuoteLowHigh",
														"nameLocation": "950:20:10",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "942:28:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "942:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"arguments": [
														{
															"id": 765,
															"name": "highPoolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "987:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "lowPoolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "1004:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 764,
														"name": "getPriceRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "973:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "973:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "942:77:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 769,
																	"name": "relLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "1040:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 770,
																	"name": "relPriceQuoteLowHigh",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "1055:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1040:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 772,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1039:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "31653138",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1080:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1079:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "1039:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 754,
												"id": 776,
												"nodeType": "Return",
												"src": "1032:53:10"
											}
										]
									},
									"functionSelector": "21fef881",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxProfitableAmount",
									"nameLocation": "686:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "lowPoolAddress",
												"nameLocation": "717:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "709:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "highPoolAddress",
												"nameLocation": "741:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "733:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:49:10"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "_mpa",
												"nameLocation": "787:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "779:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:14:10"
									},
									"scope": 1366,
									"src": "677:417:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "1202:249:10",
										"statements": [
											{
												"assignments": [
													788,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "liquidityPoolA",
														"nameLocation": "1222:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "1214:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 787,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1214:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 792,
												"initialValue": {
													"arguments": [
														{
															"id": 790,
															"name": "poolA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "1262:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 789,
														"name": "getLiquidityAndPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1241:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) view returns (uint256,uint256)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1241:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1213:55:10"
											},
											{
												"assignments": [
													794,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"mutability": "mutable",
														"name": "liquidityPoolB",
														"nameLocation": "1288:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "1280:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 793,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1280:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 798,
												"initialValue": {
													"arguments": [
														{
															"id": 796,
															"name": "poolB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "1328:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 795,
														"name": "getLiquidityAndPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1307:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) view returns (uint256,uint256)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1279:55:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 799,
																			"name": "liquidityPoolA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "1355:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31653138",
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1372:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "1355:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31303030303030",
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1379:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000_by_1",
																			"typeString": "int_const 1000000"
																		},
																		"value": "1000000"
																	},
																	"src": "1355:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 804,
																	"name": "liquidityPoolB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "1389:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1355:48:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 806,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1354:50:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 807,
																	"name": "liquidityPoolB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "1408:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 808,
																		"name": "liquidityPoolA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 788,
																		"src": "1425:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1440:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1425:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1408:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 812,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1407:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1354:88:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 786,
												"id": 814,
												"nodeType": "Return",
												"src": "1347:95:10"
											}
										]
									},
									"functionSelector": "9872971a",
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRelativeLiquidity",
									"nameLocation": "1111:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "poolA",
												"nameLocation": "1140:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1132:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "poolB",
												"nameLocation": "1155:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1147:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:30:10"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "_rel",
												"nameLocation": "1191:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1183:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:14:10"
									},
									"scope": 1366,
									"src": "1102:349:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "1556:218:10",
										"statements": [
											{
												"assignments": [
													null,
													826
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "highQuote",
														"nameLocation": "1577:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "1569:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1569:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 830,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "poolHigh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "1611:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "getLiquidityAndPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1590:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) view returns (uint256,uint256)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1590:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1567:53:10"
											},
											{
												"assignments": [
													null,
													832
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "lowQuote",
														"nameLocation": "1641:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "1633:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 831,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1633:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"arguments": [
														{
															"id": 834,
															"name": "poolLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "1674:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "getLiquidityAndPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1653:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) view returns (uint256,uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1653:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1631:51:10"
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 837,
														"name": "rel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "1695:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 838,
																					"name": "highQuote",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "1702:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31653138",
																					"id": 839,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1714:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "1702:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31303030303030",
																				"id": 841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1721:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000_by_1",
																					"typeString": "int_const 1000000"
																				},
																				"value": "1000000"
																			},
																			"src": "1702:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 843,
																			"name": "lowQuote",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "1731:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1702:37:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 845,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1701:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 846,
																			"name": "lowQuote",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "1743:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 847,
																			"name": "highQuote",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "1753:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1743:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 849,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1742:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1701:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1764:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1701:64:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1695:70:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "1695:70:10"
											}
										]
									},
									"functionSelector": "0d83825b",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceRatio",
									"nameLocation": "1468:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "poolHigh",
												"nameLocation": "1490:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1482:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "poolLow",
												"nameLocation": "1508:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1500:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1500:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:35:10"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "rel",
												"nameLocation": "1546:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1538:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:13:10"
									},
									"scope": 1366,
									"src": "1459:315:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "1891:229:10",
										"statements": [
											{
												"assignments": [
													867
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "reserves",
														"nameLocation": "1925:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "1902:31:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
															"typeString": "struct OrderedReserves"
														},
														"typeName": {
															"id": 866,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 865,
																"name": "OrderedReserves",
																"nameLocations": [
																	"1902:15:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 711,
																"src": "1902:15:10"
															},
															"referencedDeclaration": 711,
															"src": "1902:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderedReserves_$711_storage_ptr",
																"typeString": "struct OrderedReserves"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"nodeType": "VariableDeclarationStatement",
												"src": "1902:31:10"
											},
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"expression": {
																	"id": 869,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "1947:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																		"typeString": "struct OrderedReserves memory"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1956:2:10",
																"memberName": "a1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 704,
																"src": "1947:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 872,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "1960:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																		"typeString": "struct OrderedReserves memory"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1969:2:10",
																"memberName": "b1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 706,
																"src": "1960:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 874,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1946:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 876,
																"name": "lowerPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "1989:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 875,
															"name": "getReservesV2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "1975:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address) view returns (uint256,uint256)"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1975:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "1946:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "1946:53:10"
											},
											{
												"expression": {
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"expression": {
																	"id": 880,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "2011:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																		"typeString": "struct OrderedReserves memory"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "2020:2:10",
																"memberName": "a2",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 708,
																"src": "2011:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 883,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "2024:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																		"typeString": "struct OrderedReserves memory"
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "2033:2:10",
																"memberName": "b2",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 710,
																"src": "2024:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 885,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2010:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 887,
																"name": "higherPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "2053:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 886,
															"name": "getReservesV2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "2039:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address) view returns (uint256,uint256)"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2039:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "2010:54:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "2010:54:10"
											},
											{
												"expression": {
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 891,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "2077:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 893,
																"name": "reserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "2103:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																	"typeString": "struct OrderedReserves memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																	"typeString": "struct OrderedReserves memory"
																}
															],
															"id": 892,
															"name": "calcBorrowAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "2086:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_OrderedReserves_$711_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct OrderedReserves memory) pure returns (uint256)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2086:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2077:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "2077:35:10"
											}
										]
									},
									"functionSelector": "7d9ada3e",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBorrowAmountV2",
									"nameLocation": "1797:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "lowerPool",
												"nameLocation": "1823:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1815:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "higherPool",
												"nameLocation": "1842:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1834:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:39:10"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1884:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1876:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:16:10"
									},
									"scope": 1366,
									"src": "1788:332:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "2231:229:10",
										"statements": [
											{
												"assignments": [
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "reserves",
														"nameLocation": "2265:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "2242:31:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
															"typeString": "struct OrderedReserves"
														},
														"typeName": {
															"id": 908,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 907,
																"name": "OrderedReserves",
																"nameLocations": [
																	"2242:15:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 711,
																"src": "2242:15:10"
															},
															"referencedDeclaration": 711,
															"src": "2242:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderedReserves_$711_storage_ptr",
																"typeString": "struct OrderedReserves"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 910,
												"nodeType": "VariableDeclarationStatement",
												"src": "2242:31:10"
											},
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"expression": {
																	"id": 911,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "2287:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																		"typeString": "struct OrderedReserves memory"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "2296:2:10",
																"memberName": "a1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 704,
																"src": "2287:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 914,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "2300:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																		"typeString": "struct OrderedReserves memory"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "2309:2:10",
																"memberName": "b1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 706,
																"src": "2300:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 916,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2286:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 918,
																"name": "lowerPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "2329:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 917,
															"name": "getReservesV3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "2315:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address) view returns (uint256,uint256)"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2315:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "2286:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "2286:53:10"
											},
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"expression": {
																	"id": 922,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "2351:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																		"typeString": "struct OrderedReserves memory"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "2360:2:10",
																"memberName": "a2",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 708,
																"src": "2351:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 925,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "2364:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																		"typeString": "struct OrderedReserves memory"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "2373:2:10",
																"memberName": "b2",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 710,
																"src": "2364:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 927,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2350:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 929,
																"name": "higherPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "2393:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 928,
															"name": "getReservesV3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "2379:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address) view returns (uint256,uint256)"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2379:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "2350:54:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "2350:54:10"
											},
											{
												"expression": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 933,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2417:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 935,
																"name": "reserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "2443:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																	"typeString": "struct OrderedReserves memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																	"typeString": "struct OrderedReserves memory"
																}
															],
															"id": 934,
															"name": "calcBorrowAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "2426:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_OrderedReserves_$711_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct OrderedReserves memory) pure returns (uint256)"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2426:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2417:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "2417:35:10"
											}
										]
									},
									"functionSelector": "44401a24",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBorrowAmountV3",
									"nameLocation": "2137:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "lowerPool",
												"nameLocation": "2163:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2155:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "higherPool",
												"nameLocation": "2182:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2174:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:39:10"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2224:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2216:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:16:10"
									},
									"scope": 1366,
									"src": "2128:332:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "2566:2006:10",
										"statements": [
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "min1",
														"nameLocation": "3050:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "3042:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3042:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 950,
																"name": "reserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "3057:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																	"typeString": "struct OrderedReserves memory"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3066:2:10",
															"memberName": "a1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 704,
															"src": "3057:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 952,
																"name": "reserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "3071:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																	"typeString": "struct OrderedReserves memory"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3080:2:10",
															"memberName": "b1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 706,
															"src": "3071:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3057:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"expression": {
															"id": 957,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3099:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																"typeString": "struct OrderedReserves memory"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3108:2:10",
														"memberName": "b1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "3099:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3057:53:10",
													"trueExpression": {
														"expression": {
															"id": 955,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3085:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																"typeString": "struct OrderedReserves memory"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3094:2:10",
														"memberName": "a1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 704,
														"src": "3085:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3042:68:10"
											},
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "min2",
														"nameLocation": "3129:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "3121:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 961,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3121:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 963,
																"name": "reserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "3136:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																	"typeString": "struct OrderedReserves memory"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3145:2:10",
															"memberName": "a2",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 708,
															"src": "3136:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 965,
																"name": "reserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "3150:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																	"typeString": "struct OrderedReserves memory"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3159:2:10",
															"memberName": "b2",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 710,
															"src": "3150:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3136:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"expression": {
															"id": 970,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3178:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																"typeString": "struct OrderedReserves memory"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3187:2:10",
														"memberName": "b2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "3178:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3136:53:10",
													"trueExpression": {
														"expression": {
															"id": 968,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3164:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																"typeString": "struct OrderedReserves memory"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3173:2:10",
														"memberName": "a2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 708,
														"src": "3164:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3121:68:10"
											},
											{
												"assignments": [
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "min",
														"nameLocation": "3208:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "3200:11:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3200:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 976,
															"name": "min1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "3214:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 977,
															"name": "min2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "3221:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3214:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 980,
														"name": "min2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "3235:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3214:25:10",
													"trueExpression": {
														"id": 979,
														"name": "min1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "3228:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3200:39:10"
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "d",
														"nameLocation": "3336:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "3328:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3328:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"nodeType": "VariableDeclarationStatement",
												"src": "3328:9:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "3352:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31653234",
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3358:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000"
														},
														"value": "1e24"
													},
													"src": "3352:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 994,
															"name": "min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "3409:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "31653233",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3415:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000"
															},
															"value": "1e23"
														},
														"src": "3409:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1002,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "3466:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31653232",
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3472:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000000"
																},
																"value": "1e22"
															},
															"src": "3466:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1010,
																	"name": "min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "3523:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "31653231",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000000"
																	},
																	"value": "1e21"
																},
																"src": "3523:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1018,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "3580:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "31653230",
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3586:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100000000000000000000_by_1",
																			"typeString": "int_const 100000000000000000000"
																		},
																		"value": "1e20"
																	},
																	"src": "3580:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1026,
																			"name": "min",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "3637:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31653139",
																			"id": 1027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3643:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000_by_1",
																				"typeString": "int_const 10000000000000000000"
																			},
																			"value": "1e19"
																		},
																		"src": "3637:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1034,
																				"name": "min",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 975,
																				"src": "3694:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "31653138",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3700:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "3694:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1042,
																					"name": "min",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 975,
																					"src": "3751:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "31653137",
																					"id": 1043,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3757:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000000000000_by_1",
																						"typeString": "int_const 100000000000000000"
																					},
																					"value": "1e17"
																				},
																				"src": "3751:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1050,
																						"name": "min",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 975,
																						"src": "3808:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"hexValue": "31653136",
																						"id": 1051,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3814:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10000000000000000_by_1",
																							"typeString": "int_const 10000000000000000"
																						},
																						"value": "1e16"
																					},
																					"src": "3808:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1060,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1058,
																							"name": "min",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 975,
																							"src": "3865:3:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "31653135",
																							"id": 1059,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3871:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000_by_1",
																								"typeString": "int_const 1000000000000000"
																							},
																							"value": "1e15"
																						},
																						"src": "3865:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 1070,
																						"nodeType": "Block",
																						"src": "3918:35:10",
																						"statements": [
																							{
																								"expression": {
																									"id": 1068,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1066,
																										"name": "d",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 984,
																										"src": "3933:1:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "31653130",
																										"id": 1067,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3937:4:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_10000000000_by_1",
																											"typeString": "int_const 10000000000"
																										},
																										"value": "1e10"
																									},
																									"src": "3933:8:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1069,
																								"nodeType": "ExpressionStatement",
																								"src": "3933:8:10"
																							}
																						]
																					},
																					"id": 1071,
																					"nodeType": "IfStatement",
																					"src": "3861:92:10",
																					"trueBody": {
																						"id": 1065,
																						"nodeType": "Block",
																						"src": "3877:35:10",
																						"statements": [
																							{
																								"expression": {
																									"id": 1063,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1061,
																										"name": "d",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 984,
																										"src": "3892:1:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "31653131",
																										"id": 1062,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3896:4:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_100000000000_by_1",
																											"typeString": "int_const 100000000000"
																										},
																										"value": "1e11"
																									},
																									"src": "3892:8:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1064,
																								"nodeType": "ExpressionStatement",
																								"src": "3892:8:10"
																							}
																						]
																					}
																				},
																				"id": 1072,
																				"nodeType": "IfStatement",
																				"src": "3804:149:10",
																				"trueBody": {
																					"id": 1057,
																					"nodeType": "Block",
																					"src": "3820:35:10",
																					"statements": [
																						{
																							"expression": {
																								"id": 1055,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1053,
																									"name": "d",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 984,
																									"src": "3835:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"hexValue": "31653132",
																									"id": 1054,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3839:4:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000000000000_by_1",
																										"typeString": "int_const 1000000000000"
																									},
																									"value": "1e12"
																								},
																								"src": "3835:8:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1056,
																							"nodeType": "ExpressionStatement",
																							"src": "3835:8:10"
																						}
																					]
																				}
																			},
																			"id": 1073,
																			"nodeType": "IfStatement",
																			"src": "3747:206:10",
																			"trueBody": {
																				"id": 1049,
																				"nodeType": "Block",
																				"src": "3763:35:10",
																				"statements": [
																					{
																						"expression": {
																							"id": 1047,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 1045,
																								"name": "d",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 984,
																								"src": "3778:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"hexValue": "31653133",
																								"id": 1046,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3782:4:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10000000000000_by_1",
																									"typeString": "int_const 10000000000000"
																								},
																								"value": "1e13"
																							},
																							"src": "3778:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1048,
																						"nodeType": "ExpressionStatement",
																						"src": "3778:8:10"
																					}
																				]
																			}
																		},
																		"id": 1074,
																		"nodeType": "IfStatement",
																		"src": "3690:263:10",
																		"trueBody": {
																			"id": 1041,
																			"nodeType": "Block",
																			"src": "3706:35:10",
																			"statements": [
																				{
																					"expression": {
																						"id": 1039,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1037,
																							"name": "d",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 984,
																							"src": "3721:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "31653134",
																							"id": 1038,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3725:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100000000000000_by_1",
																								"typeString": "int_const 100000000000000"
																							},
																							"value": "1e14"
																						},
																						"src": "3721:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1040,
																					"nodeType": "ExpressionStatement",
																					"src": "3721:8:10"
																				}
																			]
																		}
																	},
																	"id": 1075,
																	"nodeType": "IfStatement",
																	"src": "3633:320:10",
																	"trueBody": {
																		"id": 1033,
																		"nodeType": "Block",
																		"src": "3649:35:10",
																		"statements": [
																			{
																				"expression": {
																					"id": 1031,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1029,
																						"name": "d",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 984,
																						"src": "3664:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "31653135",
																						"id": 1030,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3668:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000_by_1",
																							"typeString": "int_const 1000000000000000"
																						},
																						"value": "1e15"
																					},
																					"src": "3664:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1032,
																				"nodeType": "ExpressionStatement",
																				"src": "3664:8:10"
																			}
																		]
																	}
																},
																"id": 1076,
																"nodeType": "IfStatement",
																"src": "3576:377:10",
																"trueBody": {
																	"id": 1025,
																	"nodeType": "Block",
																	"src": "3592:35:10",
																	"statements": [
																		{
																			"expression": {
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1021,
																					"name": "d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "3607:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "31653136",
																					"id": 1022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3611:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000000000000000_by_1",
																						"typeString": "int_const 10000000000000000"
																					},
																					"value": "1e16"
																				},
																				"src": "3607:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1024,
																			"nodeType": "ExpressionStatement",
																			"src": "3607:8:10"
																		}
																	]
																}
															},
															"id": 1077,
															"nodeType": "IfStatement",
															"src": "3519:434:10",
															"trueBody": {
																"id": 1017,
																"nodeType": "Block",
																"src": "3535:35:10",
																"statements": [
																	{
																		"expression": {
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1013,
																				"name": "d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "3550:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "31653137",
																				"id": 1014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3554:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000000000000_by_1",
																					"typeString": "int_const 100000000000000000"
																				},
																				"value": "1e17"
																			},
																			"src": "3550:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1016,
																		"nodeType": "ExpressionStatement",
																		"src": "3550:8:10"
																	}
																]
															}
														},
														"id": 1078,
														"nodeType": "IfStatement",
														"src": "3462:491:10",
														"trueBody": {
															"id": 1009,
															"nodeType": "Block",
															"src": "3478:35:10",
															"statements": [
																{
																	"expression": {
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1005,
																			"name": "d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "3493:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "31653138",
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3497:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "3493:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1008,
																	"nodeType": "ExpressionStatement",
																	"src": "3493:8:10"
																}
															]
														}
													},
													"id": 1079,
													"nodeType": "IfStatement",
													"src": "3405:548:10",
													"trueBody": {
														"id": 1001,
														"nodeType": "Block",
														"src": "3421:35:10",
														"statements": [
															{
																"expression": {
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 997,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "3436:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31653139",
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3440:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000000000000000000_by_1",
																			"typeString": "int_const 10000000000000000000"
																		},
																		"value": "1e19"
																	},
																	"src": "3436:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1000,
																"nodeType": "ExpressionStatement",
																"src": "3436:8:10"
															}
														]
													}
												},
												"id": 1080,
												"nodeType": "IfStatement",
												"src": "3348:605:10",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "3364:35:10",
													"statements": [
														{
															"expression": {
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 989,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "3379:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31653230",
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3383:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000000000000000_by_1",
																		"typeString": "int_const 100000000000000000000"
																	},
																	"value": "1e20"
																},
																"src": "3379:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 992,
															"nodeType": "ExpressionStatement",
															"src": "3379:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													1082,
													1084,
													1086,
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "a1",
														"nameLocation": "3973:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "3966:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1081,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3966:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1084,
														"mutability": "mutable",
														"name": "a2",
														"nameLocation": "3984:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "3977:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1083,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3977:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1086,
														"mutability": "mutable",
														"name": "b1",
														"nameLocation": "3995:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "3988:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1085,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3988:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "b2",
														"nameLocation": "4006:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "3999:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1087,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3999:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1091,
																			"name": "reserves",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "4033:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																				"typeString": "struct OrderedReserves memory"
																			}
																		},
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4042:2:10",
																		"memberName": "a1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 704,
																		"src": "4033:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1093,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "4047:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4033:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4026:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1089,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4026:6:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4026:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1098,
																			"name": "reserves",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "4058:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																				"typeString": "struct OrderedReserves memory"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4067:2:10",
																		"memberName": "a2",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 708,
																		"src": "4058:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1100,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "4072:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4058:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4051:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1096,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4051:6:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4051:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1105,
																			"name": "reserves",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "4083:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																				"typeString": "struct OrderedReserves memory"
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4092:2:10",
																		"memberName": "b1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 706,
																		"src": "4083:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1107,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "4097:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4083:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4076:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1103,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4076:6:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4076:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1112,
																			"name": "reserves",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "4108:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
																				"typeString": "struct OrderedReserves memory"
																			}
																		},
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4117:2:10",
																		"memberName": "b2",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 710,
																		"src": "4108:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1114,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "4122:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4108:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4101:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4101:6:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4101:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"id": 1117,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4025:100:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256,int256,int256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3965:160:10"
											},
											{
												"assignments": [
													1120
												],
												"declarations": [
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "4145:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4138:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1119,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4138:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1121,
															"name": "a1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "4149:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1122,
															"name": "b1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "4154:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4149:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1124,
															"name": "a2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "4159:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1125,
															"name": "b2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "4164:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4159:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4149:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4138:28:10"
											},
											{
												"assignments": [
													1130
												],
												"declarations": [
													{
														"constant": false,
														"id": 1130,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "4184:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4177:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1129,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4177:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1141,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4188:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1132,
																"name": "b1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "4192:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4188:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1134,
															"name": "b2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "4197:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4188:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1136,
																	"name": "a1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "4203:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1137,
																	"name": "a2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "4208:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "4203:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1139,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4202:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4188:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4177:34:10"
											},
											{
												"assignments": [
													1143
												],
												"declarations": [
													{
														"constant": false,
														"id": 1143,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4229:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4222:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1142,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4222:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1144,
															"name": "b1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "4233:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1145,
															"name": "b2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "4238:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4233:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1147,
																		"name": "a1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "4244:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1148,
																		"name": "b2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "4249:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "4244:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1150,
																		"name": "a2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "4254:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1151,
																		"name": "b1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "4259:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "4254:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "4244:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1154,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4243:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4233:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4222:40:10"
											},
											{
												"assignments": [
													1158,
													1160
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "x1",
														"nameLocation": "4283:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4276:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1157,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4276:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "x2",
														"nameLocation": "4294:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4287:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1159,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4287:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1166,
												"initialValue": {
													"arguments": [
														{
															"id": 1162,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "4325:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1163,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "4328:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1164,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "4331:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1161,
														"name": "calcSolutionForQuadratic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "4300:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$_t_int256_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (int256,int256,int256) pure returns (int256,int256)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4275:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1168,
																					"name": "x1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "4393:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4398:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "4393:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 1173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1171,
																					"name": "x1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "4403:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1172,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1086,
																					"src": "4408:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "4403:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "4393:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1175,
																				"name": "x1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "4414:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1176,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "4419:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "4414:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4393:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4392:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 1182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1180,
																					"name": "x2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "4427:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4432:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "4427:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1183,
																					"name": "x2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "4437:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1184,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1086,
																					"src": "4442:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "4437:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "4427:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1187,
																				"name": "x2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "4448:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1188,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "4453:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "4448:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4427:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4426:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4392:64:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57726f6e6720696e707574206f72646572",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4458:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6",
																"typeString": "literal_string \"Wrong input order\""
															},
															"value": "Wrong input order"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a8586b045f2fee44c3c303ad39b7c9ef36daa4cb23a19f2c0f579de10dc32c6",
																"typeString": "literal_string \"Wrong input order\""
															}
														],
														"id": 1167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4384:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4384:94:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "4384:94:10"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1196,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "4489:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1197,
																				"name": "x1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "4499:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4504:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4499:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1200,
																				"name": "x1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "4509:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1201,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1086,
																				"src": "4514:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "4509:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4499:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1204,
																			"name": "x1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "4520:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1205,
																			"name": "b2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "4525:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "4520:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4499:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1208,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4498:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1217,
																		"name": "x2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "4557:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4549:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1215,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4549:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4549:11:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1219,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "4563:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4549:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4498:66:10",
														"trueExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "x1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "4539:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4531:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1209,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4531:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4531:11:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1213,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "4545:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4531:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4489:75:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "4489:75:10"
											}
										]
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcBorrowAmount",
									"nameLocation": "2477:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "reserves",
												"nameLocation": "2517:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2494:31:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OrderedReserves_$711_memory_ptr",
													"typeString": "struct OrderedReserves"
												},
												"typeName": {
													"id": 942,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 941,
														"name": "OrderedReserves",
														"nameLocations": [
															"2494:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 711,
														"src": "2494:15:10"
													},
													"referencedDeclaration": 711,
													"src": "2494:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OrderedReserves_$711_storage_ptr",
														"typeString": "struct OrderedReserves"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:33:10"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2558:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2550:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:16:10"
									},
									"scope": 1366,
									"src": "2468:2104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "4827:259:10",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "4845:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "4838:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1239,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4838:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1241,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4849:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "32",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4852:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "4849:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "34",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4856:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1245,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "4860:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4856:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1247,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "4864:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4856:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4849:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4838:27:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "4926:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4926:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d706c6578206e756d626572",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4933:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf",
																"typeString": "literal_string \"Complex number\""
															},
															"value": "Complex number"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c61ddef6696440c6568f957e9ac3303a6ccceab52393134da6a2cf3acbd560bf",
																"typeString": "literal_string \"Complex number\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "4918:32:10"
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "sqrtM",
														"nameLocation": "4970:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "4963:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1258,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4963:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1269,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1265,
																			"name": "m",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1240,
																			"src": "4998:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4990:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1263,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4990:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4990:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1262,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "4985:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4985:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4978:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 1260,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4978:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4978:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4963:39:10"
											},
											{
												"expression": {
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1270,
														"name": "x1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "5013:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "5019:2:10",
																		"subExpression": {
																			"id": 1271,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "5020:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1273,
																		"name": "sqrtM",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "5024:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "5019:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 1275,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5018:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5034:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1277,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "5038:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "5034:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 1279,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5033:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "5018:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5013:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "5013:27:10"
											},
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1283,
														"name": "x2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "5051:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "5057:2:10",
																		"subExpression": {
																			"id": 1284,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "5058:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1286,
																		"name": "sqrtM",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "5062:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "5057:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 1288,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5056:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5072:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1290,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "5076:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "5072:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 1292,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5071:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "5056:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5051:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "5051:27:10"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "4580:98:10",
										"text": "@dev find solution of quadratic equation: ax^2 + bx + c = 0, only return the positive solution"
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcSolutionForQuadratic",
									"nameLocation": "4693:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4735:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4728:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1227,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4754:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4747:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1229,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4747:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "4773:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4766:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1231,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4766:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:64:10"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "x1",
												"nameLocation": "4812:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4805:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1234,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "x2",
												"nameLocation": "4823:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4816:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1236,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4816:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4804:22:10"
									},
									"scope": 1366,
									"src": "4684:402:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "5219:516:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1306,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "5237:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5237:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1305,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "5230:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5230:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "5230:13:10"
											},
											{
												"assignments": [
													1312
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "_n",
														"nameLocation": "5392:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1364,
														"src": "5384:10:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1311,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5384:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1318,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1313,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "5397:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5401:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "36",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "5401:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														}
													},
													"src": "5397:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5384:22:10"
											},
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "5425:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 1364,
														"src": "5417:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5417:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"id": 1321,
													"name": "_n",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1312,
													"src": "5429:2:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5417:14:10"
											},
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1323,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "5442:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1324,
														"name": "_n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "5448:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5442:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "5442:8:10"
											},
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "xi",
														"nameLocation": "5471:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1364,
														"src": "5463:10:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5463:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"nodeType": "VariableDeclarationStatement",
												"src": "5463:10:10"
											},
											{
												"body": {
													"id": 1354,
													"nodeType": "Block",
													"src": "5497:203:10",
													"statements": [
														{
															"expression": {
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1331,
																	"name": "xi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "5512:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1332,
																					"name": "res",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1303,
																					"src": "5518:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1335,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1333,
																						"name": "c",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1320,
																						"src": "5524:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"id": 1334,
																						"name": "res",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1303,
																						"src": "5528:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5524:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5518:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1337,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5517:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5535:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5517:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5512:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1341,
															"nodeType": "ExpressionStatement",
															"src": "5512:24:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1342,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "5609:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1343,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "5615:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5609:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5620:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "5609:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1349,
															"nodeType": "IfStatement",
															"src": "5605:61:10",
															"trueBody": {
																"id": 1348,
																"nodeType": "Block",
																"src": "5626:40:10",
																"statements": [
																	{
																		"id": 1347,
																		"nodeType": "Break",
																		"src": "5645:5:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1350,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "5680:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1351,
																	"name": "xi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "5686:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5680:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1353,
															"nodeType": "ExpressionStatement",
															"src": "5680:8:10"
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5491:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 1355,
												"nodeType": "WhileStatement",
												"src": "5484:216:10"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1356,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "5710:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1357,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "5716:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5722:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "33",
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5726:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "5722:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														},
														"src": "5716:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5710:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "5710:17:10"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "5094:58:10",
										"text": "@dev Newtonâ€™s method for caculating square root of n"
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "5167:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "5180:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "5172:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:11:10"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "5214:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "5206:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5206:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5205:13:10"
									},
									"scope": 1366,
									"src": "5158:577:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1367,
							"src": "304:5436:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:5707:10"
				},
				"id": 10
			},
			"contracts/Reserves.sol": {
				"ast": {
					"absolutePath": "contracts/Reserves.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"IUniswapV2Pair": [
							1574
						],
						"IUniswapV3Pool": [
							277
						],
						"IUniswapV3PoolActions": [
							373
						],
						"IUniswapV3PoolDerivedState": [
							404
						],
						"IUniswapV3PoolEvents": [
							523
						],
						"IUniswapV3PoolImmutables": [
							563
						],
						"IUniswapV3PoolOwnerActions": [
							589
						],
						"IUniswapV3PoolState": [
							697
						],
						"Ownable": [
							147
						],
						"Reserves": [
							1528
						]
					},
					"id": 1529,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:11"
						},
						{
							"id": 1369,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "64:19:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 226,
							"src": "87:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 278,
							"src": "145:66:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 148,
							"src": "213:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Pair.sol",
							"file": "./interfaces/IUniswapV2Pair.sol",
							"id": 1373,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 1575,
							"src": "269:41:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Reserves",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1528,
							"linearizedBaseContracts": [
								1528
							],
							"name": "Reserves",
							"nameLocation": "323:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "416:153:11",
										"statements": [
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "442:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "427:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1381,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1380,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"427:14:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 277,
																"src": "427:14:11"
															},
															"referencedDeclaration": 277,
															"src": "427:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"arguments": [
														{
															"id": 1384,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "464:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1383,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "449:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$277_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "449:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "427:42:11"
											},
											{
												"assignments": [
													1388
												],
												"declarations": [
													{
														"constant": false,
														"id": 1388,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "488:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "480:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1387,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "480:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1392,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1389,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "497:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "502:6:11",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "497:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "480:30:11"
											},
											{
												"expression": {
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1393,
														"name": "reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "521:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1398,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "556:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1395,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "538:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1394,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "531:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "531:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "546:9:11",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "531:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "531:30:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "521:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1401,
												"nodeType": "ExpressionStatement",
												"src": "521:40:11"
											}
										]
									},
									"functionSelector": "1fdd03cb",
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reserves0",
									"nameLocation": "351:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "369:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "361:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:14:11"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "407:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "399:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:18:11"
									},
									"scope": 1528,
									"src": "342:227:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "655:153:11",
										"statements": [
											{
												"assignments": [
													1412
												],
												"declarations": [
													{
														"constant": false,
														"id": 1412,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "681:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "666:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1411,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1410,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"666:14:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 277,
																"src": "666:14:11"
															},
															"referencedDeclaration": 277,
															"src": "666:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1416,
												"initialValue": {
													"arguments": [
														{
															"id": 1414,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "703:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1413,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "688:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$277_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "688:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "666:42:11"
											},
											{
												"assignments": [
													1418
												],
												"declarations": [
													{
														"constant": false,
														"id": 1418,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "727:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "719:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1417,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "719:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1419,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "736:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "741:6:11",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 544,
														"src": "736:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "719:30:11"
											},
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1423,
														"name": "reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "760:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1428,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "795:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1425,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "777:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1424,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "770:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "770:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "785:9:11",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "770:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "770:30:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "760:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "760:40:11"
											}
										]
									},
									"functionSelector": "b49bbce5",
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reserves1",
									"nameLocation": "590:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "608:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "600:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:14:11"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "646:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "638:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:18:11"
									},
									"scope": 1528,
									"src": "581:227:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "909:247:11",
										"statements": [
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "935:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "920:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1443,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1442,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"920:14:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 277,
																"src": "920:14:11"
															},
															"referencedDeclaration": 277,
															"src": "920:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"arguments": [
														{
															"id": 1446,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "957:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1445,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "942:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$277_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "920:42:11"
											},
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "981:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "973:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1449,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "973:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1454,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1451,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "990:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "995:6:11",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "990:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "990:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "973:30:11"
											},
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "1022:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "1014:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1014:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1457,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "1031:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$277",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1036:6:11",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 544,
														"src": "1031:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1014:30:11"
											},
											{
												"expression": {
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1461,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "1055:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1466,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "1091:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1463,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "1073:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1462,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1066:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1066:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1081:9:11",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "1066:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1066:30:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1055:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "1055:41:11"
											},
											{
												"expression": {
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1470,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "1107:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1475,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "1143:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1472,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1456,
																		"src": "1125:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1471,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1118:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1118:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1133:9:11",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "1118:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1118:30:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1107:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "1107:41:11"
											}
										]
									},
									"functionSelector": "7232688e",
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesV3",
									"nameLocation": "825:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "847:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "839:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:14:11"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "882:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "874:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "900:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "892:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:36:11"
									},
									"scope": 1528,
									"src": "816:340:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "1257:247:11",
										"statements": [
											{
												"assignments": [
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "1283:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1526,
														"src": "1268:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Pair_$1574",
															"typeString": "contract IUniswapV2Pair"
														},
														"typeName": {
															"id": 1490,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1489,
																"name": "IUniswapV2Pair",
																"nameLocations": [
																	"1268:14:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1574,
																"src": "1268:14:11"
															},
															"referencedDeclaration": 1574,
															"src": "1268:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1574",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"arguments": [
														{
															"id": 1493,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "1305:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1492,
														"name": "IUniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "1290:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1574_$",
															"typeString": "type(contract IUniswapV2Pair)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$1574",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1268:42:11"
											},
											{
												"assignments": [
													1497
												],
												"declarations": [
													{
														"constant": false,
														"id": 1497,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "1329:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1526,
														"src": "1321:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1496,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1321:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1501,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1498,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1338:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1574",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1343:6:11",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1540,
														"src": "1338:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1321:30:11"
											},
											{
												"assignments": [
													1503
												],
												"declarations": [
													{
														"constant": false,
														"id": 1503,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "1370:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1526,
														"src": "1362:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1502,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1362:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1507,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1504,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1379:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1574",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1384:6:11",
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1545,
														"src": "1379:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1362:30:11"
											},
											{
												"expression": {
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1508,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "1403:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1513,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "1439:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1510,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "1421:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1509,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1414:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1414:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1429:9:11",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "1414:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1414:30:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1403:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "1403:41:11"
											},
											{
												"expression": {
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1517,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "1455:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1522,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "1491:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1519,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "1473:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1518,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1466:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1466:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1481:9:11",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "1466:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1466:30:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1455:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "1455:41:11"
											}
										]
									},
									"functionSelector": "ec0a63d8",
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesV2",
									"nameLocation": "1173:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "1195:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1187:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:14:11"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1230:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1222:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1248:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1240:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:36:11"
									},
									"scope": 1528,
									"src": "1164:340:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1529,
							"src": "314:1193:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1468:11"
				},
				"id": 11
			},
			"contracts/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1574
						]
					},
					"id": 1575,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1574,
							"linearizedBaseContracts": [
								1574
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "76:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "107:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:12"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "140:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:9:12"
									},
									"scope": 1574,
									"src": "98:51:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "164:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:2:12"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "196:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:9:12"
									},
									"scope": 1574,
									"src": "155:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "220:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:12"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "252:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:9:12"
									},
									"scope": 1574,
									"src": "211:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "276:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:12"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "321:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "313:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1547,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "339:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "331:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1549,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "356:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "349:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1551,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:63:12"
									},
									"scope": 1574,
									"src": "267:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "391:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "404:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "396:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "424:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "416:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "436:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "463:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "448:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "448:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:73:12"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:0:12"
									},
									"scope": 1574,
									"src": "382:96:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "493:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "506:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "498:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:12:12"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:0:12"
									},
									"scope": 1574,
									"src": "484:35:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "534:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:2:12"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:0:12"
									},
									"scope": 1574,
									"src": "525:25:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1575,
							"src": "66:487:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:515:12"
				},
				"id": 12
			},
			"contracts/libraries/Math.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Math.sol",
					"exportedSymbols": {
						"MyMathLibrary": [
							1705
						]
					},
					"id": 1706,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1576,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyMathLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1705,
							"linearizedBaseContracts": [
								1705
							],
							"name": "MyMathLibrary",
							"nameLocation": "75:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "160:39:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1585,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "178:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1586,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "182:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "178:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1589,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "190:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "178:13:13",
													"trueExpression": {
														"id": 1588,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "186:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1591,
												"nodeType": "Return",
												"src": "171:20:13"
											}
										]
									},
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "105:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "116:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "109:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1577,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "109:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "126:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "119:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1579,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "119:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:20:13"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "152:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1582,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "152:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:8:13"
									},
									"scope": 1705,
									"src": "96:103:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "271:43:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1602,
															"name": "a1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "289:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1603,
															"name": "b2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "294:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "289:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1606,
														"name": "b2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "304:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "289:17:13",
													"trueExpression": {
														"id": 1605,
														"name": "a1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "299:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1601,
												"id": 1608,
												"nodeType": "Return",
												"src": "282:24:13"
											}
										]
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "216:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "a1",
												"nameLocation": "227:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "220:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1594,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "220:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "b2",
												"nameLocation": "237:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "230:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1596,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "230:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:21:13"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "264:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1599,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "264:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:8:13"
									},
									"scope": 1705,
									"src": "207:107:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "374:81:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1618,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "392:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "397:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "392:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "384:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "384:15:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "384:15:13"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1623,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "417:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "429:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "422:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1624,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "422:6:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "422:9:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "417:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1633,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "444:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "417:28:13",
													"trueExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "441:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "434:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1629,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "434:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "434:9:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1616,
												"id": 1635,
												"nodeType": "Return",
												"src": "410:35:13"
											}
										]
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "330:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "341:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "334:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1611,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:10:13"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "367:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1614,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:13"
									},
									"scope": 1705,
									"src": "321:134:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "524:516:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1645,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "542:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "546:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "542:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1644,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "535:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "535:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "535:13:13"
											},
											{
												"assignments": [
													1651
												],
												"declarations": [
													{
														"constant": false,
														"id": 1651,
														"mutability": "mutable",
														"name": "_n",
														"nameLocation": "697:2:13",
														"nodeType": "VariableDeclaration",
														"scope": 1703,
														"src": "689:10:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1650,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "689:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1657,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1652,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "702:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "706:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "36",
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "710:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "706:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														}
													},
													"src": "702:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "689:22:13"
											},
											{
												"assignments": [
													1659
												],
												"declarations": [
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "730:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 1703,
														"src": "722:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "722:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1661,
												"initialValue": {
													"id": 1660,
													"name": "_n",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1651,
													"src": "734:2:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "722:14:13"
											},
											{
												"expression": {
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1662,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "747:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1663,
														"name": "_n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "753:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "747:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "747:8:13"
											},
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "xi",
														"nameLocation": "776:2:13",
														"nodeType": "VariableDeclaration",
														"scope": 1703,
														"src": "768:10:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "768:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1668,
												"nodeType": "VariableDeclarationStatement",
												"src": "768:10:13"
											},
											{
												"body": {
													"id": 1693,
													"nodeType": "Block",
													"src": "802:203:13",
													"statements": [
														{
															"expression": {
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1670,
																	"name": "xi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "817:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1671,
																					"name": "res",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1642,
																					"src": "823:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1672,
																						"name": "c",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1659,
																						"src": "829:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"id": 1673,
																						"name": "res",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1642,
																						"src": "833:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "829:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "823:13:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1676,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "822:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "840:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "822:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "817:24:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1680,
															"nodeType": "ExpressionStatement",
															"src": "817:24:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1681,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "914:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1682,
																		"name": "xi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "920:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "914:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "925:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "914:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1688,
															"nodeType": "IfStatement",
															"src": "910:61:13",
															"trueBody": {
																"id": 1687,
																"nodeType": "Block",
																"src": "931:40:13",
																"statements": [
																	{
																		"id": 1686,
																		"nodeType": "Break",
																		"src": "950:5:13"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1689,
																	"name": "res",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "985:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1690,
																	"name": "xi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "991:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "985:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1692,
															"nodeType": "ExpressionStatement",
															"src": "985:8:13"
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "796:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 1694,
												"nodeType": "WhileStatement",
												"src": "789:216:13"
											},
											{
												"expression": {
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1695,
														"name": "res",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "1015:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1696,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "1021:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1027:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "33",
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1031:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1027:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														},
														"src": "1021:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1015:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "1015:17:13"
											}
										]
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "472:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "485:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "477:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:11:13"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "519:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "511:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:13:13"
									},
									"scope": 1705,
									"src": "463:577:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1706,
							"src": "67:978:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:1005:13"
				},
				"id": 13
			}
		}
	}
}